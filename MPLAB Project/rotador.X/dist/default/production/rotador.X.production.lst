

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jun 27 17:30:57 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.05
    38                           ; Generated 20/12/2018 GMT
    39                           ; 
    40                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0001                     _TMR0	set	1
   228  0017                     _CCP1CON	set	23
   229  0015                     _CCPR1L	set	21
   230  0012                     _T2CON	set	18
   231  0007                     _PORTCbits	set	7
   232  000B                     _INTCONbits	set	11
   233  001E                     _ADRESH	set	30
   234  001F                     _ADCON0bits	set	31
   235  001F                     _ADCON0	set	31
   236  0005                     _PORTA	set	5
   237  0013                     _SSPBUF	set	19
   238  0014                     _SSPCON	set	20
   239  0092                     _PR2	set	146
   240  0081                     _OPTION_REG	set	129
   241  0081                     _OPTION_REGbits	set	129
   242  0086                     _TRISB	set	134
   243  0087                     _TRISC	set	135
   244  009E                     _ADRESL	set	158
   245  009F                     _ADCON1	set	159
   246  0091                     _SSPCON2	set	145
   247  0094                     _SSPSTAT	set	148
   248  0093                     _SSPADD	set	147
   249  0428                     _TRISA0	set	1064
   250  043C                     _TRISC4	set	1084
   251  043B                     _TRISC3	set	1083
   252  0189                     _ANSELH	set	393
   253  0188                     _ANSEL	set	392
   254  0188                     _ANSELbits	set	392
   255                           
   256                           	psect	strings
   257  0800                     __pstrings:	
   258  0800                     stringtab:	
   259  0800                     __stringtab:	
   260                           
   261                           ;	String table - string pointers are 1 byte each
   262  0800  1BFF               	btfsc	btemp+1,7
   263  0801  280A               	ljmp	stringcode
   264  0802  1383               	bcf	3,7
   265  0803  187F               	btfsc	btemp+1,0
   266  0804  1783               	bsf	3,7
   267  0805  0800               	movf	0,w
   268  0806  0A84               	incf	4,f
   269  0807  1903               	skipnz
   270  0808  0AFF               	incf	btemp+1,f
   271  0809  0008               	return
   272  080A                     stringcode:	
   273  080A                     stringdir:	
   274  080A  3008               	movlw	high stringdir
   275  080B  008A               	movwf	10
   276  080C  0804               	movf	4,w
   277  080D  0A84               	incf	4,f
   278  080E  0782               	addwf	2,f
   279  080F                     __stringbase:	
   280  080F  3400               	retlw	0
   281  0810                     __end_of__stringtab:	
   282  0810                     STR_4:	
   283  0810  3448               	retlw	72	;'H'
   284  0811  3469               	retlw	105	;'i'
   285  0812  3467               	retlw	103	;'g'
   286  0813  3468               	retlw	104	;'h'
   287  0814  3420               	retlw	32	;' '
   288  0815  3452               	retlw	82	;'R'
   289  0816  346F               	retlw	111	;'o'
   290  0817  3474               	retlw	116	;'t'
   291  0818  3461               	retlw	97	;'a'
   292  0819  3474               	retlw	116	;'t'
   293  081A  3469               	retlw	105	;'i'
   294  081B  346F               	retlw	111	;'o'
   295  081C  346E               	retlw	110	;'n'
   296  081D  3420               	retlw	32	;' '
   297  081E  3444               	retlw	68	;'D'
   298  081F  342E               	retlw	46	;'.'
   299  0820  3400               	retlw	0
   300  0821                     STR_3:	
   301  0821  3452               	retlw	82	;'R'
   302  0822  3450               	retlw	80	;'P'
   303  0823  344D               	retlw	77	;'M'
   304  0824  3420               	retlw	32	;' '
   305  0825  3441               	retlw	65	;'A'
   306  0826  3442               	retlw	66	;'B'
   307  0827  3441               	retlw	65	;'A'
   308  0828  3449               	retlw	73	;'I'
   309  0829  3458               	retlw	88	;'X'
   310  082A  344F               	retlw	79	;'O'
   311  082B  3420               	retlw	32	;' '
   312  082C  3464               	retlw	100	;'d'
   313  082D  3465               	retlw	101	;'e'
   314  082E  3420               	retlw	32	;' '
   315  082F  3478               	retlw	120	;'x'
   316  0830  3478               	retlw	120	;'x'
   317  0831  3400               	retlw	0
   318  0832                     STR_2:	
   319  0832  3449               	retlw	73	;'I'
   320  0833  346E               	retlw	110	;'n'
   321  0834  3469               	retlw	105	;'i'
   322  0835  3463               	retlw	99	;'c'
   323  0836  3469               	retlw	105	;'i'
   324  0837  3461               	retlw	97	;'a'
   325  0838  346E               	retlw	110	;'n'
   326  0839  3464               	retlw	100	;'d'
   327  083A  346F               	retlw	111	;'o'
   328  083B  342E               	retlw	46	;'.'
   329  083C  342E               	retlw	46	;'.'
   330  083D  342E               	retlw	46	;'.'
   331  083E  3400               	retlw	0
   332  083F                     STR_6:	
   333  083F  3420               	retlw	32	;' '
   334  0840  3420               	retlw	32	;' '
   335  0841  3420               	retlw	32	;' '
   336  0842  3420               	retlw	32	;' '
   337  0843  3420               	retlw	32	;' '
   338  0844  3420               	retlw	32	;' '
   339  0845  3420               	retlw	32	;' '
   340  0846  3420               	retlw	32	;' '
   341  0847  3400               	retlw	0
   342  0848                     STR_5:	
   343  0848  3452               	retlw	82	;'R'
   344  0849  3450               	retlw	80	;'P'
   345  084A  344D               	retlw	77	;'M'
   346  084B  343A               	retlw	58	;':'
   347  084C  3420               	retlw	32	;' '
   348  084D  3400               	retlw	0
   349  084E                     STR_1:	
   350  084E  3478               	retlw	120	;'x'
   351  084F  3478               	retlw	120	;'x'
   352  0850  3478               	retlw	120	;'x'
   353  0851  3400               	retlw	0
   354                           
   355                           ; #config settings
   356  0000                     
   357                           	psect	cinit
   358  000F                     start_initialization:	
   359  000F                     __initialization:	
   360                           
   361                           ; Clear objects allocated to BANK0
   362  000F  1283               	bcf	3,5	;RP0=0, select bank0
   363  0010  1303               	bcf	3,6	;RP1=0, select bank0
   364  0011  01E9               	clrf	__pbssBANK0& (0+127)
   365  0012  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   366  0013  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   367  0014  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   368  0015  01ED               	clrf	(__pbssBANK0+4)& (0+127)
   369  0016                     end_of_initialization:	
   370                           ;End of C runtime variable initialization code
   371                           
   372  0016                     __end_of__initialization:	
   373  0016  0183               	clrf	3
   374  0017  120A  118A  2F0F   	ljmp	_main	;jump to C main() function
   375                           
   376                           	psect	bssBANK0
   377  0069                     __pbssBANK0:	
   378  0069                     _RPMCON:	
   379  0069                     	ds	5
   380                           
   381                           	psect	cstackCOMMON
   382  0070                     __pcstackCOMMON:	
   383  0070                     ?_medeRPM:	
   384  0070                     ?_I2C_wait:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ?_I2C_start:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ?_I2C_stop:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ?_I2C_write:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ?_lcd_send_data:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_lcd_send_cmd:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_lcd_clear:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_lcd_init:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_adc_init:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_adc_do:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_my_isr:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ??_my_isr:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_main:	
   421                           ; 1 bytes @ 0x0
   422                           
   423                           
   424                           ; 1 bytes @ 0x0
   425  0070                     	ds	2
   426  0072                     ?_strcpy:	
   427  0072                     ??_I2C_wait:	
   428                           ; 1 bytes @ 0x2
   429                           
   430  0072                     ??_I2C_start:	
   431                           ; 1 bytes @ 0x2
   432                           
   433  0072                     ??_I2C_stop:	
   434                           ; 1 bytes @ 0x2
   435                           
   436  0072                     ??_I2C_write:	
   437                           ; 1 bytes @ 0x2
   438                           
   439  0072                     ??_adc_init:	
   440                           ; 1 bytes @ 0x2
   441                           
   442  0072                     ??_adc_do:	
   443                           ; 1 bytes @ 0x2
   444                           
   445  0072                     ?__Umul8_16:	
   446                           ; 1 bytes @ 0x2
   447                           
   448  0072                     ?___wmul:	
   449                           ; 2 bytes @ 0x2
   450                           
   451  0072                     ?___lwdiv:	
   452                           ; 2 bytes @ 0x2
   453                           
   454  0072                     ?___lldiv:	
   455                           ; 2 bytes @ 0x2
   456                           
   457  0072                     ?___fldiv:	
   458                           ; 4 bytes @ 0x2
   459                           
   460  0072                     ?___xxtofl:	
   461                           ; 4 bytes @ 0x2
   462                           
   463  0072                     I2C_write@data:	
   464                           ; 4 bytes @ 0x2
   465                           
   466  0072                     strcpy@from:	
   467                           ; 1 bytes @ 0x2
   468                           
   469  0072                     __Umul8_16@multiplicand:	
   470                           ; 1 bytes @ 0x2
   471                           
   472  0072                     ___wmul@multiplier:	
   473                           ; 1 bytes @ 0x2
   474                           
   475  0072                     ___lwdiv@divisor:	
   476                           ; 2 bytes @ 0x2
   477                           
   478  0072                     ___lldiv@divisor:	
   479                           ; 2 bytes @ 0x2
   480                           
   481  0072                     ___fldiv@a:	
   482                           ; 4 bytes @ 0x2
   483                           
   484  0072                     ___xxtofl@val:	
   485                           ; 4 bytes @ 0x2
   486                           
   487                           
   488                           ; 4 bytes @ 0x2
   489  0072                     	ds	1
   490  0073                     ??_strcpy:	
   491  0073                     ??_lcd_send_data:	
   492                           ; 1 bytes @ 0x3
   493                           
   494  0073                     ??_lcd_send_cmd:	
   495                           ; 1 bytes @ 0x3
   496                           
   497                           
   498                           ; 1 bytes @ 0x3
   499  0073                     	ds	1
   500  0074                     ??__Umul8_16:	
   501  0074                     adc_do@w:	
   502                           ; 1 bytes @ 0x4
   503                           
   504  0074                     strcpy@to:	
   505                           ; 1 bytes @ 0x4
   506                           
   507  0074                     ___wmul@multiplicand:	
   508                           ; 1 bytes @ 0x4
   509                           
   510  0074                     ___lwdiv@dividend:	
   511                           ; 2 bytes @ 0x4
   512                           
   513                           
   514                           ; 2 bytes @ 0x4
   515  0074                     	ds	1
   516  0075                     lcd_send_data@data:	
   517  0075                     lcd_send_cmd@data:	
   518                           ; 1 bytes @ 0x5
   519                           
   520  0075                     strcpy@cp:	
   521                           ; 1 bytes @ 0x5
   522                           
   523                           
   524                           ; 1 bytes @ 0x5
   525  0075                     	ds	1
   526  0076                     ??___wmul:	
   527  0076                     ??___lwdiv:	
   528                           ; 1 bytes @ 0x6
   529                           
   530  0076                     ??___xxtofl:	
   531                           ; 1 bytes @ 0x6
   532                           
   533  0076                     lcd_send_data@data_l:	
   534                           ; 1 bytes @ 0x6
   535                           
   536  0076                     lcd_send_cmd@data_l:	
   537                           ; 1 bytes @ 0x6
   538                           
   539  0076                     ___wmul@product:	
   540                           ; 1 bytes @ 0x6
   541                           
   542  0076                     __Umul8_16@product:	
   543                           ; 2 bytes @ 0x6
   544                           
   545  0076                     ___lldiv@dividend:	
   546                           ; 2 bytes @ 0x6
   547                           
   548  0076                     ___fldiv@b:	
   549                           ; 4 bytes @ 0x6
   550                           
   551                           
   552                           ; 4 bytes @ 0x6
   553  0076                     	ds	1
   554  0077                     lcd_send_data@data_u:	
   555  0077                     lcd_send_cmd@data_u:	
   556                           ; 1 bytes @ 0x7
   557                           
   558  0077                     ___lwdiv@quotient:	
   559                           ; 1 bytes @ 0x7
   560                           
   561                           
   562                           ; 2 bytes @ 0x7
   563  0077                     	ds	1
   564  0078                     ??_lcd_clear:	
   565  0078                     ??_lcd_init:	
   566                           ; 1 bytes @ 0x8
   567                           
   568  0078                     ?_lcd_send_string:	
   569                           ; 1 bytes @ 0x8
   570                           
   571  0078                     lcd_clear@i:	
   572                           ; 1 bytes @ 0x8
   573                           
   574  0078                     lcd_send_string@str:	
   575                           ; 2 bytes @ 0x8
   576                           
   577  0078                     __Umul8_16@word_mpld:	
   578                           ; 2 bytes @ 0x8
   579                           
   580                           
   581                           ; 2 bytes @ 0x8
   582  0078                     	ds	1
   583  0079                     ___lwdiv@counter:	
   584                           
   585                           ; 1 bytes @ 0x9
   586  0079                     	ds	1
   587  007A                     ??_lcd_send_string:	
   588  007A                     ??___lldiv:	
   589                           ; 1 bytes @ 0xA
   590                           
   591  007A                     __Umul8_16@multiplier:	
   592                           ; 1 bytes @ 0xA
   593                           
   594  007A                     lcd_clear@i_236:	
   595                           ; 1 bytes @ 0xA
   596                           
   597                           
   598                           ; 2 bytes @ 0xA
   599  007A                     	ds	2
   600                           
   601                           	psect	cstackBANK0
   602  0020                     __pcstackBANK0:	
   603  0020                     ??___fldiv:	
   604  0020                     ___xxtofl@sign:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0020                     ___lldiv@quotient:	
   608                           ; 1 bytes @ 0x0
   609                           
   610                           
   611                           ; 4 bytes @ 0x0
   612  0020                     	ds	1
   613  0021                     ___xxtofl@exp:	
   614                           
   615                           ; 1 bytes @ 0x1
   616  0021                     	ds	1
   617  0022                     ___xxtofl@arg:	
   618                           
   619                           ; 4 bytes @ 0x2
   620  0022                     	ds	2
   621  0024                     ___lldiv@counter:	
   622                           
   623                           ; 1 bytes @ 0x4
   624  0024                     	ds	1
   625  0025                     ?_I2C_init:	
   626  0025                     I2C_init@clock:	
   627                           ; 1 bytes @ 0x5
   628                           
   629  0025                     ___fldiv@rem:	
   630                           ; 4 bytes @ 0x5
   631                           
   632                           
   633                           ; 4 bytes @ 0x5
   634  0025                     	ds	1
   635  0026                     ?___flmul:	
   636  0026                     ___flmul@b:	
   637                           ; 4 bytes @ 0x6
   638                           
   639                           
   640                           ; 4 bytes @ 0x6
   641  0026                     	ds	3
   642  0029                     ??_I2C_init:	
   643  0029                     ___fldiv@sign:	
   644                           ; 1 bytes @ 0x9
   645                           
   646                           
   647                           ; 1 bytes @ 0x9
   648  0029                     	ds	1
   649  002A                     ___fldiv@new_exp:	
   650  002A                     ___flmul@a:	
   651                           ; 2 bytes @ 0xA
   652                           
   653                           
   654                           ; 4 bytes @ 0xA
   655  002A                     	ds	2
   656  002C                     ___fldiv@grs:	
   657                           
   658                           ; 4 bytes @ 0xC
   659  002C                     	ds	2
   660  002E                     ??___flmul:	
   661                           
   662                           ; 1 bytes @ 0xE
   663  002E                     	ds	2
   664  0030                     ___fldiv@bexp:	
   665                           
   666                           ; 1 bytes @ 0x10
   667  0030                     	ds	1
   668  0031                     ___fldiv@aexp:	
   669                           
   670                           ; 1 bytes @ 0x11
   671  0031                     	ds	2
   672  0033                     ___flmul@sign:	
   673                           
   674                           ; 1 bytes @ 0x13
   675  0033                     	ds	1
   676  0034                     ___flmul@grs:	
   677                           
   678                           ; 4 bytes @ 0x14
   679  0034                     	ds	4
   680  0038                     ___flmul@aexp:	
   681                           
   682                           ; 1 bytes @ 0x18
   683  0038                     	ds	1
   684  0039                     ___flmul@bexp:	
   685                           
   686                           ; 1 bytes @ 0x19
   687  0039                     	ds	1
   688  003A                     ___flmul@prod:	
   689                           
   690                           ; 4 bytes @ 0x1A
   691  003A                     	ds	4
   692  003E                     ___flmul@temp:	
   693                           
   694                           ; 2 bytes @ 0x1E
   695  003E                     	ds	2
   696  0040                     ?___fltol:	
   697  0040                     ?___fladd:	
   698                           ; 4 bytes @ 0x20
   699                           
   700  0040                     ___fltol@f1:	
   701                           ; 4 bytes @ 0x20
   702                           
   703  0040                     ___fladd@b:	
   704                           ; 4 bytes @ 0x20
   705                           
   706                           
   707                           ; 4 bytes @ 0x20
   708  0040                     	ds	4
   709  0044                     ??___fltol:	
   710  0044                     ___fladd@a:	
   711                           ; 1 bytes @ 0x24
   712                           
   713                           
   714                           ; 4 bytes @ 0x24
   715  0044                     	ds	4
   716  0048                     ??___fladd:	
   717                           
   718                           ; 1 bytes @ 0x28
   719  0048                     	ds	1
   720  0049                     ___fltol@sign1:	
   721                           
   722                           ; 1 bytes @ 0x29
   723  0049                     	ds	1
   724  004A                     ___fltol@exp1:	
   725                           
   726                           ; 1 bytes @ 0x2A
   727  004A                     	ds	6
   728  0050                     ___fladd@signs:	
   729                           
   730                           ; 1 bytes @ 0x30
   731  0050                     	ds	1
   732  0051                     ___fladd@aexp:	
   733                           
   734                           ; 1 bytes @ 0x31
   735  0051                     	ds	1
   736  0052                     ___fladd@bexp:	
   737                           
   738                           ; 1 bytes @ 0x32
   739  0052                     	ds	1
   740  0053                     ___fladd@grs:	
   741                           
   742                           ; 1 bytes @ 0x33
   743  0053                     	ds	1
   744  0054                     ??_medeRPM:	
   745                           
   746                           ; 1 bytes @ 0x34
   747  0054                     	ds	4
   748  0058                     medeRPM@unidade:	
   749                           
   750                           ; 2 bytes @ 0x38
   751  0058                     	ds	2
   752  005A                     medeRPM@dezena:	
   753                           
   754                           ; 2 bytes @ 0x3A
   755  005A                     	ds	2
   756  005C                     medeRPM@centena:	
   757                           
   758                           ; 2 bytes @ 0x3C
   759  005C                     	ds	2
   760  005E                     medeRPM@tpr:	
   761                           
   762                           ; 4 bytes @ 0x3E
   763  005E                     	ds	4
   764  0062                     medeRPM@bHiTAP:	
   765                           
   766                           ; 2 bytes @ 0x42
   767  0062                     	ds	2
   768  0064                     medeRPM@aux:	
   769                           
   770                           ; 2 bytes @ 0x44
   771  0064                     	ds	2
   772  0066                     ??_main:	
   773                           
   774                           ; 1 bytes @ 0x46
   775  0066                     	ds	3
   776                           
   777                           	psect	maintext
   778  070F                     __pmaintext:	
   779 ;;
   780 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   781 ;;
   782 ;; *************** function _main *****************
   783 ;; Defined at:
   784 ;;		line 165 in file "newmain.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : B00/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   798 ;;      Params:         0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0
   800 ;;      Temps:          0       3       0       0       0
   801 ;;      Totals:         0       3       0       0       0
   802 ;;Total ram usage:        3 bytes
   803 ;; Hardware stack levels required when called:    5
   804 ;; This function calls:
   805 ;;		_I2C_init
   806 ;;		_adc_do
   807 ;;		_adc_init
   808 ;;		_lcd_clear
   809 ;;		_lcd_init
   810 ;;		_lcd_send_cmd
   811 ;;		_lcd_send_string
   812 ;;		_medeRPM
   813 ;;		_strcpy
   814 ;; This function is called by:
   815 ;;		Startup code after reset
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           
   820                           ;psect for function _main
   821  070F                     _main:	
   822                           
   823                           ;newmain.c: 167:     strcpy(RPMCON.value, "xxx");
   824                           
   825                           ;incstack = 0
   826                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   827  070F  303F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   828  0710  1283               	bcf	3,5	;RP0=0, select bank0
   829  0711  1303               	bcf	3,6	;RP1=0, select bank0
   830  0712  00E6               	movwf	??_main
   831  0713  0866               	movf	??_main,w
   832  0714  00F2               	movwf	strcpy@from
   833  0715  306B               	movlw	(low ((_RPMCON| 0+2)))& (0+255)
   834  0716  120A  158A  2343  120A  118A  	fcall	_strcpy
   835                           
   836                           ;newmain.c: 171:     TRISC = 0x00;
   837  071B  1683               	bsf	3,5	;RP0=1, select bank1
   838  071C  1303               	bcf	3,6	;RP1=0, select bank1
   839  071D  0187               	clrf	7	;volatile
   840                           
   841                           ;newmain.c: 172:     TRISB = 0xFF;
   842  071E  30FF               	movlw	255
   843  071F  0086               	movwf	6	;volatile
   844                           
   845                           ;newmain.c: 173:     ANSEL = 0x01;
   846  0720  3001               	movlw	1
   847  0721  1683               	bsf	3,5	;RP0=1, select bank3
   848  0722  1703               	bsf	3,6	;RP1=1, select bank3
   849  0723  0088               	movwf	8	;volatile
   850                           
   851                           ;newmain.c: 174:     ANSELH = 0x00;
   852  0724  0189               	clrf	9	;volatile
   853                           
   854                           ;newmain.c: 175:     PORTCbits.RC2 = 0;
   855  0725  1283               	bcf	3,5	;RP0=0, select bank0
   856  0726  1303               	bcf	3,6	;RP1=0, select bank0
   857  0727  1107               	bcf	7,2	;volatile
   858                           
   859                           ;newmain.c: 176:     PORTCbits.RC5 = 0;
   860  0728  1287               	bcf	7,5	;volatile
   861                           
   862                           ;newmain.c: 177:     OPTION_REGbits.T0CS = 0;
   863  0729  1683               	bsf	3,5	;RP0=1, select bank1
   864  072A  1303               	bcf	3,6	;RP1=0, select bank1
   865  072B  1281               	bcf	1,5	;volatile
   866                           
   867                           ;newmain.c: 178:     OPTION_REGbits.PSA = 0 ;
   868  072C  1181               	bcf	1,3	;volatile
   869                           
   870                           ;newmain.c: 179:     OPTION_REG = OPTION_REG | 0x07 ;
   871  072D  0801               	movf	1,w	;volatile
   872  072E  3807               	iorlw	7
   873  072F  0081               	movwf	1	;volatile
   874                           
   875                           ;newmain.c: 180:     INTCONbits.GIE = 1;
   876  0730  178B               	bsf	11,7	;volatile
   877                           
   878                           ;newmain.c: 181:     INTCONbits.INTE = 1;
   879  0731  160B               	bsf	11,4	;volatile
   880                           
   881                           ;newmain.c: 182:     OPTION_REGbits.INTEDG = 1;
   882  0732  1701               	bsf	1,6	;volatile
   883                           
   884                           ;newmain.c: 185:     PR2 = 0xFF;
   885  0733  30FF               	movlw	255
   886  0734  0092               	movwf	18	;volatile
   887                           
   888                           ;newmain.c: 186:     T2CON = 0x06;
   889  0735  3006               	movlw	6
   890  0736  1283               	bcf	3,5	;RP0=0, select bank0
   891  0737  1303               	bcf	3,6	;RP1=0, select bank0
   892  0738  0092               	movwf	18	;volatile
   893                           
   894                           ;newmain.c: 187:     CCPR1L = 0x00;
   895  0739  0195               	clrf	21	;volatile
   896                           
   897                           ;newmain.c: 188:     CCP1CON = 0x0C;
   898  073A  300C               	movlw	12
   899  073B  0097               	movwf	23	;volatile
   900                           
   901                           ;newmain.c: 191:     I2C_init(100000);
   902  073C  3000               	movlw	0
   903  073D  00A8               	movwf	I2C_init@clock+3
   904  073E  3001               	movlw	1
   905  073F  00A7               	movwf	I2C_init@clock+2
   906  0740  3086               	movlw	134
   907  0741  00A6               	movwf	I2C_init@clock+1
   908  0742  30A0               	movlw	160
   909  0743  00A5               	movwf	I2C_init@clock
   910  0744  120A  158A  23F6  120A  118A  	fcall	_I2C_init
   911                           
   912                           ;newmain.c: 193:     lcd_init ();
   913  0749  120A  158A  232C  120A  118A  	fcall	_lcd_init
   914                           
   915                           ;newmain.c: 194:     adc_init();
   916  074E  120A  158A  231A  120A  118A  	fcall	_adc_init
   917                           
   918                           ;newmain.c: 195:     lcd_clear();
   919  0753  120A  118A  27BA  120A  118A  	fcall	_lcd_clear
   920                           
   921                           ;newmain.c: 196:     lcd_send_cmd (0x80);
   922  0758  3080               	movlw	128
   923  0759  120A  158A  2467  120A  118A  	fcall	_lcd_send_cmd
   924                           
   925                           ;newmain.c: 197:     lcd_send_string("Iniciando...");
   926  075E  3023               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   927  075F  00F8               	movwf	lcd_send_string@str
   928  0760  3080               	movlw	128
   929  0761  00F9               	movwf	lcd_send_string@str+1
   930  0762  120A  158A  2382  120A  118A  	fcall	_lcd_send_string
   931                           
   932                           ;newmain.c: 198:     _delay((unsigned long)((500)*(10000000/4000.0)));
   933  0767  3007               	movlw	7
   934  0768  1283               	bcf	3,5	;RP0=0, select bank0
   935  0769  1303               	bcf	3,6	;RP1=0, select bank0
   936  076A  00E8               	movwf	??_main+2
   937  076B  3058               	movlw	88
   938  076C  00E7               	movwf	??_main+1
   939  076D  3059               	movlw	89
   940  076E  00E6               	movwf	??_main
   941  076F                     u3577:	
   942  076F  0BE6               	decfsz	??_main,f
   943  0770  2F6F               	goto	u3577
   944  0771  0BE7               	decfsz	??_main+1,f
   945  0772  2F6F               	goto	u3577
   946  0773  0BE8               	decfsz	??_main+2,f
   947  0774  2F6F               	goto	u3577
   948  0775  2F8D               	goto	l2511
   949  0776                     l2517:	
   950                           
   951                           ;newmain.c: 208:         lcd_send_cmd (0x80);
   952  0776  3080               	movlw	128
   953  0777  120A  158A  2467  120A  118A  	fcall	_lcd_send_cmd
   954                           
   955                           ;newmain.c: 209:         lcd_send_string("RPM ABAIXO de xx");
   956  077C  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   957  077D  2F85               	goto	L1
   958  077E                     l2521:	
   959                           ;newmain.c: 211:         }
   960                           
   961                           
   962                           ;newmain.c: 214:                 lcd_send_cmd (0x80);
   963  077E  3080               	movlw	128
   964  077F  120A  158A  2467  120A  118A  	fcall	_lcd_send_cmd
   965                           
   966                           ;newmain.c: 215:                 lcd_send_string("High Rotation D.");
   967  0784  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   968  0785                     L1:	
   969  0785  00F8               	movwf	lcd_send_string@str
   970  0786  3080               	movlw	128
   971  0787  00F9               	movwf	lcd_send_string@str+1
   972  0788  120A  158A  2382  120A  118A  	fcall	_lcd_send_string
   973  078D                     l2511:	
   974                           ;newmain.c: 217:             }
   975                           
   976                           
   977                           ;newmain.c: 201:     {;newmain.c: 204:         CCPR1L = adc_do();
   978  078D  120A  158A  23C8  120A  118A  	fcall	_adc_do
   979  0792  1283               	bcf	3,5	;RP0=0, select bank0
   980  0793  1303               	bcf	3,6	;RP1=0, select bank0
   981  0794  0095               	movwf	21	;volatile
   982                           
   983                           ;newmain.c: 205:         medeRPM();
   984  0795  120A  118A  255E  120A  118A  	fcall	_medeRPM
   985                           
   986                           ;newmain.c: 207:         if (RPMCON.bLWR){
   987  079A  1283               	bcf	3,5	;RP0=0, select bank0
   988  079B  1303               	bcf	3,6	;RP1=0, select bank0
   989  079C  18E9               	btfsc	_RPMCON,1
   990  079D  2F76               	goto	l2517
   991                           
   992                           ;newmain.c: 213:             if ((RPMCON.bHRD)){
   993                           
   994                           ;newmain.c: 212:         else {
   995  079E  1969               	btfsc	_RPMCON,2
   996  079F  2F7E               	goto	l2521
   997                           
   998                           ;newmain.c: 219:                 lcd_send_cmd (0x80);
   999  07A0  3080               	movlw	128
  1000  07A1  120A  158A  2467  120A  118A  	fcall	_lcd_send_cmd
  1001                           
  1002                           ;newmain.c: 220:                 lcd_send_string("RPM: ");
  1003  07A6  3039               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1004  07A7  00F8               	movwf	lcd_send_string@str
  1005  07A8  3080               	movlw	128
  1006  07A9  00F9               	movwf	lcd_send_string@str+1
  1007  07AA  120A  158A  2382  120A  118A  	fcall	_lcd_send_string
  1008                           
  1009                           ;newmain.c: 221:                 lcd_send_string(RPMCON.value);
  1010  07AF  306B               	movlw	(low ((_RPMCON| 0+2)))& (0+255)
  1011  07B0  00F8               	movwf	lcd_send_string@str
  1012  07B1  3000               	movlw	0
  1013  07B2  00F9               	movwf	lcd_send_string@str+1
  1014  07B3  120A  158A  2382  120A  118A  	fcall	_lcd_send_string
  1015                           
  1016                           ;newmain.c: 222:                 lcd_send_string("        ");
  1017  07B8  3030               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1018  07B9  2F85               	goto	L1
  1019  07BA                     __end_of_main:	
  1020                           
  1021                           	psect	text1
  1022  0B43                     __ptext1:	
  1023 ;; *************** function _strcpy *****************
  1024 ;; Defined at:
  1025 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strcpy.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;  to              1    wreg     PTR unsigned char 
  1028 ;;		 -> RPMCON(5), 
  1029 ;;  from            1    2[COMMON] PTR const unsigned char 
  1030 ;;		 -> STR_1(4), 
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;  to              1    4[COMMON] PTR unsigned char 
  1033 ;;		 -> RPMCON(5), 
  1034 ;;  cp              1    5[COMMON] PTR unsigned char 
  1035 ;;		 -> RPMCON(5), 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      PTR unsigned char 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1045 ;;      Params:         1       0       0       0       0
  1046 ;;      Locals:         2       0       0       0       0
  1047 ;;      Temps:          1       0       0       0       0
  1048 ;;      Totals:         4       0       0       0       0
  1049 ;;Total ram usage:        4 bytes
  1050 ;; Hardware stack levels used:    2
  1051 ;; Hardware stack levels required when called:    1
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           
  1060                           ;psect for function _strcpy
  1061  0B43                     _strcpy:	
  1062                           
  1063                           ;incstack = 0
  1064                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  1065                           ;strcpy@to stored from wreg
  1066  0B43  00F4               	movwf	strcpy@to
  1067  0B44  0874               	movf	strcpy@to,w
  1068  0B45  00F3               	movwf	??_strcpy
  1069  0B46  0873               	movf	??_strcpy,w
  1070  0B47  00F5               	movwf	strcpy@cp
  1071  0B48                     l2395:	
  1072  0B48  0872               	movf	strcpy@from,w
  1073  0B49  0084               	movwf	4
  1074  0B4A  120A  158A  200A  120A  158A  	fcall	stringdir
  1075  0B4F  00F3               	movwf	??_strcpy
  1076  0B50  0875               	movf	strcpy@cp,w
  1077  0B51  0084               	movwf	4
  1078  0B52  0873               	movf	??_strcpy,w
  1079  0B53  1383               	bcf	3,7	;select IRP bank0
  1080  0B54  0080               	movwf	0
  1081  0B55  0800               	movf	0,w
  1082  0B56  1903               	btfsc	3,2
  1083  0B57  0008               	return
  1084  0B58  3001               	movlw	1
  1085  0B59  00F3               	movwf	??_strcpy
  1086  0B5A  0873               	movf	??_strcpy,w
  1087  0B5B  07F5               	addwf	strcpy@cp,f
  1088  0B5C  3001               	movlw	1
  1089  0B5D  00F3               	movwf	??_strcpy
  1090  0B5E  0873               	movf	??_strcpy,w
  1091  0B5F  07F2               	addwf	strcpy@from,f
  1092  0B60  2B48               	goto	l2395
  1093  0B61                     __end_of_strcpy:	
  1094                           
  1095                           	psect	text2
  1096  055E                     __ptext2:	
  1097 ;; *************** function _medeRPM *****************
  1098 ;; Defined at:
  1099 ;;		line 232 in file "newmain.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  tpr             4   62[BANK0 ] float 
  1104 ;;  aux             2   68[BANK0 ] unsigned int 
  1105 ;;  bHiTAP          2   66[BANK0 ] unsigned int 
  1106 ;;  centena         2   60[BANK0 ] unsigned short 
  1107 ;;  dezena          2   58[BANK0 ] unsigned short 
  1108 ;;  unidade         2   56[BANK0 ] unsigned short 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1118 ;;      Params:         0       0       0       0       0
  1119 ;;      Locals:         0      14       0       0       0
  1120 ;;      Temps:          0       4       0       0       0
  1121 ;;      Totals:         0      18       0       0       0
  1122 ;;Total ram usage:       18 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; Hardware stack levels required when called:    3
  1125 ;; This function calls:
  1126 ;;		___fladd
  1127 ;;		___fldiv
  1128 ;;		___flmul
  1129 ;;		___fltol
  1130 ;;		___lwdiv
  1131 ;;		___wmul
  1132 ;;		___xxtofl
  1133 ;; This function is called by:
  1134 ;;		_main
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           
  1139                           ;psect for function _medeRPM
  1140  055E                     _medeRPM:	
  1141                           
  1142                           ;incstack = 0
  1143                           ; Regs used in _medeRPM: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1144  055E  1283               	bcf	3,5	;RP0=0, select bank0
  1145  055F  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0560  01E2               	clrf	medeRPM@bHiTAP
  1147  0561  01E3               	clrf	medeRPM@bHiTAP+1
  1148                           
  1149                           ;newmain.c: 236:     RPMCON.bLWR = 0;
  1150  0562  10E9               	bcf	_RPMCON,1
  1151                           
  1152                           ;newmain.c: 237:     RPMCON.bPDT = 0;
  1153  0563  1069               	bcf	_RPMCON,0
  1154                           
  1155                           ;newmain.c: 238:     RPMCON.bHRD = 0;
  1156  0564  1169               	bcf	_RPMCON,2
  1157                           
  1158                           ;newmain.c: 239:     TMR0 = 0x00;
  1159  0565  0181               	clrf	1	;volatile
  1160                           
  1161                           ;newmain.c: 240:     INTCONbits.T0IF = 0;
  1162  0566  110B               	bcf	11,2	;volatile
  1163  0567                     l133:	
  1164                           ;newmain.c: 253:     }
  1165                           
  1166                           ;newmain.c: 241:     while(RPMCON.bPDT == 0){
  1167                           
  1168                           
  1169                           ;newmain.c: 241:     while(RPMCON.bPDT == 0){
  1170  0567  1869               	btfsc	_RPMCON,0
  1171  0568  2D7C               	goto	l138
  1172                           
  1173                           ;newmain.c: 243:         if (INTCONbits.T0IF == 1){
  1174  0569  1D0B               	btfss	11,2	;volatile
  1175  056A  2D73               	goto	l2417
  1176                           
  1177                           ;newmain.c: 244:             TMR0 = 0x00;
  1178  056B  0181               	clrf	1	;volatile
  1179                           
  1180                           ;newmain.c: 245:             INTCONbits.T0IF = 0;
  1181  056C  110B               	bcf	11,2	;volatile
  1182                           
  1183                           ;newmain.c: 246:             bHiTAP += 1;
  1184  056D  3001               	movlw	1
  1185  056E  07E2               	addwf	medeRPM@bHiTAP,f
  1186  056F  1803               	skipnc
  1187  0570  0AE3               	incf	medeRPM@bHiTAP+1,f
  1188  0571  3000               	movlw	0
  1189  0572  07E3               	addwf	medeRPM@bHiTAP+1,f
  1190  0573                     l2417:	
  1191                           
  1192                           ;newmain.c: 248:         if (bHiTAP >= 37 ){
  1193  0573  3000               	movlw	0
  1194  0574  0263               	subwf	medeRPM@bHiTAP+1,w
  1195  0575  3025               	movlw	37
  1196  0576  1903               	skipnz
  1197  0577  0262               	subwf	medeRPM@bHiTAP,w
  1198  0578  1C03               	skipc
  1199  0579  2D67               	goto	l133
  1200  057A                     l2419:	
  1201                           
  1202                           ;newmain.c: 249:             RPMCON.bLWR = 1;
  1203  057A  14E9               	bsf	_RPMCON,1
  1204                           
  1205                           ;newmain.c: 250:             return;
  1206  057B  0008               	return
  1207  057C                     l138:	
  1208                           
  1209                           ;newmain.c: 255:     RPMCON.bPDT = 0;
  1210  057C  1069               	bcf	_RPMCON,0
  1211                           
  1212                           ;newmain.c: 256:     TMR0 = 0x00;
  1213  057D  0181               	clrf	1	;volatile
  1214                           
  1215                           ;newmain.c: 257:     INTCONbits.T0IF = 0;
  1216  057E  110B               	bcf	11,2	;volatile
  1217                           
  1218                           ;newmain.c: 258:     bHiTAP = 0;
  1219  057F  01E2               	clrf	medeRPM@bHiTAP
  1220  0580  01E3               	clrf	medeRPM@bHiTAP+1
  1221  0581                     l139:	
  1222                           ;newmain.c: 271:     }
  1223                           
  1224                           ;newmain.c: 259:     while(RPMCON.bPDT == 0){
  1225                           
  1226                           
  1227                           ;newmain.c: 259:     while(RPMCON.bPDT == 0){
  1228  0581  1869               	btfsc	_RPMCON,0
  1229  0582  2D95               	goto	l2435
  1230                           
  1231                           ;newmain.c: 261:         if (INTCONbits.T0IF == 1){
  1232  0583  1D0B               	btfss	11,2	;volatile
  1233  0584  2D8D               	goto	l2431
  1234                           
  1235                           ;newmain.c: 263:             TMR0 = 0x00;
  1236  0585  0181               	clrf	1	;volatile
  1237                           
  1238                           ;newmain.c: 264:             INTCONbits.T0IF = 0;
  1239  0586  110B               	bcf	11,2	;volatile
  1240                           
  1241                           ;newmain.c: 265:             bHiTAP += 1;
  1242  0587  3001               	movlw	1
  1243  0588  07E2               	addwf	medeRPM@bHiTAP,f
  1244  0589  1803               	skipnc
  1245  058A  0AE3               	incf	medeRPM@bHiTAP+1,f
  1246  058B  3000               	movlw	0
  1247  058C  07E3               	addwf	medeRPM@bHiTAP+1,f
  1248  058D                     l2431:	
  1249                           
  1250                           ;newmain.c: 267:         if (bHiTAP >= 37 ){
  1251  058D  3000               	movlw	0
  1252  058E  0263               	subwf	medeRPM@bHiTAP+1,w
  1253  058F  3025               	movlw	37
  1254  0590  1903               	skipnz
  1255  0591  0262               	subwf	medeRPM@bHiTAP,w
  1256  0592  1803               	btfsc	3,0
  1257  0593  2D7A               	goto	l2419
  1258  0594  2D81               	goto	l139
  1259  0595                     l2435:	
  1260                           
  1261                           ;newmain.c: 272:     RPMCON.bTAP = TMR0;
  1262  0595  0801               	movf	1,w	;volatile
  1263  0596  00D4               	movwf	??_medeRPM
  1264  0597  0854               	movf	??_medeRPM,w
  1265  0598  00EA               	movwf	_RPMCON+1
  1266                           
  1267                           ;newmain.c: 273:     tpr = ((float)RPMCON.bTAP * (106.0 / 1000000.0));
  1268  0599  3038               	movlw	56
  1269  059A  00A9               	movwf	___flmul@b+3
  1270  059B  30DE               	movlw	222
  1271  059C  00A8               	movwf	___flmul@b+2
  1272  059D  304C               	movlw	76
  1273  059E  00A7               	movwf	___flmul@b+1
  1274  059F  3051               	movlw	81
  1275  05A0  00A6               	movwf	___flmul@b
  1276  05A1  086A               	movf	_RPMCON+1,w
  1277  05A2  00D4               	movwf	??_medeRPM
  1278  05A3  01D5               	clrf	??_medeRPM+1
  1279  05A4  01D6               	clrf	??_medeRPM+2
  1280  05A5  01D7               	clrf	??_medeRPM+3
  1281  05A6  0857               	movf	??_medeRPM+3,w
  1282  05A7  00F5               	movwf	___xxtofl@val+3
  1283  05A8  0856               	movf	??_medeRPM+2,w
  1284  05A9  00F4               	movwf	___xxtofl@val+2
  1285  05AA  0855               	movf	??_medeRPM+1,w
  1286  05AB  00F3               	movwf	___xxtofl@val+1
  1287  05AC  0854               	movf	??_medeRPM,w
  1288  05AD  00F2               	movwf	___xxtofl@val
  1289  05AE  3000               	movlw	0
  1290  05AF  120A  158A  25B2  120A  118A  	fcall	___xxtofl
  1291  05B4  0875               	movf	?___xxtofl+3,w
  1292  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  1293  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  1294  05B7  00AD               	movwf	___flmul@a+3
  1295  05B8  0874               	movf	?___xxtofl+2,w
  1296  05B9  00AC               	movwf	___flmul@a+2
  1297  05BA  0873               	movf	?___xxtofl+1,w
  1298  05BB  00AB               	movwf	___flmul@a+1
  1299  05BC  0872               	movf	?___xxtofl,w
  1300  05BD  00AA               	movwf	___flmul@a
  1301  05BE  120A  118A  201A  120A  118A  	fcall	___flmul
  1302  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1303  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1304  05C5  0829               	movf	?___flmul+3,w
  1305  05C6  00E1               	movwf	medeRPM@tpr+3
  1306  05C7  0828               	movf	?___flmul+2,w
  1307  05C8  00E0               	movwf	medeRPM@tpr+2
  1308  05C9  0827               	movf	?___flmul+1,w
  1309  05CA  00DF               	movwf	medeRPM@tpr+1
  1310  05CB  0826               	movf	?___flmul,w
  1311  05CC  00DE               	movwf	medeRPM@tpr
  1312                           
  1313                           ;newmain.c: 274:     tpr += ((float)bHiTAP * (27136.0 / 1000000.0) );
  1314  05CD  0862               	movf	medeRPM@bHiTAP,w
  1315  05CE  00F2               	movwf	___xxtofl@val
  1316  05CF  0863               	movf	medeRPM@bHiTAP+1,w
  1317  05D0  00F3               	movwf	___xxtofl@val+1
  1318  05D1  01F4               	clrf	___xxtofl@val+2
  1319  05D2  01F5               	clrf	___xxtofl@val+3
  1320  05D3  3000               	movlw	0
  1321  05D4  120A  158A  25B2  120A  118A  	fcall	___xxtofl
  1322  05D9  0875               	movf	?___xxtofl+3,w
  1323  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  1324  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  1325  05DC  00AD               	movwf	___flmul@a+3
  1326  05DD  0874               	movf	?___xxtofl+2,w
  1327  05DE  00AC               	movwf	___flmul@a+2
  1328  05DF  0873               	movf	?___xxtofl+1,w
  1329  05E0  00AB               	movwf	___flmul@a+1
  1330  05E1  0872               	movf	?___xxtofl,w
  1331  05E2  00AA               	movwf	___flmul@a
  1332  05E3  303C               	movlw	60
  1333  05E4  00A9               	movwf	___flmul@b+3
  1334  05E5  30DE               	movlw	222
  1335  05E6  00A8               	movwf	___flmul@b+2
  1336  05E7  304C               	movlw	76
  1337  05E8  00A7               	movwf	___flmul@b+1
  1338  05E9  3051               	movlw	81
  1339  05EA  00A6               	movwf	___flmul@b
  1340  05EB  120A  118A  201A  120A  118A  	fcall	___flmul
  1341  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  1342  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  1343  05F2  0829               	movf	?___flmul+3,w
  1344  05F3  00C3               	movwf	___fladd@b+3
  1345  05F4  0828               	movf	?___flmul+2,w
  1346  05F5  00C2               	movwf	___fladd@b+2
  1347  05F6  0827               	movf	?___flmul+1,w
  1348  05F7  00C1               	movwf	___fladd@b+1
  1349  05F8  0826               	movf	?___flmul,w
  1350  05F9  00C0               	movwf	___fladd@b
  1351  05FA  0861               	movf	medeRPM@tpr+3,w
  1352  05FB  00C7               	movwf	___fladd@a+3
  1353  05FC  0860               	movf	medeRPM@tpr+2,w
  1354  05FD  00C6               	movwf	___fladd@a+2
  1355  05FE  085F               	movf	medeRPM@tpr+1,w
  1356  05FF  00C5               	movwf	___fladd@a+1
  1357  0600  085E               	movf	medeRPM@tpr,w
  1358  0601  00C4               	movwf	___fladd@a
  1359  0602  120A  118A  232F  120A  118A  	fcall	___fladd
  1360  0607  1283               	bcf	3,5	;RP0=0, select bank0
  1361  0608  1303               	bcf	3,6	;RP1=0, select bank0
  1362  0609  0843               	movf	?___fladd+3,w
  1363  060A  00E1               	movwf	medeRPM@tpr+3
  1364  060B  0842               	movf	?___fladd+2,w
  1365  060C  00E0               	movwf	medeRPM@tpr+2
  1366  060D  0841               	movf	?___fladd+1,w
  1367  060E  00DF               	movwf	medeRPM@tpr+1
  1368  060F  0840               	movf	?___fladd,w
  1369  0610  00DE               	movwf	medeRPM@tpr
  1370                           
  1371                           ;newmain.c: 275:     tpr = (24.0*tpr) ;
  1372  0611  3041               	movlw	65
  1373  0612  00A9               	movwf	___flmul@b+3
  1374  0613  30C0               	movlw	192
  1375  0614  00A8               	movwf	___flmul@b+2
  1376  0615  3000               	movlw	0
  1377  0616  00A7               	movwf	___flmul@b+1
  1378  0617  3000               	movlw	0
  1379  0618  00A6               	movwf	___flmul@b
  1380  0619  0861               	movf	medeRPM@tpr+3,w
  1381  061A  00AD               	movwf	___flmul@a+3
  1382  061B  0860               	movf	medeRPM@tpr+2,w
  1383  061C  00AC               	movwf	___flmul@a+2
  1384  061D  085F               	movf	medeRPM@tpr+1,w
  1385  061E  00AB               	movwf	___flmul@a+1
  1386  061F  085E               	movf	medeRPM@tpr,w
  1387  0620  00AA               	movwf	___flmul@a
  1388  0621  120A  118A  201A  120A  118A  	fcall	___flmul
  1389  0626  1283               	bcf	3,5	;RP0=0, select bank0
  1390  0627  1303               	bcf	3,6	;RP1=0, select bank0
  1391  0628  0829               	movf	?___flmul+3,w
  1392  0629  00E1               	movwf	medeRPM@tpr+3
  1393  062A  0828               	movf	?___flmul+2,w
  1394  062B  00E0               	movwf	medeRPM@tpr+2
  1395  062C  0827               	movf	?___flmul+1,w
  1396  062D  00DF               	movwf	medeRPM@tpr+1
  1397  062E  0826               	movf	?___flmul,w
  1398  062F  00DE               	movwf	medeRPM@tpr
  1399                           
  1400                           ;newmain.c: 276:     aux = 60.0 / tpr ;
  1401  0630  3042               	movlw	66
  1402  0631  00F9               	movwf	___fldiv@b+3
  1403  0632  3070               	movlw	112
  1404  0633  00F8               	movwf	___fldiv@b+2
  1405  0634  3000               	movlw	0
  1406  0635  00F7               	movwf	___fldiv@b+1
  1407  0636  3000               	movlw	0
  1408  0637  00F6               	movwf	___fldiv@b
  1409  0638  0861               	movf	medeRPM@tpr+3,w
  1410  0639  00F5               	movwf	___fldiv@a+3
  1411  063A  0860               	movf	medeRPM@tpr+2,w
  1412  063B  00F4               	movwf	___fldiv@a+2
  1413  063C  085F               	movf	medeRPM@tpr+1,w
  1414  063D  00F3               	movwf	___fldiv@a+1
  1415  063E  085E               	movf	medeRPM@tpr,w
  1416  063F  00F2               	movwf	___fldiv@a
  1417  0640  120A  158A  2657  120A  118A  	fcall	___fldiv
  1418  0645  0875               	movf	?___fldiv+3,w
  1419  0646  1283               	bcf	3,5	;RP0=0, select bank0
  1420  0647  1303               	bcf	3,6	;RP1=0, select bank0
  1421  0648  00C3               	movwf	___fltol@f1+3
  1422  0649  0874               	movf	?___fldiv+2,w
  1423  064A  00C2               	movwf	___fltol@f1+2
  1424  064B  0873               	movf	?___fldiv+1,w
  1425  064C  00C1               	movwf	___fltol@f1+1
  1426  064D  0872               	movf	?___fldiv,w
  1427  064E  00C0               	movwf	___fltol@f1
  1428  064F  120A  158A  2545  120A  118A  	fcall	___fltol
  1429  0654  1283               	bcf	3,5	;RP0=0, select bank0
  1430  0655  1303               	bcf	3,6	;RP1=0, select bank0
  1431  0656  0841               	movf	?___fltol+1,w
  1432  0657  00E5               	movwf	medeRPM@aux+1
  1433  0658  0840               	movf	?___fltol,w
  1434  0659  00E4               	movwf	medeRPM@aux
  1435                           
  1436                           ;newmain.c: 277:     aux = aux*1.03;
  1437  065A  0864               	movf	medeRPM@aux,w
  1438  065B  00F2               	movwf	___xxtofl@val
  1439  065C  0865               	movf	medeRPM@aux+1,w
  1440  065D  00F3               	movwf	___xxtofl@val+1
  1441  065E  01F4               	clrf	___xxtofl@val+2
  1442  065F  01F5               	clrf	___xxtofl@val+3
  1443  0660  3000               	movlw	0
  1444  0661  120A  158A  25B2  120A  118A  	fcall	___xxtofl
  1445  0666  0875               	movf	?___xxtofl+3,w
  1446  0667  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0668  1303               	bcf	3,6	;RP1=0, select bank0
  1448  0669  00AD               	movwf	___flmul@a+3
  1449  066A  0874               	movf	?___xxtofl+2,w
  1450  066B  00AC               	movwf	___flmul@a+2
  1451  066C  0873               	movf	?___xxtofl+1,w
  1452  066D  00AB               	movwf	___flmul@a+1
  1453  066E  0872               	movf	?___xxtofl,w
  1454  066F  00AA               	movwf	___flmul@a
  1455  0670  303F               	movlw	63
  1456  0671  00A9               	movwf	___flmul@b+3
  1457  0672  3083               	movlw	131
  1458  0673  00A8               	movwf	___flmul@b+2
  1459  0674  30D7               	movlw	215
  1460  0675  00A7               	movwf	___flmul@b+1
  1461  0676  300A               	movlw	10
  1462  0677  00A6               	movwf	___flmul@b
  1463  0678  120A  118A  201A  120A  118A  	fcall	___flmul
  1464  067D  1283               	bcf	3,5	;RP0=0, select bank0
  1465  067E  1303               	bcf	3,6	;RP1=0, select bank0
  1466  067F  0829               	movf	?___flmul+3,w
  1467  0680  00C3               	movwf	___fltol@f1+3
  1468  0681  0828               	movf	?___flmul+2,w
  1469  0682  00C2               	movwf	___fltol@f1+2
  1470  0683  0827               	movf	?___flmul+1,w
  1471  0684  00C1               	movwf	___fltol@f1+1
  1472  0685  0826               	movf	?___flmul,w
  1473  0686  00C0               	movwf	___fltol@f1
  1474  0687  120A  158A  2545  120A  118A  	fcall	___fltol
  1475  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1476  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1477  068E  0841               	movf	?___fltol+1,w
  1478  068F  00E5               	movwf	medeRPM@aux+1
  1479  0690  0840               	movf	?___fltol,w
  1480  0691  00E4               	movwf	medeRPM@aux
  1481                           
  1482                           ;newmain.c: 285:         centena = ( aux / 100 );
  1483  0692  3064               	movlw	100
  1484  0693  00F2               	movwf	___lwdiv@divisor
  1485  0694  3000               	movlw	0
  1486  0695  00F3               	movwf	___lwdiv@divisor+1
  1487  0696  0865               	movf	medeRPM@aux+1,w
  1488  0697  00F5               	movwf	___lwdiv@dividend+1
  1489  0698  0864               	movf	medeRPM@aux,w
  1490  0699  00F4               	movwf	___lwdiv@dividend
  1491  069A  120A  158A  242B  120A  118A  	fcall	___lwdiv
  1492  069F  0873               	movf	?___lwdiv+1,w
  1493  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  1494  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  1495  06A2  00DD               	movwf	medeRPM@centena+1
  1496  06A3  0872               	movf	?___lwdiv,w
  1497  06A4  00DC               	movwf	medeRPM@centena
  1498                           
  1499                           ;newmain.c: 286:         dezena = (aux/10) - (centena*10);
  1500  06A5  300A               	movlw	10
  1501  06A6  00F2               	movwf	___lwdiv@divisor
  1502  06A7  3000               	movlw	0
  1503  06A8  00F3               	movwf	___lwdiv@divisor+1
  1504  06A9  0865               	movf	medeRPM@aux+1,w
  1505  06AA  00F5               	movwf	___lwdiv@dividend+1
  1506  06AB  0864               	movf	medeRPM@aux,w
  1507  06AC  00F4               	movwf	___lwdiv@dividend
  1508  06AD  120A  158A  242B  120A  118A  	fcall	___lwdiv
  1509  06B2  0872               	movf	?___lwdiv,w
  1510  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  1511  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  1512  06B5  00D4               	movwf	??_medeRPM
  1513  06B6  0873               	movf	?___lwdiv+1,w
  1514  06B7  00D5               	movwf	??_medeRPM+1
  1515  06B8  085D               	movf	medeRPM@centena+1,w
  1516  06B9  00F3               	movwf	___wmul@multiplier+1
  1517  06BA  085C               	movf	medeRPM@centena,w
  1518  06BB  00F2               	movwf	___wmul@multiplier
  1519  06BC  30F6               	movlw	246
  1520  06BD  00F4               	movwf	___wmul@multiplicand
  1521  06BE  30FF               	movlw	255
  1522  06BF  00F5               	movwf	___wmul@multiplicand+1
  1523  06C0  120A  158A  2361  120A  118A  	fcall	___wmul
  1524  06C5  0872               	movf	?___wmul,w
  1525  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  1526  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  1527  06C8  0754               	addwf	??_medeRPM,w
  1528  06C9  00DA               	movwf	medeRPM@dezena
  1529  06CA  0873               	movf	?___wmul+1,w
  1530  06CB  1803               	skipnc
  1531  06CC  0A73               	incf	?___wmul+1,w
  1532  06CD  0755               	addwf	??_medeRPM+1,w
  1533  06CE  00DB               	movwf	medeRPM@dezena+1
  1534                           
  1535                           ;newmain.c: 287:         unidade = aux - (centena*100) - (dezena*10);
  1536  06CF  085D               	movf	medeRPM@centena+1,w
  1537  06D0  00F3               	movwf	___wmul@multiplier+1
  1538  06D1  085C               	movf	medeRPM@centena,w
  1539  06D2  00F2               	movwf	___wmul@multiplier
  1540  06D3  309C               	movlw	156
  1541  06D4  00F4               	movwf	___wmul@multiplicand
  1542  06D5  30FF               	movlw	255
  1543  06D6  00F5               	movwf	___wmul@multiplicand+1
  1544  06D7  120A  158A  2361  120A  118A  	fcall	___wmul
  1545  06DC  0872               	movf	?___wmul,w
  1546  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  1547  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  1548  06DF  00D4               	movwf	??_medeRPM
  1549  06E0  0873               	movf	?___wmul+1,w
  1550  06E1  00D5               	movwf	??_medeRPM+1
  1551  06E2  085B               	movf	medeRPM@dezena+1,w
  1552  06E3  00F3               	movwf	___wmul@multiplier+1
  1553  06E4  085A               	movf	medeRPM@dezena,w
  1554  06E5  00F2               	movwf	___wmul@multiplier
  1555  06E6  30F6               	movlw	246
  1556  06E7  00F4               	movwf	___wmul@multiplicand
  1557  06E8  30FF               	movlw	255
  1558  06E9  00F5               	movwf	___wmul@multiplicand+1
  1559  06EA  120A  158A  2361   	fcall	___wmul
  1560  06ED  0872               	movf	?___wmul,w
  1561  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  1562  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  1563  06F0  0754               	addwf	??_medeRPM,w
  1564  06F1  00D6               	movwf	??_medeRPM+2
  1565  06F2  0873               	movf	?___wmul+1,w
  1566  06F3  1803               	skipnc
  1567  06F4  0A73               	incf	?___wmul+1,w
  1568  06F5  0755               	addwf	??_medeRPM+1,w
  1569  06F6  00D7               	movwf	??_medeRPM+3
  1570  06F7  0864               	movf	medeRPM@aux,w
  1571  06F8  0756               	addwf	??_medeRPM+2,w
  1572  06F9  00D8               	movwf	medeRPM@unidade
  1573  06FA  0865               	movf	medeRPM@aux+1,w
  1574  06FB  1803               	skipnc
  1575  06FC  0A65               	incf	medeRPM@aux+1,w
  1576  06FD  0757               	addwf	??_medeRPM+3,w
  1577  06FE  00D9               	movwf	medeRPM@unidade+1
  1578                           
  1579                           ;newmain.c: 289:         RPMCON.value[0] = 0x30 + centena ;
  1580  06FF  085C               	movf	medeRPM@centena,w
  1581  0700  3E30               	addlw	48
  1582  0701  00D4               	movwf	??_medeRPM
  1583  0702  0854               	movf	??_medeRPM,w
  1584  0703  00EB               	movwf	_RPMCON+2
  1585                           
  1586                           ;newmain.c: 290:         RPMCON.value[1] = 0x30 + dezena ;
  1587  0704  085A               	movf	medeRPM@dezena,w
  1588  0705  3E30               	addlw	48
  1589  0706  00D4               	movwf	??_medeRPM
  1590  0707  0854               	movf	??_medeRPM,w
  1591  0708  00EC               	movwf	_RPMCON+3
  1592                           
  1593                           ;newmain.c: 291:         RPMCON.value[2] = 0x30 + unidade;
  1594  0709  0858               	movf	medeRPM@unidade,w
  1595  070A  3E30               	addlw	48
  1596  070B  00D4               	movwf	??_medeRPM
  1597  070C  0854               	movf	??_medeRPM,w
  1598  070D  00ED               	movwf	_RPMCON+4
  1599  070E  0008               	return
  1600  070F                     __end_of_medeRPM:	
  1601                           
  1602                           	psect	text3
  1603  0DB2                     __ptext3:	
  1604 ;; *************** function ___xxtofl *****************
  1605 ;; Defined at:
  1606 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  sign            1    wreg     unsigned char 
  1609 ;;  val             4    2[COMMON] long 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  sign            1    0[BANK0 ] unsigned char 
  1612 ;;  arg             4    2[BANK0 ] unsigned long 
  1613 ;;  exp             1    1[BANK0 ] unsigned char 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  4    2[COMMON] unsigned char 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1623 ;;      Params:         4       0       0       0       0
  1624 ;;      Locals:         0       6       0       0       0
  1625 ;;      Temps:          4       0       0       0       0
  1626 ;;      Totals:         8       6       0       0       0
  1627 ;;Total ram usage:       14 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    1
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_medeRPM
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           
  1638                           ;psect for function ___xxtofl
  1639  0DB2                     ___xxtofl:	
  1640                           
  1641                           ;incstack = 0
  1642                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1643                           ;___xxtofl@sign stored from wreg
  1644  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  1645  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  1646  0DB4  00A0               	movwf	___xxtofl@sign
  1647  0DB5  0820               	movf	___xxtofl@sign,w
  1648  0DB6  1D03               	btfss	3,2
  1649  0DB7  1FF5               	btfss	___xxtofl@val+3,7
  1650  0DB8  2DC9               	goto	l2285
  1651  0DB9  0972               	comf	___xxtofl@val,w
  1652  0DBA  00A2               	movwf	___xxtofl@arg
  1653  0DBB  0973               	comf	___xxtofl@val+1,w
  1654  0DBC  00A3               	movwf	___xxtofl@arg+1
  1655  0DBD  0974               	comf	___xxtofl@val+2,w
  1656  0DBE  00A4               	movwf	___xxtofl@arg+2
  1657  0DBF  0975               	comf	___xxtofl@val+3,w
  1658  0DC0  00A5               	movwf	___xxtofl@arg+3
  1659  0DC1  0AA2               	incf	___xxtofl@arg,f
  1660  0DC2  1903               	skipnz
  1661  0DC3  0AA3               	incf	___xxtofl@arg+1,f
  1662  0DC4  1903               	skipnz
  1663  0DC5  0AA4               	incf	___xxtofl@arg+2,f
  1664  0DC6  1903               	skipnz
  1665  0DC7  0AA5               	incf	___xxtofl@arg+3,f
  1666  0DC8  2DD1               	goto	l656
  1667  0DC9                     l2285:	
  1668  0DC9  0875               	movf	___xxtofl@val+3,w
  1669  0DCA  00A5               	movwf	___xxtofl@arg+3
  1670  0DCB  0874               	movf	___xxtofl@val+2,w
  1671  0DCC  00A4               	movwf	___xxtofl@arg+2
  1672  0DCD  0873               	movf	___xxtofl@val+1,w
  1673  0DCE  00A3               	movwf	___xxtofl@arg+1
  1674  0DCF  0872               	movf	___xxtofl@val,w
  1675  0DD0  00A2               	movwf	___xxtofl@arg
  1676  0DD1                     l656:	
  1677  0DD1  0875               	movf	___xxtofl@val+3,w
  1678  0DD2  0474               	iorwf	___xxtofl@val+2,w
  1679  0DD3  0473               	iorwf	___xxtofl@val+1,w
  1680  0DD4  0472               	iorwf	___xxtofl@val,w
  1681  0DD5  1D03               	skipz
  1682  0DD6  2DE0               	goto	l2291
  1683  0DD7  3000               	movlw	0
  1684  0DD8  00F5               	movwf	?___xxtofl+3
  1685  0DD9  3000               	movlw	0
  1686  0DDA  00F4               	movwf	?___xxtofl+2
  1687  0DDB  3000               	movlw	0
  1688  0DDC  00F3               	movwf	?___xxtofl+1
  1689  0DDD  3000               	movlw	0
  1690  0DDE  00F2               	movwf	?___xxtofl
  1691  0DDF  0008               	return
  1692  0DE0                     l2291:	
  1693  0DE0  3096               	movlw	150
  1694  0DE1  00F6               	movwf	??___xxtofl
  1695  0DE2  0876               	movf	??___xxtofl,w
  1696  0DE3  00A1               	movwf	___xxtofl@exp
  1697  0DE4                     l2295:	
  1698  0DE4  30FE               	movlw	254
  1699  0DE5  0525               	andwf	___xxtofl@arg+3,w
  1700  0DE6  1903               	btfsc	3,2
  1701  0DE7  2E11               	goto	l662
  1702  0DE8  3001               	movlw	1
  1703  0DE9  00F6               	movwf	??___xxtofl
  1704  0DEA  0876               	movf	??___xxtofl,w
  1705  0DEB  07A1               	addwf	___xxtofl@exp,f
  1706  0DEC  3001               	movlw	1
  1707  0DED                     u3305:	
  1708  0DED  1003               	clrc
  1709  0DEE  0CA5               	rrf	___xxtofl@arg+3,f
  1710  0DEF  0CA4               	rrf	___xxtofl@arg+2,f
  1711  0DF0  0CA3               	rrf	___xxtofl@arg+1,f
  1712  0DF1  0CA2               	rrf	___xxtofl@arg,f
  1713  0DF2  3EFF               	addlw	-1
  1714  0DF3  1D03               	skipz
  1715  0DF4  2DED               	goto	u3305
  1716  0DF5  2DE4               	goto	l2295
  1717  0DF6                     l2297:	
  1718  0DF6  3001               	movlw	1
  1719  0DF7  00F6               	movwf	??___xxtofl
  1720  0DF8  0876               	movf	??___xxtofl,w
  1721  0DF9  07A1               	addwf	___xxtofl@exp,f
  1722  0DFA  3001               	movlw	1
  1723  0DFB  07A2               	addwf	___xxtofl@arg,f
  1724  0DFC  3000               	movlw	0
  1725  0DFD  1803               	skipnc
  1726  0DFE  3001               	movlw	1
  1727  0DFF  07A3               	addwf	___xxtofl@arg+1,f
  1728  0E00  3000               	movlw	0
  1729  0E01  1803               	skipnc
  1730  0E02  3001               	movlw	1
  1731  0E03  07A4               	addwf	___xxtofl@arg+2,f
  1732  0E04  3000               	movlw	0
  1733  0E05  1803               	skipnc
  1734  0E06  3001               	movlw	1
  1735  0E07  07A5               	addwf	___xxtofl@arg+3,f
  1736  0E08  3001               	movlw	1
  1737  0E09                     u3325:	
  1738  0E09  1003               	clrc
  1739  0E0A  0CA5               	rrf	___xxtofl@arg+3,f
  1740  0E0B  0CA4               	rrf	___xxtofl@arg+2,f
  1741  0E0C  0CA3               	rrf	___xxtofl@arg+1,f
  1742  0E0D  0CA2               	rrf	___xxtofl@arg,f
  1743  0E0E  3EFF               	addlw	-1
  1744  0E0F  1D03               	skipz
  1745  0E10  2E09               	goto	u3325
  1746  0E11                     l662:	
  1747  0E11  30FF               	movlw	255
  1748  0E12  0525               	andwf	___xxtofl@arg+3,w
  1749  0E13  1903               	btfsc	3,2
  1750  0E14  2E25               	goto	l2305
  1751  0E15  2DF6               	goto	l2297
  1752  0E16                     l2307:	
  1753  0E16  3002               	movlw	2
  1754  0E17  0221               	subwf	___xxtofl@exp,w
  1755  0E18  1C03               	btfss	3,0
  1756  0E19  2E27               	goto	l669
  1757  0E1A  3001               	movlw	1
  1758  0E1B  02A1               	subwf	___xxtofl@exp,f
  1759  0E1C  3001               	movlw	1
  1760  0E1D  00F6               	movwf	??___xxtofl
  1761  0E1E                     u3345:	
  1762  0E1E  1003               	clrc
  1763  0E1F  0DA2               	rlf	___xxtofl@arg,f
  1764  0E20  0DA3               	rlf	___xxtofl@arg+1,f
  1765  0E21  0DA4               	rlf	___xxtofl@arg+2,f
  1766  0E22  0DA5               	rlf	___xxtofl@arg+3,f
  1767  0E23  0BF6               	decfsz	??___xxtofl,f
  1768  0E24  2E1E               	goto	u3345
  1769  0E25                     l2305:	
  1770  0E25  1FA4               	btfss	___xxtofl@arg+2,7
  1771  0E26  2E16               	goto	l2307
  1772  0E27                     l669:	
  1773  0E27  1821               	btfsc	___xxtofl@exp,0
  1774  0E28  2E31               	goto	l670
  1775  0E29  30FF               	movlw	255
  1776  0E2A  05A2               	andwf	___xxtofl@arg,f
  1777  0E2B  30FF               	movlw	255
  1778  0E2C  05A3               	andwf	___xxtofl@arg+1,f
  1779  0E2D  307F               	movlw	127
  1780  0E2E  05A4               	andwf	___xxtofl@arg+2,f
  1781  0E2F  30FF               	movlw	255
  1782  0E30  05A5               	andwf	___xxtofl@arg+3,f
  1783  0E31                     l670:	
  1784  0E31  1003               	clrc
  1785  0E32  0CA1               	rrf	___xxtofl@exp,f
  1786  0E33  0821               	movf	___xxtofl@exp,w
  1787  0E34  00F6               	movwf	??___xxtofl
  1788  0E35  01F7               	clrf	??___xxtofl+1
  1789  0E36  01F8               	clrf	??___xxtofl+2
  1790  0E37  01F9               	clrf	??___xxtofl+3
  1791  0E38  3018               	movlw	24
  1792  0E39                     u3385:	
  1793  0E39  1003               	clrc
  1794  0E3A  0DF6               	rlf	??___xxtofl,f
  1795  0E3B  0DF7               	rlf	??___xxtofl+1,f
  1796  0E3C  0DF8               	rlf	??___xxtofl+2,f
  1797  0E3D  0DF9               	rlf	??___xxtofl+3,f
  1798  0E3E  3EFF               	addlw	-1
  1799  0E3F  1D03               	skipz
  1800  0E40  2E39               	goto	u3385
  1801  0E41  0876               	movf	??___xxtofl,w
  1802  0E42  04A2               	iorwf	___xxtofl@arg,f
  1803  0E43  0877               	movf	??___xxtofl+1,w
  1804  0E44  04A3               	iorwf	___xxtofl@arg+1,f
  1805  0E45  0878               	movf	??___xxtofl+2,w
  1806  0E46  04A4               	iorwf	___xxtofl@arg+2,f
  1807  0E47  0879               	movf	??___xxtofl+3,w
  1808  0E48  04A5               	iorwf	___xxtofl@arg+3,f
  1809  0E49  0820               	movf	___xxtofl@sign,w
  1810  0E4A  1D03               	btfss	3,2
  1811  0E4B  1FF5               	btfss	___xxtofl@val+3,7
  1812  0E4C  2E4E               	goto	l2319
  1813  0E4D  17A5               	bsf	___xxtofl@arg+3,7
  1814  0E4E                     l2319:	
  1815  0E4E  0825               	movf	___xxtofl@arg+3,w
  1816  0E4F  00F5               	movwf	?___xxtofl+3
  1817  0E50  0824               	movf	___xxtofl@arg+2,w
  1818  0E51  00F4               	movwf	?___xxtofl+2
  1819  0E52  0823               	movf	___xxtofl@arg+1,w
  1820  0E53  00F3               	movwf	?___xxtofl+1
  1821  0E54  0822               	movf	___xxtofl@arg,w
  1822  0E55  00F2               	movwf	?___xxtofl
  1823  0E56  0008               	return
  1824  0E57                     __end_of___xxtofl:	
  1825                           
  1826                           	psect	text4
  1827  0B61                     __ptext4:	
  1828 ;; *************** function ___wmul *****************
  1829 ;; Defined at:
  1830 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  multiplier      2    2[COMMON] unsigned int 
  1833 ;;  multiplicand    2    4[COMMON] unsigned int 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  product         2    6[COMMON] unsigned int 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  2    2[COMMON] unsigned int 
  1838 ;; Registers used:
  1839 ;;		wreg, status,2, status,0
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1845 ;;      Params:         4       0       0       0       0
  1846 ;;      Locals:         2       0       0       0       0
  1847 ;;      Temps:          0       0       0       0       0
  1848 ;;      Totals:         6       0       0       0       0
  1849 ;;Total ram usage:        6 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; Hardware stack levels required when called:    1
  1852 ;; This function calls:
  1853 ;;		Nothing
  1854 ;; This function is called by:
  1855 ;;		_medeRPM
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           
  1860                           ;psect for function ___wmul
  1861  0B61                     ___wmul:	
  1862                           
  1863                           ;incstack = 0
  1864                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1865  0B61  01F6               	clrf	___wmul@product
  1866  0B62  01F7               	clrf	___wmul@product+1
  1867  0B63                     l1705:	
  1868  0B63  1C72               	btfss	___wmul@multiplier,0
  1869  0B64  2B6B               	goto	l229
  1870  0B65  0874               	movf	___wmul@multiplicand,w
  1871  0B66  07F6               	addwf	___wmul@product,f
  1872  0B67  1803               	skipnc
  1873  0B68  0AF7               	incf	___wmul@product+1,f
  1874  0B69  0875               	movf	___wmul@multiplicand+1,w
  1875  0B6A  07F7               	addwf	___wmul@product+1,f
  1876  0B6B                     l229:	
  1877  0B6B  3001               	movlw	1
  1878  0B6C                     u1875:	
  1879  0B6C  1003               	clrc
  1880  0B6D  0DF4               	rlf	___wmul@multiplicand,f
  1881  0B6E  0DF5               	rlf	___wmul@multiplicand+1,f
  1882  0B6F  3EFF               	addlw	-1
  1883  0B70  1D03               	skipz
  1884  0B71  2B6C               	goto	u1875
  1885  0B72  3001               	movlw	1
  1886  0B73                     u1885:	
  1887  0B73  1003               	clrc
  1888  0B74  0CF3               	rrf	___wmul@multiplier+1,f
  1889  0B75  0CF2               	rrf	___wmul@multiplier,f
  1890  0B76  3EFF               	addlw	-1
  1891  0B77  1D03               	skipz
  1892  0B78  2B73               	goto	u1885
  1893  0B79  0872               	movf	___wmul@multiplier,w
  1894  0B7A  0473               	iorwf	___wmul@multiplier+1,w
  1895  0B7B  1D03               	btfss	3,2
  1896  0B7C  2B63               	goto	l1705
  1897  0B7D  0877               	movf	___wmul@product+1,w
  1898  0B7E  00F3               	movwf	?___wmul+1
  1899  0B7F  0876               	movf	___wmul@product,w
  1900  0B80  00F2               	movwf	?___wmul
  1901  0B81  0008               	return
  1902  0B82                     __end_of___wmul:	
  1903                           
  1904                           	psect	text5
  1905  0C2B                     __ptext5:	
  1906 ;; *************** function ___lwdiv *****************
  1907 ;; Defined at:
  1908 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  divisor         2    2[COMMON] unsigned int 
  1911 ;;  dividend        2    4[COMMON] unsigned int 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  quotient        2    7[COMMON] unsigned int 
  1914 ;;  counter         1    9[COMMON] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  2    2[COMMON] unsigned int 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2, status,0
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1924 ;;      Params:         4       0       0       0       0
  1925 ;;      Locals:         3       0       0       0       0
  1926 ;;      Temps:          1       0       0       0       0
  1927 ;;      Totals:         8       0       0       0       0
  1928 ;;Total ram usage:        8 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    1
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		_medeRPM
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           
  1939                           ;psect for function ___lwdiv
  1940  0C2B                     ___lwdiv:	
  1941                           
  1942                           ;incstack = 0
  1943                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1944  0C2B  01F7               	clrf	___lwdiv@quotient
  1945  0C2C  01F8               	clrf	___lwdiv@quotient+1
  1946  0C2D  0872               	movf	___lwdiv@divisor,w
  1947  0C2E  0473               	iorwf	___lwdiv@divisor+1,w
  1948  0C2F  1903               	btfsc	3,2
  1949  0C30  2C62               	goto	l1799
  1950  0C31  01F9               	clrf	___lwdiv@counter
  1951  0C32  0AF9               	incf	___lwdiv@counter,f
  1952  0C33                     l1787:	
  1953  0C33  1BF3               	btfsc	___lwdiv@divisor+1,7
  1954  0C34  2C41               	goto	l1789
  1955  0C35  3001               	movlw	1
  1956  0C36                     u2085:	
  1957  0C36  1003               	clrc
  1958  0C37  0DF2               	rlf	___lwdiv@divisor,f
  1959  0C38  0DF3               	rlf	___lwdiv@divisor+1,f
  1960  0C39  3EFF               	addlw	-1
  1961  0C3A  1D03               	skipz
  1962  0C3B  2C36               	goto	u2085
  1963  0C3C  3001               	movlw	1
  1964  0C3D  00F6               	movwf	??___lwdiv
  1965  0C3E  0876               	movf	??___lwdiv,w
  1966  0C3F  07F9               	addwf	___lwdiv@counter,f
  1967  0C40  2C33               	goto	l1787
  1968  0C41                     l1789:	
  1969  0C41  3001               	movlw	1
  1970  0C42                     u2105:	
  1971  0C42  1003               	clrc
  1972  0C43  0DF7               	rlf	___lwdiv@quotient,f
  1973  0C44  0DF8               	rlf	___lwdiv@quotient+1,f
  1974  0C45  3EFF               	addlw	-1
  1975  0C46  1D03               	skipz
  1976  0C47  2C42               	goto	u2105
  1977  0C48  0873               	movf	___lwdiv@divisor+1,w
  1978  0C49  0275               	subwf	___lwdiv@dividend+1,w
  1979  0C4A  1D03               	skipz
  1980  0C4B  2C4E               	goto	u2115
  1981  0C4C  0872               	movf	___lwdiv@divisor,w
  1982  0C4D  0274               	subwf	___lwdiv@dividend,w
  1983  0C4E                     u2115:	
  1984  0C4E  1C03               	skipc
  1985  0C4F  2C57               	goto	l1795
  1986  0C50  0872               	movf	___lwdiv@divisor,w
  1987  0C51  02F4               	subwf	___lwdiv@dividend,f
  1988  0C52  0873               	movf	___lwdiv@divisor+1,w
  1989  0C53  1C03               	skipc
  1990  0C54  03F5               	decf	___lwdiv@dividend+1,f
  1991  0C55  02F5               	subwf	___lwdiv@dividend+1,f
  1992  0C56  1477               	bsf	___lwdiv@quotient,0
  1993  0C57                     l1795:	
  1994  0C57  3001               	movlw	1
  1995  0C58                     u2125:	
  1996  0C58  1003               	clrc
  1997  0C59  0CF3               	rrf	___lwdiv@divisor+1,f
  1998  0C5A  0CF2               	rrf	___lwdiv@divisor,f
  1999  0C5B  3EFF               	addlw	-1
  2000  0C5C  1D03               	skipz
  2001  0C5D  2C58               	goto	u2125
  2002  0C5E  3001               	movlw	1
  2003  0C5F  02F9               	subwf	___lwdiv@counter,f
  2004  0C60  1D03               	btfss	3,2
  2005  0C61  2C41               	goto	l1789
  2006  0C62                     l1799:	
  2007  0C62  0878               	movf	___lwdiv@quotient+1,w
  2008  0C63  00F3               	movwf	?___lwdiv+1
  2009  0C64  0877               	movf	___lwdiv@quotient,w
  2010  0C65  00F2               	movwf	?___lwdiv
  2011  0C66  0008               	return
  2012  0C67                     __end_of___lwdiv:	
  2013                           
  2014                           	psect	text6
  2015  0D45                     __ptext6:	
  2016 ;; *************** function ___fltol *****************
  2017 ;; Defined at:
  2018 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  f1              4   32[BANK0 ] unsigned int 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  exp1            1   42[BANK0 ] unsigned char 
  2023 ;;  sign1           1   41[BANK0 ] unsigned char 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  4   32[BANK0 ] long 
  2026 ;; Registers used:
  2027 ;;		wreg, status,2, status,0
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2033 ;;      Params:         0       4       0       0       0
  2034 ;;      Locals:         0       2       0       0       0
  2035 ;;      Temps:          0       5       0       0       0
  2036 ;;      Totals:         0      11       0       0       0
  2037 ;;Total ram usage:       11 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    1
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_medeRPM
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           
  2048                           ;psect for function ___fltol
  2049  0D45                     ___fltol:	
  2050                           
  2051                           ;incstack = 0
  2052                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2053  0D45  1003               	clrc
  2054  0D46  1283               	bcf	3,5	;RP0=0, select bank0
  2055  0D47  1303               	bcf	3,6	;RP1=0, select bank0
  2056  0D48  0D42               	rlf	___fltol@f1+2,w
  2057  0D49  0D43               	rlf	___fltol@f1+3,w
  2058  0D4A  00C4               	movwf	??___fltol
  2059  0D4B  0844               	movf	??___fltol,w
  2060  0D4C  00CA               	movwf	___fltol@exp1
  2061  0D4D  084A               	movf	___fltol@exp1,w
  2062  0D4E  1D03               	btfss	3,2
  2063  0D4F  2D59               	goto	l1747
  2064  0D50                     l1743:	
  2065  0D50  3000               	movlw	0
  2066  0D51  00C3               	movwf	?___fltol+3
  2067  0D52  3000               	movlw	0
  2068  0D53  00C2               	movwf	?___fltol+2
  2069  0D54  3000               	movlw	0
  2070  0D55  00C1               	movwf	?___fltol+1
  2071  0D56  3000               	movlw	0
  2072  0D57  00C0               	movwf	?___fltol
  2073  0D58  0008               	return
  2074  0D59                     l1747:	
  2075  0D59  0840               	movf	___fltol@f1,w
  2076  0D5A  00C4               	movwf	??___fltol
  2077  0D5B  0841               	movf	___fltol@f1+1,w
  2078  0D5C  00C5               	movwf	??___fltol+1
  2079  0D5D  0842               	movf	___fltol@f1+2,w
  2080  0D5E  00C6               	movwf	??___fltol+2
  2081  0D5F  0843               	movf	___fltol@f1+3,w
  2082  0D60  00C7               	movwf	??___fltol+3
  2083  0D61  301F               	movlw	31
  2084  0D62                     u1985:	
  2085  0D62  1003               	clrc
  2086  0D63  0CC7               	rrf	??___fltol+3,f
  2087  0D64  0CC6               	rrf	??___fltol+2,f
  2088  0D65  0CC5               	rrf	??___fltol+1,f
  2089  0D66  0CC4               	rrf	??___fltol,f
  2090  0D67  3EFF               	addlw	-1
  2091  0D68  1D03               	skipz
  2092  0D69  2D62               	goto	u1985
  2093  0D6A  0844               	movf	??___fltol,w
  2094  0D6B  00C8               	movwf	??___fltol+4
  2095  0D6C  0848               	movf	??___fltol+4,w
  2096  0D6D  00C9               	movwf	___fltol@sign1
  2097  0D6E  17C2               	bsf	___fltol@f1+2,7
  2098  0D6F  30FF               	movlw	255
  2099  0D70  05C0               	andwf	___fltol@f1,f
  2100  0D71  30FF               	movlw	255
  2101  0D72  05C1               	andwf	___fltol@f1+1,f
  2102  0D73  30FF               	movlw	255
  2103  0D74  05C2               	andwf	___fltol@f1+2,f
  2104  0D75  3000               	movlw	0
  2105  0D76  05C3               	andwf	___fltol@f1+3,f
  2106  0D77  3096               	movlw	150
  2107  0D78  02CA               	subwf	___fltol@exp1,f
  2108  0D79  1FCA               	btfss	___fltol@exp1,7
  2109  0D7A  2D90               	goto	l1765
  2110  0D7B  084A               	movf	___fltol@exp1,w
  2111  0D7C  3A80               	xorlw	128
  2112  0D7D  3E97               	addlw	151
  2113  0D7E  1C03               	btfss	3,0
  2114  0D7F  2D50               	goto	l1743
  2115  0D80                     l1763:	
  2116  0D80  3001               	movlw	1
  2117  0D81                     u2015:	
  2118  0D81  1003               	clrc
  2119  0D82  0CC3               	rrf	___fltol@f1+3,f
  2120  0D83  0CC2               	rrf	___fltol@f1+2,f
  2121  0D84  0CC1               	rrf	___fltol@f1+1,f
  2122  0D85  0CC0               	rrf	___fltol@f1,f
  2123  0D86  3EFF               	addlw	-1
  2124  0D87  1D03               	skipz
  2125  0D88  2D81               	goto	u2015
  2126  0D89  3001               	movlw	1
  2127  0D8A  00C4               	movwf	??___fltol
  2128  0D8B  0844               	movf	??___fltol,w
  2129  0D8C  07CA               	addwf	___fltol@exp1,f
  2130  0D8D  1903               	btfsc	3,2
  2131  0D8E  2DA3               	goto	l1773
  2132  0D8F  2D80               	goto	l1763
  2133  0D90                     l1765:	
  2134  0D90  3020               	movlw	32
  2135  0D91  024A               	subwf	___fltol@exp1,w
  2136  0D92  1803               	btfsc	3,0
  2137  0D93  2D50               	goto	l1743
  2138  0D94                     l422:	
  2139  0D94  084A               	movf	___fltol@exp1,w
  2140  0D95  1903               	btfsc	3,2
  2141  0D96  2DA3               	goto	l1773
  2142  0D97  3001               	movlw	1
  2143  0D98  00C4               	movwf	??___fltol
  2144  0D99                     u2045:	
  2145  0D99  1003               	clrc
  2146  0D9A  0DC0               	rlf	___fltol@f1,f
  2147  0D9B  0DC1               	rlf	___fltol@f1+1,f
  2148  0D9C  0DC2               	rlf	___fltol@f1+2,f
  2149  0D9D  0DC3               	rlf	___fltol@f1+3,f
  2150  0D9E  0BC4               	decfsz	??___fltol,f
  2151  0D9F  2D99               	goto	u2045
  2152  0DA0  3001               	movlw	1
  2153  0DA1  02CA               	subwf	___fltol@exp1,f
  2154  0DA2  2D94               	goto	l422
  2155  0DA3                     l1773:	
  2156  0DA3  0849               	movf	___fltol@sign1,w
  2157  0DA4  1903               	btfsc	3,2
  2158  0DA5  0008               	return
  2159  0DA6  09C0               	comf	___fltol@f1,f
  2160  0DA7  09C1               	comf	___fltol@f1+1,f
  2161  0DA8  09C2               	comf	___fltol@f1+2,f
  2162  0DA9  09C3               	comf	___fltol@f1+3,f
  2163  0DAA  0AC0               	incf	___fltol@f1,f
  2164  0DAB  1903               	skipnz
  2165  0DAC  0AC1               	incf	___fltol@f1+1,f
  2166  0DAD  1903               	skipnz
  2167  0DAE  0AC2               	incf	___fltol@f1+2,f
  2168  0DAF  1903               	skipnz
  2169  0DB0  0AC3               	incf	___fltol@f1+3,f
  2170  0DB1  0008               	return
  2171  0DB2                     __end_of___fltol:	
  2172                           
  2173                           	psect	text7
  2174  001A                     __ptext7:	
  2175 ;; *************** function ___flmul *****************
  2176 ;; Defined at:
  2177 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  b               4    6[BANK0 ] long 
  2180 ;;  a               4   10[BANK0 ] long 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  prod            4   26[BANK0 ] struct .
  2183 ;;  grs             4   20[BANK0 ] unsigned long 
  2184 ;;  temp            2   30[BANK0 ] struct .
  2185 ;;  bexp            1   25[BANK0 ] unsigned char 
  2186 ;;  aexp            1   24[BANK0 ] unsigned char 
  2187 ;;  sign            1   19[BANK0 ] unsigned char 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  4    6[BANK0 ] unsigned char 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2197 ;;      Params:         0       8       0       0       0
  2198 ;;      Locals:         0      13       0       0       0
  2199 ;;      Temps:          0       5       0       0       0
  2200 ;;      Totals:         0      26       0       0       0
  2201 ;;Total ram usage:       26 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    2
  2204 ;; This function calls:
  2205 ;;		__Umul8_16
  2206 ;; This function is called by:
  2207 ;;		_medeRPM
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function ___flmul
  2213  001A                     ___flmul:	
  2214                           
  2215                           ;incstack = 0
  2216                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2217  001A  1283               	bcf	3,5	;RP0=0, select bank0
  2218  001B  1303               	bcf	3,6	;RP1=0, select bank0
  2219  001C  0829               	movf	___flmul@b+3,w
  2220  001D  3980               	andlw	128
  2221  001E  00AE               	movwf	??___flmul
  2222  001F  082E               	movf	??___flmul,w
  2223  0020  00B3               	movwf	___flmul@sign
  2224  0021  0829               	movf	___flmul@b+3,w
  2225  0022  00AE               	movwf	??___flmul
  2226  0023  072E               	addwf	??___flmul,w
  2227  0024  00AF               	movwf	??___flmul+1
  2228  0025  082F               	movf	??___flmul+1,w
  2229  0026  00B9               	movwf	___flmul@bexp
  2230  0027  1BA8               	btfsc	___flmul@b+2,7
  2231  0028  1439               	bsf	___flmul@bexp,0
  2232  0029  0839               	movf	___flmul@bexp,w
  2233  002A  1903               	btfsc	3,2
  2234  002B  2839               	goto	l2155
  2235  002C  0A39               	incf	___flmul@bexp,w
  2236  002D  1D03               	btfss	3,2
  2237  002E  2837               	goto	l2153
  2238  002F  3000               	movlw	0
  2239  0030  00A9               	movwf	___flmul@b+3
  2240  0031  3000               	movlw	0
  2241  0032  00A8               	movwf	___flmul@b+2
  2242  0033  3000               	movlw	0
  2243  0034  00A7               	movwf	___flmul@b+1
  2244  0035  3000               	movlw	0
  2245  0036  00A6               	movwf	___flmul@b
  2246  0037                     l2153:	
  2247  0037  17A8               	bsf	___flmul@b+2,7
  2248  0038  2841               	goto	l2157
  2249  0039                     l2155:	
  2250  0039  3000               	movlw	0
  2251  003A  00A9               	movwf	___flmul@b+3
  2252  003B  3000               	movlw	0
  2253  003C  00A8               	movwf	___flmul@b+2
  2254  003D  3000               	movlw	0
  2255  003E  00A7               	movwf	___flmul@b+1
  2256  003F  3000               	movlw	0
  2257  0040  00A6               	movwf	___flmul@b
  2258  0041                     l2157:	
  2259  0041  082D               	movf	___flmul@a+3,w
  2260  0042  3980               	andlw	128
  2261  0043  00AE               	movwf	??___flmul
  2262  0044  082E               	movf	??___flmul,w
  2263  0045  06B3               	xorwf	___flmul@sign,f
  2264  0046  082D               	movf	___flmul@a+3,w
  2265  0047  00AE               	movwf	??___flmul
  2266  0048  072E               	addwf	??___flmul,w
  2267  0049  00AF               	movwf	??___flmul+1
  2268  004A  082F               	movf	??___flmul+1,w
  2269  004B  00B8               	movwf	___flmul@aexp
  2270  004C  1BAC               	btfsc	___flmul@a+2,7
  2271  004D  1438               	bsf	___flmul@aexp,0
  2272  004E  0838               	movf	___flmul@aexp,w
  2273  004F  1903               	btfsc	3,2
  2274  0050  285E               	goto	l2173
  2275  0051  0A38               	incf	___flmul@aexp,w
  2276  0052  1D03               	btfss	3,2
  2277  0053  285C               	goto	l2171
  2278  0054  3000               	movlw	0
  2279  0055  00AD               	movwf	___flmul@a+3
  2280  0056  3000               	movlw	0
  2281  0057  00AC               	movwf	___flmul@a+2
  2282  0058  3000               	movlw	0
  2283  0059  00AB               	movwf	___flmul@a+1
  2284  005A  3000               	movlw	0
  2285  005B  00AA               	movwf	___flmul@a
  2286  005C                     l2171:	
  2287  005C  17AC               	bsf	___flmul@a+2,7
  2288  005D  2866               	goto	l2175
  2289  005E                     l2173:	
  2290  005E  3000               	movlw	0
  2291  005F  00AD               	movwf	___flmul@a+3
  2292  0060  3000               	movlw	0
  2293  0061  00AC               	movwf	___flmul@a+2
  2294  0062  3000               	movlw	0
  2295  0063  00AB               	movwf	___flmul@a+1
  2296  0064  3000               	movlw	0
  2297  0065  00AA               	movwf	___flmul@a
  2298  0066                     l2175:	
  2299  0066  0838               	movf	___flmul@aexp,w
  2300  0067  1D03               	btfss	3,2
  2301  0068  0839               	movf	___flmul@bexp,w
  2302  0069  1D03               	btfss	3,2
  2303  006A  2874               	goto	l2183
  2304  006B  3000               	movlw	0
  2305  006C  00A9               	movwf	?___flmul+3
  2306  006D  3000               	movlw	0
  2307  006E  00A8               	movwf	?___flmul+2
  2308  006F  3000               	movlw	0
  2309  0070  00A7               	movwf	?___flmul+1
  2310  0071  3000               	movlw	0
  2311  0072  00A6               	movwf	?___flmul
  2312  0073  0008               	return
  2313  0074                     l2183:	
  2314  0074  0826               	movf	___flmul@b,w
  2315  0075  00AE               	movwf	??___flmul
  2316  0076  082E               	movf	??___flmul,w
  2317  0077  00F2               	movwf	__Umul8_16@multiplicand
  2318  0078  082C               	movf	___flmul@a+2,w
  2319  0079  120A  158A  23A5  120A  118A  	fcall	__Umul8_16
  2320  007E  0873               	movf	?__Umul8_16+1,w
  2321  007F  1283               	bcf	3,5	;RP0=0, select bank0
  2322  0080  1303               	bcf	3,6	;RP1=0, select bank0
  2323  0081  00BF               	movwf	___flmul@temp+1
  2324  0082  0872               	movf	?__Umul8_16,w
  2325  0083  00BE               	movwf	___flmul@temp
  2326  0084  083E               	movf	___flmul@temp,w
  2327  0085  00AE               	movwf	??___flmul
  2328  0086  01AF               	clrf	??___flmul+1
  2329  0087  01B0               	clrf	??___flmul+2
  2330  0088  01B1               	clrf	??___flmul+3
  2331  0089  0831               	movf	??___flmul+3,w
  2332  008A  00B7               	movwf	___flmul@grs+3
  2333  008B  0830               	movf	??___flmul+2,w
  2334  008C  00B6               	movwf	___flmul@grs+2
  2335  008D  082F               	movf	??___flmul+1,w
  2336  008E  00B5               	movwf	___flmul@grs+1
  2337  008F  082E               	movf	??___flmul,w
  2338  0090  00B4               	movwf	___flmul@grs
  2339  0091  083F               	movf	___flmul@temp+1,w
  2340  0092  00AE               	movwf	??___flmul
  2341  0093  01AF               	clrf	??___flmul+1
  2342  0094  01B0               	clrf	??___flmul+2
  2343  0095  01B1               	clrf	??___flmul+3
  2344  0096  0831               	movf	??___flmul+3,w
  2345  0097  00BD               	movwf	___flmul@prod+3
  2346  0098  0830               	movf	??___flmul+2,w
  2347  0099  00BC               	movwf	___flmul@prod+2
  2348  009A  082F               	movf	??___flmul+1,w
  2349  009B  00BB               	movwf	___flmul@prod+1
  2350  009C  082E               	movf	??___flmul,w
  2351  009D  00BA               	movwf	___flmul@prod
  2352  009E  0827               	movf	___flmul@b+1,w
  2353  009F  00AE               	movwf	??___flmul
  2354  00A0  082E               	movf	??___flmul,w
  2355  00A1  00F2               	movwf	__Umul8_16@multiplicand
  2356  00A2  082B               	movf	___flmul@a+1,w
  2357  00A3  120A  158A  23A5  120A  118A  	fcall	__Umul8_16
  2358  00A8  0873               	movf	?__Umul8_16+1,w
  2359  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  2360  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  2361  00AB  00BF               	movwf	___flmul@temp+1
  2362  00AC  0872               	movf	?__Umul8_16,w
  2363  00AD  00BE               	movwf	___flmul@temp
  2364  00AE  083E               	movf	___flmul@temp,w
  2365  00AF  00AE               	movwf	??___flmul
  2366  00B0  01AF               	clrf	??___flmul+1
  2367  00B1  01B0               	clrf	??___flmul+2
  2368  00B2  01B1               	clrf	??___flmul+3
  2369  00B3  082E               	movf	??___flmul,w
  2370  00B4  07B4               	addwf	___flmul@grs,f
  2371  00B5  082F               	movf	??___flmul+1,w
  2372  00B6  1103               	clrz
  2373  00B7  1803               	skipnc
  2374  00B8  3E01               	addlw	1
  2375  00B9  1D03               	btfss	3,2
  2376  00BA  07B5               	addwf	___flmul@grs+1,f
  2377  00BB  0830               	movf	??___flmul+2,w
  2378  00BC  1103               	clrz
  2379  00BD  1803               	skipnc
  2380  00BE  3E01               	addlw	1
  2381  00BF  1D03               	btfss	3,2
  2382  00C0  07B6               	addwf	___flmul@grs+2,f
  2383  00C1  0831               	movf	??___flmul+3,w
  2384  00C2  1103               	clrz
  2385  00C3  1803               	skipnc
  2386  00C4  3E01               	addlw	1
  2387  00C5  1D03               	btfss	3,2
  2388  00C6  07B7               	addwf	___flmul@grs+3,f
  2389  00C7  083F               	movf	___flmul@temp+1,w
  2390  00C8  00AE               	movwf	??___flmul
  2391  00C9  01AF               	clrf	??___flmul+1
  2392  00CA  01B0               	clrf	??___flmul+2
  2393  00CB  01B1               	clrf	??___flmul+3
  2394  00CC  082E               	movf	??___flmul,w
  2395  00CD  07BA               	addwf	___flmul@prod,f
  2396  00CE  082F               	movf	??___flmul+1,w
  2397  00CF  1103               	clrz
  2398  00D0  1803               	skipnc
  2399  00D1  3E01               	addlw	1
  2400  00D2  1D03               	btfss	3,2
  2401  00D3  07BB               	addwf	___flmul@prod+1,f
  2402  00D4  0830               	movf	??___flmul+2,w
  2403  00D5  1103               	clrz
  2404  00D6  1803               	skipnc
  2405  00D7  3E01               	addlw	1
  2406  00D8  1D03               	btfss	3,2
  2407  00D9  07BC               	addwf	___flmul@prod+2,f
  2408  00DA  0831               	movf	??___flmul+3,w
  2409  00DB  1103               	clrz
  2410  00DC  1803               	skipnc
  2411  00DD  3E01               	addlw	1
  2412  00DE  1D03               	btfss	3,2
  2413  00DF  07BD               	addwf	___flmul@prod+3,f
  2414  00E0  0828               	movf	___flmul@b+2,w
  2415  00E1  00AE               	movwf	??___flmul
  2416  00E2  082E               	movf	??___flmul,w
  2417  00E3  00F2               	movwf	__Umul8_16@multiplicand
  2418  00E4  082A               	movf	___flmul@a,w
  2419  00E5  120A  158A  23A5  120A  118A  	fcall	__Umul8_16
  2420  00EA  0873               	movf	?__Umul8_16+1,w
  2421  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  2422  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  2423  00ED  00BF               	movwf	___flmul@temp+1
  2424  00EE  0872               	movf	?__Umul8_16,w
  2425  00EF  00BE               	movwf	___flmul@temp
  2426  00F0  083E               	movf	___flmul@temp,w
  2427  00F1  00AE               	movwf	??___flmul
  2428  00F2  01AF               	clrf	??___flmul+1
  2429  00F3  01B0               	clrf	??___flmul+2
  2430  00F4  01B1               	clrf	??___flmul+3
  2431  00F5  082E               	movf	??___flmul,w
  2432  00F6  07B4               	addwf	___flmul@grs,f
  2433  00F7  082F               	movf	??___flmul+1,w
  2434  00F8  1103               	clrz
  2435  00F9  1803               	skipnc
  2436  00FA  3E01               	addlw	1
  2437  00FB  1D03               	btfss	3,2
  2438  00FC  07B5               	addwf	___flmul@grs+1,f
  2439  00FD  0830               	movf	??___flmul+2,w
  2440  00FE  1103               	clrz
  2441  00FF  1803               	skipnc
  2442  0100  3E01               	addlw	1
  2443  0101  1D03               	btfss	3,2
  2444  0102  07B6               	addwf	___flmul@grs+2,f
  2445  0103  0831               	movf	??___flmul+3,w
  2446  0104  1103               	clrz
  2447  0105  1803               	skipnc
  2448  0106  3E01               	addlw	1
  2449  0107  1D03               	btfss	3,2
  2450  0108  07B7               	addwf	___flmul@grs+3,f
  2451  0109  083F               	movf	___flmul@temp+1,w
  2452  010A  00AE               	movwf	??___flmul
  2453  010B  01AF               	clrf	??___flmul+1
  2454  010C  01B0               	clrf	??___flmul+2
  2455  010D  01B1               	clrf	??___flmul+3
  2456  010E  082E               	movf	??___flmul,w
  2457  010F  07BA               	addwf	___flmul@prod,f
  2458  0110  082F               	movf	??___flmul+1,w
  2459  0111  1103               	clrz
  2460  0112  1803               	skipnc
  2461  0113  3E01               	addlw	1
  2462  0114  1D03               	btfss	3,2
  2463  0115  07BB               	addwf	___flmul@prod+1,f
  2464  0116  0830               	movf	??___flmul+2,w
  2465  0117  1103               	clrz
  2466  0118  1803               	skipnc
  2467  0119  3E01               	addlw	1
  2468  011A  1D03               	btfss	3,2
  2469  011B  07BC               	addwf	___flmul@prod+2,f
  2470  011C  0831               	movf	??___flmul+3,w
  2471  011D  1103               	clrz
  2472  011E  1803               	skipnc
  2473  011F  3E01               	addlw	1
  2474  0120  1D03               	btfss	3,2
  2475  0121  07BD               	addwf	___flmul@prod+3,f
  2476  0122  3008               	movlw	8
  2477  0123  00AE               	movwf	??___flmul
  2478  0124                     u3025:	
  2479  0124  1003               	clrc
  2480  0125  0DB4               	rlf	___flmul@grs,f
  2481  0126  0DB5               	rlf	___flmul@grs+1,f
  2482  0127  0DB6               	rlf	___flmul@grs+2,f
  2483  0128  0DB7               	rlf	___flmul@grs+3,f
  2484  0129  0BAE               	decfsz	??___flmul,f
  2485  012A  2924               	goto	u3025
  2486  012B  0827               	movf	___flmul@b+1,w
  2487  012C  00AE               	movwf	??___flmul
  2488  012D  082E               	movf	??___flmul,w
  2489  012E  00F2               	movwf	__Umul8_16@multiplicand
  2490  012F  082A               	movf	___flmul@a,w
  2491  0130  120A  158A  23A5  120A  118A  	fcall	__Umul8_16
  2492  0135  0873               	movf	?__Umul8_16+1,w
  2493  0136  1283               	bcf	3,5	;RP0=0, select bank0
  2494  0137  1303               	bcf	3,6	;RP1=0, select bank0
  2495  0138  00BF               	movwf	___flmul@temp+1
  2496  0139  0872               	movf	?__Umul8_16,w
  2497  013A  00BE               	movwf	___flmul@temp
  2498  013B  083E               	movf	___flmul@temp,w
  2499  013C  00AE               	movwf	??___flmul
  2500  013D  083F               	movf	___flmul@temp+1,w
  2501  013E  00AF               	movwf	??___flmul+1
  2502  013F  01B0               	clrf	??___flmul+2
  2503  0140  01B1               	clrf	??___flmul+3
  2504  0141  082E               	movf	??___flmul,w
  2505  0142  07B4               	addwf	___flmul@grs,f
  2506  0143  082F               	movf	??___flmul+1,w
  2507  0144  1103               	clrz
  2508  0145  1803               	skipnc
  2509  0146  3E01               	addlw	1
  2510  0147  1D03               	btfss	3,2
  2511  0148  07B5               	addwf	___flmul@grs+1,f
  2512  0149  0830               	movf	??___flmul+2,w
  2513  014A  1103               	clrz
  2514  014B  1803               	skipnc
  2515  014C  3E01               	addlw	1
  2516  014D  1D03               	btfss	3,2
  2517  014E  07B6               	addwf	___flmul@grs+2,f
  2518  014F  0831               	movf	??___flmul+3,w
  2519  0150  1103               	clrz
  2520  0151  1803               	skipnc
  2521  0152  3E01               	addlw	1
  2522  0153  1D03               	btfss	3,2
  2523  0154  07B7               	addwf	___flmul@grs+3,f
  2524  0155  0826               	movf	___flmul@b,w
  2525  0156  00AE               	movwf	??___flmul
  2526  0157  082E               	movf	??___flmul,w
  2527  0158  00F2               	movwf	__Umul8_16@multiplicand
  2528  0159  082B               	movf	___flmul@a+1,w
  2529  015A  120A  158A  23A5  120A  118A  	fcall	__Umul8_16
  2530  015F  0873               	movf	?__Umul8_16+1,w
  2531  0160  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0161  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0162  00BF               	movwf	___flmul@temp+1
  2534  0163  0872               	movf	?__Umul8_16,w
  2535  0164  00BE               	movwf	___flmul@temp
  2536  0165  083E               	movf	___flmul@temp,w
  2537  0166  00AE               	movwf	??___flmul
  2538  0167  083F               	movf	___flmul@temp+1,w
  2539  0168  00AF               	movwf	??___flmul+1
  2540  0169  01B0               	clrf	??___flmul+2
  2541  016A  01B1               	clrf	??___flmul+3
  2542  016B  082E               	movf	??___flmul,w
  2543  016C  07B4               	addwf	___flmul@grs,f
  2544  016D  082F               	movf	??___flmul+1,w
  2545  016E  1103               	clrz
  2546  016F  1803               	skipnc
  2547  0170  3E01               	addlw	1
  2548  0171  1D03               	btfss	3,2
  2549  0172  07B5               	addwf	___flmul@grs+1,f
  2550  0173  0830               	movf	??___flmul+2,w
  2551  0174  1103               	clrz
  2552  0175  1803               	skipnc
  2553  0176  3E01               	addlw	1
  2554  0177  1D03               	btfss	3,2
  2555  0178  07B6               	addwf	___flmul@grs+2,f
  2556  0179  0831               	movf	??___flmul+3,w
  2557  017A  1103               	clrz
  2558  017B  1803               	skipnc
  2559  017C  3E01               	addlw	1
  2560  017D  1D03               	btfss	3,2
  2561  017E  07B7               	addwf	___flmul@grs+3,f
  2562  017F  3008               	movlw	8
  2563  0180  00AE               	movwf	??___flmul
  2564  0181                     u3055:	
  2565  0181  1003               	clrc
  2566  0182  0DB4               	rlf	___flmul@grs,f
  2567  0183  0DB5               	rlf	___flmul@grs+1,f
  2568  0184  0DB6               	rlf	___flmul@grs+2,f
  2569  0185  0DB7               	rlf	___flmul@grs+3,f
  2570  0186  0BAE               	decfsz	??___flmul,f
  2571  0187  2981               	goto	u3055
  2572  0188  0826               	movf	___flmul@b,w
  2573  0189  00AE               	movwf	??___flmul
  2574  018A  082E               	movf	??___flmul,w
  2575  018B  00F2               	movwf	__Umul8_16@multiplicand
  2576  018C  082A               	movf	___flmul@a,w
  2577  018D  120A  158A  23A5  120A  118A  	fcall	__Umul8_16
  2578  0192  0873               	movf	?__Umul8_16+1,w
  2579  0193  1283               	bcf	3,5	;RP0=0, select bank0
  2580  0194  1303               	bcf	3,6	;RP1=0, select bank0
  2581  0195  00BF               	movwf	___flmul@temp+1
  2582  0196  0872               	movf	?__Umul8_16,w
  2583  0197  00BE               	movwf	___flmul@temp
  2584  0198  083E               	movf	___flmul@temp,w
  2585  0199  00AE               	movwf	??___flmul
  2586  019A  083F               	movf	___flmul@temp+1,w
  2587  019B  00AF               	movwf	??___flmul+1
  2588  019C  01B0               	clrf	??___flmul+2
  2589  019D  01B1               	clrf	??___flmul+3
  2590  019E  082E               	movf	??___flmul,w
  2591  019F  07B4               	addwf	___flmul@grs,f
  2592  01A0  082F               	movf	??___flmul+1,w
  2593  01A1  1103               	clrz
  2594  01A2  1803               	skipnc
  2595  01A3  3E01               	addlw	1
  2596  01A4  1D03               	btfss	3,2
  2597  01A5  07B5               	addwf	___flmul@grs+1,f
  2598  01A6  0830               	movf	??___flmul+2,w
  2599  01A7  1103               	clrz
  2600  01A8  1803               	skipnc
  2601  01A9  3E01               	addlw	1
  2602  01AA  1D03               	btfss	3,2
  2603  01AB  07B6               	addwf	___flmul@grs+2,f
  2604  01AC  0831               	movf	??___flmul+3,w
  2605  01AD  1103               	clrz
  2606  01AE  1803               	skipnc
  2607  01AF  3E01               	addlw	1
  2608  01B0  1D03               	btfss	3,2
  2609  01B1  07B7               	addwf	___flmul@grs+3,f
  2610  01B2  0827               	movf	___flmul@b+1,w
  2611  01B3  00AE               	movwf	??___flmul
  2612  01B4  082E               	movf	??___flmul,w
  2613  01B5  00F2               	movwf	__Umul8_16@multiplicand
  2614  01B6  082C               	movf	___flmul@a+2,w
  2615  01B7  120A  158A  23A5  120A  118A  	fcall	__Umul8_16
  2616  01BC  0873               	movf	?__Umul8_16+1,w
  2617  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2618  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2619  01BF  00BF               	movwf	___flmul@temp+1
  2620  01C0  0872               	movf	?__Umul8_16,w
  2621  01C1  00BE               	movwf	___flmul@temp
  2622  01C2  083E               	movf	___flmul@temp,w
  2623  01C3  00AE               	movwf	??___flmul
  2624  01C4  083F               	movf	___flmul@temp+1,w
  2625  01C5  00AF               	movwf	??___flmul+1
  2626  01C6  01B0               	clrf	??___flmul+2
  2627  01C7  01B1               	clrf	??___flmul+3
  2628  01C8  082E               	movf	??___flmul,w
  2629  01C9  07BA               	addwf	___flmul@prod,f
  2630  01CA  082F               	movf	??___flmul+1,w
  2631  01CB  1103               	clrz
  2632  01CC  1803               	skipnc
  2633  01CD  3E01               	addlw	1
  2634  01CE  1D03               	btfss	3,2
  2635  01CF  07BB               	addwf	___flmul@prod+1,f
  2636  01D0  0830               	movf	??___flmul+2,w
  2637  01D1  1103               	clrz
  2638  01D2  1803               	skipnc
  2639  01D3  3E01               	addlw	1
  2640  01D4  1D03               	btfss	3,2
  2641  01D5  07BC               	addwf	___flmul@prod+2,f
  2642  01D6  0831               	movf	??___flmul+3,w
  2643  01D7  1103               	clrz
  2644  01D8  1803               	skipnc
  2645  01D9  3E01               	addlw	1
  2646  01DA  1D03               	btfss	3,2
  2647  01DB  07BD               	addwf	___flmul@prod+3,f
  2648  01DC  0828               	movf	___flmul@b+2,w
  2649  01DD  00AE               	movwf	??___flmul
  2650  01DE  082E               	movf	??___flmul,w
  2651  01DF  00F2               	movwf	__Umul8_16@multiplicand
  2652  01E0  082B               	movf	___flmul@a+1,w
  2653  01E1  120A  158A  23A5  120A  118A  	fcall	__Umul8_16
  2654  01E6  0873               	movf	?__Umul8_16+1,w
  2655  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2656  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  2657  01E9  00BF               	movwf	___flmul@temp+1
  2658  01EA  0872               	movf	?__Umul8_16,w
  2659  01EB  00BE               	movwf	___flmul@temp
  2660  01EC  083E               	movf	___flmul@temp,w
  2661  01ED  00AE               	movwf	??___flmul
  2662  01EE  083F               	movf	___flmul@temp+1,w
  2663  01EF  00AF               	movwf	??___flmul+1
  2664  01F0  01B0               	clrf	??___flmul+2
  2665  01F1  01B1               	clrf	??___flmul+3
  2666  01F2  082E               	movf	??___flmul,w
  2667  01F3  07BA               	addwf	___flmul@prod,f
  2668  01F4  082F               	movf	??___flmul+1,w
  2669  01F5  1103               	clrz
  2670  01F6  1803               	skipnc
  2671  01F7  3E01               	addlw	1
  2672  01F8  1D03               	btfss	3,2
  2673  01F9  07BB               	addwf	___flmul@prod+1,f
  2674  01FA  0830               	movf	??___flmul+2,w
  2675  01FB  1103               	clrz
  2676  01FC  1803               	skipnc
  2677  01FD  3E01               	addlw	1
  2678  01FE  1D03               	btfss	3,2
  2679  01FF  07BC               	addwf	___flmul@prod+2,f
  2680  0200  0831               	movf	??___flmul+3,w
  2681  0201  1103               	clrz
  2682  0202  1803               	skipnc
  2683  0203  3E01               	addlw	1
  2684  0204  1D03               	btfss	3,2
  2685  0205  07BD               	addwf	___flmul@prod+3,f
  2686  0206  0828               	movf	___flmul@b+2,w
  2687  0207  00AE               	movwf	??___flmul
  2688  0208  082E               	movf	??___flmul,w
  2689  0209  00F2               	movwf	__Umul8_16@multiplicand
  2690  020A  082C               	movf	___flmul@a+2,w
  2691  020B  120A  158A  23A5  120A  118A  	fcall	__Umul8_16
  2692  0210  0873               	movf	?__Umul8_16+1,w
  2693  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2694  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2695  0213  00BF               	movwf	___flmul@temp+1
  2696  0214  0872               	movf	?__Umul8_16,w
  2697  0215  00BE               	movwf	___flmul@temp
  2698  0216  083E               	movf	___flmul@temp,w
  2699  0217  00AE               	movwf	??___flmul
  2700  0218  083F               	movf	___flmul@temp+1,w
  2701  0219  00AF               	movwf	??___flmul+1
  2702  021A  01B0               	clrf	??___flmul+2
  2703  021B  01B1               	clrf	??___flmul+3
  2704  021C  3008               	movlw	8
  2705  021D                     u3095:	
  2706  021D  1003               	clrc
  2707  021E  0DAE               	rlf	??___flmul,f
  2708  021F  0DAF               	rlf	??___flmul+1,f
  2709  0220  0DB0               	rlf	??___flmul+2,f
  2710  0221  0DB1               	rlf	??___flmul+3,f
  2711  0222  3EFF               	addlw	-1
  2712  0223  1D03               	skipz
  2713  0224  2A1D               	goto	u3095
  2714  0225  082E               	movf	??___flmul,w
  2715  0226  07BA               	addwf	___flmul@prod,f
  2716  0227  082F               	movf	??___flmul+1,w
  2717  0228  1103               	clrz
  2718  0229  1803               	skipnc
  2719  022A  3E01               	addlw	1
  2720  022B  1D03               	btfss	3,2
  2721  022C  07BB               	addwf	___flmul@prod+1,f
  2722  022D  0830               	movf	??___flmul+2,w
  2723  022E  1103               	clrz
  2724  022F  1803               	skipnc
  2725  0230  3E01               	addlw	1
  2726  0231  1D03               	btfss	3,2
  2727  0232  07BC               	addwf	___flmul@prod+2,f
  2728  0233  0831               	movf	??___flmul+3,w
  2729  0234  1103               	clrz
  2730  0235  1803               	skipnc
  2731  0236  3E01               	addlw	1
  2732  0237  1D03               	btfss	3,2
  2733  0238  07BD               	addwf	___flmul@prod+3,f
  2734  0239  0834               	movf	___flmul@grs,w
  2735  023A  00AE               	movwf	??___flmul
  2736  023B  0835               	movf	___flmul@grs+1,w
  2737  023C  00AF               	movwf	??___flmul+1
  2738  023D  0836               	movf	___flmul@grs+2,w
  2739  023E  00B0               	movwf	??___flmul+2
  2740  023F  0837               	movf	___flmul@grs+3,w
  2741  0240  00B1               	movwf	??___flmul+3
  2742  0241  3018               	movlw	24
  2743  0242                     u3115:	
  2744  0242  1003               	clrc
  2745  0243  0CB1               	rrf	??___flmul+3,f
  2746  0244  0CB0               	rrf	??___flmul+2,f
  2747  0245  0CAF               	rrf	??___flmul+1,f
  2748  0246  0CAE               	rrf	??___flmul,f
  2749  0247  3EFF               	addlw	-1
  2750  0248  1D03               	skipz
  2751  0249  2A42               	goto	u3115
  2752  024A  082E               	movf	??___flmul,w
  2753  024B  07BA               	addwf	___flmul@prod,f
  2754  024C  082F               	movf	??___flmul+1,w
  2755  024D  1103               	clrz
  2756  024E  1803               	skipnc
  2757  024F  3E01               	addlw	1
  2758  0250  1D03               	btfss	3,2
  2759  0251  07BB               	addwf	___flmul@prod+1,f
  2760  0252  0830               	movf	??___flmul+2,w
  2761  0253  1103               	clrz
  2762  0254  1803               	skipnc
  2763  0255  3E01               	addlw	1
  2764  0256  1D03               	btfss	3,2
  2765  0257  07BC               	addwf	___flmul@prod+2,f
  2766  0258  0831               	movf	??___flmul+3,w
  2767  0259  1103               	clrz
  2768  025A  1803               	skipnc
  2769  025B  3E01               	addlw	1
  2770  025C  1D03               	btfss	3,2
  2771  025D  07BD               	addwf	___flmul@prod+3,f
  2772  025E  3008               	movlw	8
  2773  025F  00AE               	movwf	??___flmul
  2774  0260                     u3135:	
  2775  0260  1003               	clrc
  2776  0261  0DB4               	rlf	___flmul@grs,f
  2777  0262  0DB5               	rlf	___flmul@grs+1,f
  2778  0263  0DB6               	rlf	___flmul@grs+2,f
  2779  0264  0DB7               	rlf	___flmul@grs+3,f
  2780  0265  0BAE               	decfsz	??___flmul,f
  2781  0266  2A60               	goto	u3135
  2782  0267  0839               	movf	___flmul@bexp,w
  2783  0268  0738               	addwf	___flmul@aexp,w
  2784  0269  00AE               	movwf	??___flmul
  2785  026A  01AF               	clrf	??___flmul+1
  2786  026B  0DAF               	rlf	??___flmul+1,f
  2787  026C  082E               	movf	??___flmul,w
  2788  026D  3E82               	addlw	130
  2789  026E  00BE               	movwf	___flmul@temp
  2790  026F  082F               	movf	??___flmul+1,w
  2791  0270  1803               	skipnc
  2792  0271  3E01               	addlw	1
  2793  0272  3EFF               	addlw	255
  2794  0273  00BF               	movwf	___flmul@temp+1
  2795  0274                     l2235:	
  2796  0274  1BBC               	btfsc	___flmul@prod+2,7
  2797  0275  2A91               	goto	l2237
  2798  0276  3001               	movlw	1
  2799  0277  00AE               	movwf	??___flmul
  2800  0278                     u3145:	
  2801  0278  1003               	clrc
  2802  0279  0DBA               	rlf	___flmul@prod,f
  2803  027A  0DBB               	rlf	___flmul@prod+1,f
  2804  027B  0DBC               	rlf	___flmul@prod+2,f
  2805  027C  0DBD               	rlf	___flmul@prod+3,f
  2806  027D  0BAE               	decfsz	??___flmul,f
  2807  027E  2A78               	goto	u3145
  2808  027F  1BB7               	btfsc	___flmul@grs+3,7
  2809  0280  143A               	bsf	___flmul@prod,0
  2810  0281  3001               	movlw	1
  2811  0282  00AE               	movwf	??___flmul
  2812  0283                     u3165:	
  2813  0283  1003               	clrc
  2814  0284  0DB4               	rlf	___flmul@grs,f
  2815  0285  0DB5               	rlf	___flmul@grs+1,f
  2816  0286  0DB6               	rlf	___flmul@grs+2,f
  2817  0287  0DB7               	rlf	___flmul@grs+3,f
  2818  0288  0BAE               	decfsz	??___flmul,f
  2819  0289  2A83               	goto	u3165
  2820  028A  30FF               	movlw	255
  2821  028B  07BE               	addwf	___flmul@temp,f
  2822  028C  1803               	skipnc
  2823  028D  0ABF               	incf	___flmul@temp+1,f
  2824  028E  30FF               	movlw	255
  2825  028F  07BF               	addwf	___flmul@temp+1,f
  2826  0290  2A74               	goto	l2235
  2827  0291                     l2237:	
  2828  0291  01B8               	clrf	___flmul@aexp
  2829  0292  1FB7               	btfss	___flmul@grs+3,7
  2830  0293  2AAA               	goto	l2247
  2831  0294  30FF               	movlw	255
  2832  0295  0534               	andwf	___flmul@grs,w
  2833  0296  00AE               	movwf	??___flmul
  2834  0297  30FF               	movlw	255
  2835  0298  0535               	andwf	___flmul@grs+1,w
  2836  0299  00AF               	movwf	??___flmul+1
  2837  029A  30FF               	movlw	255
  2838  029B  0536               	andwf	___flmul@grs+2,w
  2839  029C  00B0               	movwf	??___flmul+2
  2840  029D  307F               	movlw	127
  2841  029E  0537               	andwf	___flmul@grs+3,w
  2842  029F  00B1               	movwf	??___flmul+3
  2843  02A0  0831               	movf	??___flmul+3,w
  2844  02A1  0430               	iorwf	??___flmul+2,w
  2845  02A2  042F               	iorwf	??___flmul+1,w
  2846  02A3  042E               	iorwf	??___flmul,w
  2847  02A4  1903               	skipnz
  2848  02A5  183A               	btfsc	___flmul@prod,0
  2849  02A6  2AA8               	goto	l2243
  2850  02A7  2AAA               	goto	l2247
  2851  02A8                     l2243:	
  2852  02A8  01B8               	clrf	___flmul@aexp
  2853  02A9  0AB8               	incf	___flmul@aexp,f
  2854  02AA                     l2247:	
  2855  02AA  0838               	movf	___flmul@aexp,w
  2856  02AB  1903               	btfsc	3,2
  2857  02AC  2ADC               	goto	l2257
  2858  02AD  3001               	movlw	1
  2859  02AE  07BA               	addwf	___flmul@prod,f
  2860  02AF  3000               	movlw	0
  2861  02B0  1803               	skipnc
  2862  02B1  3001               	movlw	1
  2863  02B2  07BB               	addwf	___flmul@prod+1,f
  2864  02B3  3000               	movlw	0
  2865  02B4  1803               	skipnc
  2866  02B5  3001               	movlw	1
  2867  02B6  07BC               	addwf	___flmul@prod+2,f
  2868  02B7  3000               	movlw	0
  2869  02B8  1803               	skipnc
  2870  02B9  3001               	movlw	1
  2871  02BA  07BD               	addwf	___flmul@prod+3,f
  2872  02BB  1C3D               	btfss	___flmul@prod+3,0
  2873  02BC  2ADC               	goto	l2257
  2874  02BD  083A               	movf	___flmul@prod,w
  2875  02BE  00AE               	movwf	??___flmul
  2876  02BF  083B               	movf	___flmul@prod+1,w
  2877  02C0  00AF               	movwf	??___flmul+1
  2878  02C1  083C               	movf	___flmul@prod+2,w
  2879  02C2  00B0               	movwf	??___flmul+2
  2880  02C3  083D               	movf	___flmul@prod+3,w
  2881  02C4  00B1               	movwf	??___flmul+3
  2882  02C5  3001               	movlw	1
  2883  02C6  00B2               	movwf	??___flmul+4
  2884  02C7                     u3235:	
  2885  02C7  0D31               	rlf	??___flmul+3,w
  2886  02C8  0CB1               	rrf	??___flmul+3,f
  2887  02C9  0CB0               	rrf	??___flmul+2,f
  2888  02CA  0CAF               	rrf	??___flmul+1,f
  2889  02CB  0CAE               	rrf	??___flmul,f
  2890  02CC  0BB2               	decfsz	??___flmul+4,f
  2891  02CD  2AC7               	goto	u3235
  2892  02CE  0831               	movf	??___flmul+3,w
  2893  02CF  00BD               	movwf	___flmul@prod+3
  2894  02D0  0830               	movf	??___flmul+2,w
  2895  02D1  00BC               	movwf	___flmul@prod+2
  2896  02D2  082F               	movf	??___flmul+1,w
  2897  02D3  00BB               	movwf	___flmul@prod+1
  2898  02D4  082E               	movf	??___flmul,w
  2899  02D5  00BA               	movwf	___flmul@prod
  2900  02D6  3001               	movlw	1
  2901  02D7  07BE               	addwf	___flmul@temp,f
  2902  02D8  1803               	skipnc
  2903  02D9  0ABF               	incf	___flmul@temp+1,f
  2904  02DA  3000               	movlw	0
  2905  02DB  07BF               	addwf	___flmul@temp+1,f
  2906  02DC                     l2257:	
  2907  02DC  083F               	movf	___flmul@temp+1,w
  2908  02DD  3A80               	xorlw	128
  2909  02DE  00FF               	movwf	127
  2910  02DF  3080               	movlw	128
  2911  02E0  027F               	subwf	127,w
  2912  02E1  1D03               	skipz
  2913  02E2  2AE5               	goto	u3245
  2914  02E3  30FF               	movlw	255
  2915  02E4  023E               	subwf	___flmul@temp,w
  2916  02E5                     u3245:	
  2917  02E5  1C03               	skipc
  2918  02E6  2AF2               	goto	l2261
  2919  02E7  307F               	movlw	127
  2920  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2921  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2922  02EA  00BD               	movwf	___flmul@prod+3
  2923  02EB  3080               	movlw	128
  2924  02EC  00BC               	movwf	___flmul@prod+2
  2925  02ED  3000               	movlw	0
  2926  02EE  00BB               	movwf	___flmul@prod+1
  2927  02EF  3000               	movlw	0
  2928  02F0  00BA               	movwf	___flmul@prod
  2929  02F1  2B22               	goto	l630
  2930  02F2                     l2261:	
  2931  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  2932  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  2933  02F4  083F               	movf	___flmul@temp+1,w
  2934  02F5  3A80               	xorlw	128
  2935  02F6  00FF               	movwf	127
  2936  02F7  3080               	movlw	128
  2937  02F8  027F               	subwf	127,w
  2938  02F9  1D03               	skipz
  2939  02FA  2AFD               	goto	u3255
  2940  02FB  3001               	movlw	1
  2941  02FC  023E               	subwf	___flmul@temp,w
  2942  02FD                     u3255:	
  2943  02FD  1803               	skipnc
  2944  02FE  2B0B               	goto	l2267
  2945  02FF  3000               	movlw	0
  2946  0300  1283               	bcf	3,5	;RP0=0, select bank0
  2947  0301  1303               	bcf	3,6	;RP1=0, select bank0
  2948  0302  00BD               	movwf	___flmul@prod+3
  2949  0303  3000               	movlw	0
  2950  0304  00BC               	movwf	___flmul@prod+2
  2951  0305  3000               	movlw	0
  2952  0306  00BB               	movwf	___flmul@prod+1
  2953  0307  3000               	movlw	0
  2954  0308  00BA               	movwf	___flmul@prod
  2955  0309  01B3               	clrf	___flmul@sign
  2956  030A  2B22               	goto	l630
  2957  030B                     l2267:	
  2958  030B  1283               	bcf	3,5	;RP0=0, select bank0
  2959  030C  1303               	bcf	3,6	;RP1=0, select bank0
  2960  030D  083E               	movf	___flmul@temp,w
  2961  030E  00AE               	movwf	??___flmul
  2962  030F  082E               	movf	??___flmul,w
  2963  0310  00B9               	movwf	___flmul@bexp
  2964  0311  30FF               	movlw	255
  2965  0312  05BA               	andwf	___flmul@prod,f
  2966  0313  30FF               	movlw	255
  2967  0314  05BB               	andwf	___flmul@prod+1,f
  2968  0315  307F               	movlw	127
  2969  0316  05BC               	andwf	___flmul@prod+2,f
  2970  0317  3000               	movlw	0
  2971  0318  05BD               	andwf	___flmul@prod+3,f
  2972  0319  1839               	btfsc	___flmul@bexp,0
  2973  031A  17BC               	bsf	___flmul@prod+2,7
  2974  031B  0839               	movf	___flmul@bexp,w
  2975  031C  00AE               	movwf	??___flmul
  2976  031D  1003               	clrc
  2977  031E  0C2E               	rrf	??___flmul,w
  2978  031F  00AF               	movwf	??___flmul+1
  2979  0320  082F               	movf	??___flmul+1,w
  2980  0321  00BD               	movwf	___flmul@prod+3
  2981  0322                     l630:	
  2982  0322  0833               	movf	___flmul@sign,w
  2983  0323  00AE               	movwf	??___flmul
  2984  0324  082E               	movf	??___flmul,w
  2985  0325  04BD               	iorwf	___flmul@prod+3,f
  2986  0326  083D               	movf	___flmul@prod+3,w
  2987  0327  00A9               	movwf	?___flmul+3
  2988  0328  083C               	movf	___flmul@prod+2,w
  2989  0329  00A8               	movwf	?___flmul+2
  2990  032A  083B               	movf	___flmul@prod+1,w
  2991  032B  00A7               	movwf	?___flmul+1
  2992  032C  083A               	movf	___flmul@prod,w
  2993  032D  00A6               	movwf	?___flmul
  2994  032E  0008               	return
  2995  032F                     __end_of___flmul:	
  2996                           
  2997                           	psect	text8
  2998  0BA5                     __ptext8:	
  2999 ;; *************** function __Umul8_16 *****************
  3000 ;; Defined at:
  3001 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  multiplier      1    wreg     unsigned char 
  3004 ;;  multiplicand    1    2[COMMON] unsigned char 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  multiplier      1   10[COMMON] unsigned char 
  3007 ;;  word_mpld       2    8[COMMON] unsigned int 
  3008 ;;  product         2    6[COMMON] unsigned int 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  2    2[COMMON] unsigned int 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3018 ;;      Params:         2       0       0       0       0
  3019 ;;      Locals:         5       0       0       0       0
  3020 ;;      Temps:          2       0       0       0       0
  3021 ;;      Totals:         9       0       0       0       0
  3022 ;;Total ram usage:        9 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:    1
  3025 ;; This function calls:
  3026 ;;		Nothing
  3027 ;; This function is called by:
  3028 ;;		___flmul
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           
  3033                           ;psect for function __Umul8_16
  3034  0BA5                     __Umul8_16:	
  3035                           
  3036                           ;incstack = 0
  3037                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3038                           ;__Umul8_16@multiplier stored from wreg
  3039  0BA5  00FA               	movwf	__Umul8_16@multiplier
  3040  0BA6  01F6               	clrf	__Umul8_16@product
  3041  0BA7  01F7               	clrf	__Umul8_16@product+1
  3042  0BA8  0872               	movf	__Umul8_16@multiplicand,w
  3043  0BA9  00F4               	movwf	??__Umul8_16
  3044  0BAA  01F5               	clrf	??__Umul8_16+1
  3045  0BAB  0874               	movf	??__Umul8_16,w
  3046  0BAC  00F8               	movwf	__Umul8_16@word_mpld
  3047  0BAD  0875               	movf	??__Umul8_16+1,w
  3048  0BAE  00F9               	movwf	__Umul8_16@word_mpld+1
  3049  0BAF                     l1657:	
  3050  0BAF  1C7A               	btfss	__Umul8_16@multiplier,0
  3051  0BB0  2BB7               	goto	l681
  3052  0BB1  0878               	movf	__Umul8_16@word_mpld,w
  3053  0BB2  07F6               	addwf	__Umul8_16@product,f
  3054  0BB3  1803               	skipnc
  3055  0BB4  0AF7               	incf	__Umul8_16@product+1,f
  3056  0BB5  0879               	movf	__Umul8_16@word_mpld+1,w
  3057  0BB6  07F7               	addwf	__Umul8_16@product+1,f
  3058  0BB7                     l681:	
  3059  0BB7  3001               	movlw	1
  3060  0BB8                     u1825:	
  3061  0BB8  1003               	clrc
  3062  0BB9  0DF8               	rlf	__Umul8_16@word_mpld,f
  3063  0BBA  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  3064  0BBB  3EFF               	addlw	-1
  3065  0BBC  1D03               	skipz
  3066  0BBD  2BB8               	goto	u1825
  3067  0BBE  1003               	clrc
  3068  0BBF  0CFA               	rrf	__Umul8_16@multiplier,f
  3069  0BC0  087A               	movf	__Umul8_16@multiplier,w
  3070  0BC1  1D03               	btfss	3,2
  3071  0BC2  2BAF               	goto	l1657
  3072  0BC3  0877               	movf	__Umul8_16@product+1,w
  3073  0BC4  00F3               	movwf	?__Umul8_16+1
  3074  0BC5  0876               	movf	__Umul8_16@product,w
  3075  0BC6  00F2               	movwf	?__Umul8_16
  3076  0BC7  0008               	return
  3077  0BC8                     __end_of__Umul8_16:	
  3078                           
  3079                           	psect	text9
  3080  0E57                     __ptext9:	
  3081 ;; *************** function ___fldiv *****************
  3082 ;; Defined at:
  3083 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  a               4    2[COMMON] unsigned int 
  3086 ;;  b               4    6[COMMON] unsigned int 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  grs             4   12[BANK0 ] unsigned long 
  3089 ;;  rem             4    5[BANK0 ] unsigned long 
  3090 ;;  new_exp         2   10[BANK0 ] int 
  3091 ;;  aexp            1   17[BANK0 ] unsigned char 
  3092 ;;  bexp            1   16[BANK0 ] unsigned char 
  3093 ;;  sign            1    9[BANK0 ] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  4    2[COMMON] unsigned char 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0, btemp+1
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3103 ;;      Params:         8       0       0       0       0
  3104 ;;      Locals:         0      13       0       0       0
  3105 ;;      Temps:          0       5       0       0       0
  3106 ;;      Totals:         8      18       0       0       0
  3107 ;;Total ram usage:       26 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    1
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_medeRPM
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           
  3118                           ;psect for function ___fldiv
  3119  0E57                     ___fldiv:	
  3120                           
  3121                           ;incstack = 0
  3122                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3123  0E57  0879               	movf	___fldiv@b+3,w
  3124  0E58  3980               	andlw	128
  3125  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  3126  0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  3127  0E5B  00A0               	movwf	??___fldiv
  3128  0E5C  0820               	movf	??___fldiv,w
  3129  0E5D  00A9               	movwf	___fldiv@sign
  3130  0E5E  0879               	movf	___fldiv@b+3,w
  3131  0E5F  00A0               	movwf	??___fldiv
  3132  0E60  0720               	addwf	??___fldiv,w
  3133  0E61  00A1               	movwf	??___fldiv+1
  3134  0E62  0821               	movf	??___fldiv+1,w
  3135  0E63  00B0               	movwf	___fldiv@bexp
  3136  0E64  1BF8               	btfsc	___fldiv@b+2,7
  3137  0E65  1430               	bsf	___fldiv@bexp,0
  3138  0E66  0830               	movf	___fldiv@bexp,w
  3139  0E67  1903               	btfsc	3,2
  3140  0E68  2E77               	goto	l2015
  3141  0E69  0A30               	incf	___fldiv@bexp,w
  3142  0E6A  1D03               	btfss	3,2
  3143  0E6B  2E74               	goto	l2011
  3144  0E6C  3000               	movlw	0
  3145  0E6D  00F9               	movwf	___fldiv@b+3
  3146  0E6E  3000               	movlw	0
  3147  0E6F  00F8               	movwf	___fldiv@b+2
  3148  0E70  3000               	movlw	0
  3149  0E71  00F7               	movwf	___fldiv@b+1
  3150  0E72  3000               	movlw	0
  3151  0E73  00F6               	movwf	___fldiv@b
  3152  0E74                     l2011:	
  3153  0E74  17F8               	bsf	___fldiv@b+2,7
  3154  0E75  01F9               	clrf	___fldiv@b+3
  3155  0E76  2E7F               	goto	l2017
  3156  0E77                     l2015:	
  3157  0E77  3000               	movlw	0
  3158  0E78  00F9               	movwf	___fldiv@b+3
  3159  0E79  3000               	movlw	0
  3160  0E7A  00F8               	movwf	___fldiv@b+2
  3161  0E7B  3000               	movlw	0
  3162  0E7C  00F7               	movwf	___fldiv@b+1
  3163  0E7D  3000               	movlw	0
  3164  0E7E  00F6               	movwf	___fldiv@b
  3165  0E7F                     l2017:	
  3166  0E7F  0875               	movf	___fldiv@a+3,w
  3167  0E80  3980               	andlw	128
  3168  0E81  00A0               	movwf	??___fldiv
  3169  0E82  0820               	movf	??___fldiv,w
  3170  0E83  06A9               	xorwf	___fldiv@sign,f
  3171  0E84  0875               	movf	___fldiv@a+3,w
  3172  0E85  00A0               	movwf	??___fldiv
  3173  0E86  0720               	addwf	??___fldiv,w
  3174  0E87  00A1               	movwf	??___fldiv+1
  3175  0E88  0821               	movf	??___fldiv+1,w
  3176  0E89  00B1               	movwf	___fldiv@aexp
  3177  0E8A  1BF4               	btfsc	___fldiv@a+2,7
  3178  0E8B  1431               	bsf	___fldiv@aexp,0
  3179  0E8C  0831               	movf	___fldiv@aexp,w
  3180  0E8D  1903               	btfsc	3,2
  3181  0E8E  2E9D               	goto	l2035
  3182  0E8F  0A31               	incf	___fldiv@aexp,w
  3183  0E90  1D03               	btfss	3,2
  3184  0E91  2E9A               	goto	l2031
  3185  0E92  3000               	movlw	0
  3186  0E93  00F5               	movwf	___fldiv@a+3
  3187  0E94  3000               	movlw	0
  3188  0E95  00F4               	movwf	___fldiv@a+2
  3189  0E96  3000               	movlw	0
  3190  0E97  00F3               	movwf	___fldiv@a+1
  3191  0E98  3000               	movlw	0
  3192  0E99  00F2               	movwf	___fldiv@a
  3193  0E9A                     l2031:	
  3194  0E9A  17F4               	bsf	___fldiv@a+2,7
  3195  0E9B  01F5               	clrf	___fldiv@a+3
  3196  0E9C  2EA5               	goto	l578
  3197  0E9D                     l2035:	
  3198  0E9D  3000               	movlw	0
  3199  0E9E  00F5               	movwf	___fldiv@a+3
  3200  0E9F  3000               	movlw	0
  3201  0EA0  00F4               	movwf	___fldiv@a+2
  3202  0EA1  3000               	movlw	0
  3203  0EA2  00F3               	movwf	___fldiv@a+1
  3204  0EA3  3000               	movlw	0
  3205  0EA4  00F2               	movwf	___fldiv@a
  3206  0EA5                     l578:	
  3207  0EA5  0875               	movf	___fldiv@a+3,w
  3208  0EA6  0474               	iorwf	___fldiv@a+2,w
  3209  0EA7  0473               	iorwf	___fldiv@a+1,w
  3210  0EA8  0472               	iorwf	___fldiv@a,w
  3211  0EA9  1D03               	skipz
  3212  0EAA  2EC4               	goto	l2045
  3213  0EAB  3000               	movlw	0
  3214  0EAC  00F9               	movwf	___fldiv@b+3
  3215  0EAD  3000               	movlw	0
  3216  0EAE  00F8               	movwf	___fldiv@b+2
  3217  0EAF  3000               	movlw	0
  3218  0EB0  00F7               	movwf	___fldiv@b+1
  3219  0EB1  3000               	movlw	0
  3220  0EB2  00F6               	movwf	___fldiv@b
  3221  0EB3  3080               	movlw	128
  3222  0EB4  04F8               	iorwf	___fldiv@b+2,f
  3223  0EB5  307F               	movlw	127
  3224  0EB6  04F9               	iorwf	___fldiv@b+3,f
  3225  0EB7                     L2:	
  3226  0EB7  0829               	movf	___fldiv@sign,w
  3227  0EB8  00A0               	movwf	??___fldiv
  3228  0EB9  0820               	movf	??___fldiv,w
  3229  0EBA  04F9               	iorwf	___fldiv@b+3,f
  3230  0EBB  0879               	movf	___fldiv@b+3,w
  3231  0EBC  00F5               	movwf	?___fldiv+3
  3232  0EBD  0878               	movf	___fldiv@b+2,w
  3233  0EBE  00F4               	movwf	?___fldiv+2
  3234  0EBF  0877               	movf	___fldiv@b+1,w
  3235  0EC0  00F3               	movwf	?___fldiv+1
  3236  0EC1  0876               	movf	___fldiv@b,w
  3237  0EC2  00F2               	movwf	?___fldiv
  3238  0EC3  0008               	return
  3239  0EC4                     l2045:	
  3240  0EC4  0830               	movf	___fldiv@bexp,w
  3241  0EC5  1D03               	btfss	3,2
  3242  0EC6  2ED0               	goto	l2051
  3243  0EC7  3000               	movlw	0
  3244  0EC8  00F5               	movwf	?___fldiv+3
  3245  0EC9  3000               	movlw	0
  3246  0ECA  00F4               	movwf	?___fldiv+2
  3247  0ECB  3000               	movlw	0
  3248  0ECC  00F3               	movwf	?___fldiv+1
  3249  0ECD  3000               	movlw	0
  3250  0ECE  00F2               	movwf	?___fldiv
  3251  0ECF  0008               	return
  3252  0ED0                     l2051:	
  3253  0ED0  0830               	movf	___fldiv@bexp,w
  3254  0ED1  00A0               	movwf	??___fldiv
  3255  0ED2  01A1               	clrf	??___fldiv+1
  3256  0ED3  0821               	movf	??___fldiv+1,w
  3257  0ED4  00A3               	movwf	??___fldiv+3
  3258  0ED5  0831               	movf	___fldiv@aexp,w
  3259  0ED6  0220               	subwf	??___fldiv,w
  3260  0ED7  00A2               	movwf	??___fldiv+2
  3261  0ED8  1C03               	skipc
  3262  0ED9  03A3               	decf	??___fldiv+3,f
  3263  0EDA  0822               	movf	??___fldiv+2,w
  3264  0EDB  3E7F               	addlw	127
  3265  0EDC  00AA               	movwf	___fldiv@new_exp
  3266  0EDD  0823               	movf	??___fldiv+3,w
  3267  0EDE  1803               	skipnc
  3268  0EDF  3E01               	addlw	1
  3269  0EE0  3E00               	addlw	0
  3270  0EE1  00AB               	movwf	___fldiv@new_exp+1
  3271  0EE2  0879               	movf	___fldiv@b+3,w
  3272  0EE3  00A8               	movwf	___fldiv@rem+3
  3273  0EE4  0878               	movf	___fldiv@b+2,w
  3274  0EE5  00A7               	movwf	___fldiv@rem+2
  3275  0EE6  0877               	movf	___fldiv@b+1,w
  3276  0EE7  00A6               	movwf	___fldiv@rem+1
  3277  0EE8  0876               	movf	___fldiv@b,w
  3278  0EE9  00A5               	movwf	___fldiv@rem
  3279  0EEA  3000               	movlw	0
  3280  0EEB  00F9               	movwf	___fldiv@b+3
  3281  0EEC  3000               	movlw	0
  3282  0EED  00F8               	movwf	___fldiv@b+2
  3283  0EEE  3000               	movlw	0
  3284  0EEF  00F7               	movwf	___fldiv@b+1
  3285  0EF0  3000               	movlw	0
  3286  0EF1  00F6               	movwf	___fldiv@b
  3287  0EF2  3000               	movlw	0
  3288  0EF3  00AF               	movwf	___fldiv@grs+3
  3289  0EF4  3000               	movlw	0
  3290  0EF5  00AE               	movwf	___fldiv@grs+2
  3291  0EF6  3000               	movlw	0
  3292  0EF7  00AD               	movwf	___fldiv@grs+1
  3293  0EF8  3000               	movlw	0
  3294  0EF9  00AC               	movwf	___fldiv@grs
  3295  0EFA  01B1               	clrf	___fldiv@aexp
  3296  0EFB                     l2079:	
  3297  0EFB  301A               	movlw	26
  3298  0EFC  0231               	subwf	___fldiv@aexp,w
  3299  0EFD  1803               	btfsc	3,0
  3300  0EFE  2F49               	goto	l2081
  3301  0EFF  0831               	movf	___fldiv@aexp,w
  3302  0F00  1903               	btfsc	3,2
  3303  0F01  2F1F               	goto	l2071
  3304  0F02  3001               	movlw	1
  3305  0F03  00A0               	movwf	??___fldiv
  3306  0F04                     u2695:	
  3307  0F04  1003               	clrc
  3308  0F05  0DA5               	rlf	___fldiv@rem,f
  3309  0F06  0DA6               	rlf	___fldiv@rem+1,f
  3310  0F07  0DA7               	rlf	___fldiv@rem+2,f
  3311  0F08  0DA8               	rlf	___fldiv@rem+3,f
  3312  0F09  0BA0               	decfsz	??___fldiv,f
  3313  0F0A  2F04               	goto	u2695
  3314  0F0B  3001               	movlw	1
  3315  0F0C  00A0               	movwf	??___fldiv
  3316  0F0D                     u2705:	
  3317  0F0D  1003               	clrc
  3318  0F0E  0DF6               	rlf	___fldiv@b,f
  3319  0F0F  0DF7               	rlf	___fldiv@b+1,f
  3320  0F10  0DF8               	rlf	___fldiv@b+2,f
  3321  0F11  0DF9               	rlf	___fldiv@b+3,f
  3322  0F12  0BA0               	decfsz	??___fldiv,f
  3323  0F13  2F0D               	goto	u2705
  3324  0F14  1BAF               	btfsc	___fldiv@grs+3,7
  3325  0F15  1476               	bsf	___fldiv@b,0
  3326  0F16  3001               	movlw	1
  3327  0F17  00A0               	movwf	??___fldiv
  3328  0F18                     u2725:	
  3329  0F18  1003               	clrc
  3330  0F19  0DAC               	rlf	___fldiv@grs,f
  3331  0F1A  0DAD               	rlf	___fldiv@grs+1,f
  3332  0F1B  0DAE               	rlf	___fldiv@grs+2,f
  3333  0F1C  0DAF               	rlf	___fldiv@grs+3,f
  3334  0F1D  0BA0               	decfsz	??___fldiv,f
  3335  0F1E  2F18               	goto	u2725
  3336  0F1F                     l2071:	
  3337  0F1F  0875               	movf	___fldiv@a+3,w
  3338  0F20  0228               	subwf	___fldiv@rem+3,w
  3339  0F21  1D03               	skipz
  3340  0F22  2F2D               	goto	u2735
  3341  0F23  0874               	movf	___fldiv@a+2,w
  3342  0F24  0227               	subwf	___fldiv@rem+2,w
  3343  0F25  1D03               	skipz
  3344  0F26  2F2D               	goto	u2735
  3345  0F27  0873               	movf	___fldiv@a+1,w
  3346  0F28  0226               	subwf	___fldiv@rem+1,w
  3347  0F29  1D03               	skipz
  3348  0F2A  2F2D               	goto	u2735
  3349  0F2B  0872               	movf	___fldiv@a,w
  3350  0F2C  0225               	subwf	___fldiv@rem,w
  3351  0F2D                     u2735:	
  3352  0F2D  1C03               	skipc
  3353  0F2E  2F44               	goto	l2077
  3354  0F2F  172F               	bsf	___fldiv@grs+3,6
  3355  0F30  0872               	movf	___fldiv@a,w
  3356  0F31  02A5               	subwf	___fldiv@rem,f
  3357  0F32  0873               	movf	___fldiv@a+1,w
  3358  0F33  1C03               	skipc
  3359  0F34  0F73               	incfsz	___fldiv@a+1,w
  3360  0F35  2F37               	goto	u2745
  3361  0F36  2F38               	goto	u2746
  3362  0F37                     u2745:	
  3363  0F37  02A6               	subwf	___fldiv@rem+1,f
  3364  0F38                     u2746:	
  3365  0F38  0874               	movf	___fldiv@a+2,w
  3366  0F39  1C03               	skipc
  3367  0F3A  0F74               	incfsz	___fldiv@a+2,w
  3368  0F3B  2F3D               	goto	u2747
  3369  0F3C  2F3E               	goto	u2748
  3370  0F3D                     u2747:	
  3371  0F3D  02A7               	subwf	___fldiv@rem+2,f
  3372  0F3E                     u2748:	
  3373  0F3E  0875               	movf	___fldiv@a+3,w
  3374  0F3F  1C03               	skipc
  3375  0F40  0F75               	incfsz	___fldiv@a+3,w
  3376  0F41  2F43               	goto	u2749
  3377  0F42  2F44               	goto	l2077
  3378  0F43                     u2749:	
  3379  0F43  02A8               	subwf	___fldiv@rem+3,f
  3380  0F44                     l2077:	
  3381  0F44  3001               	movlw	1
  3382  0F45  00A0               	movwf	??___fldiv
  3383  0F46  0820               	movf	??___fldiv,w
  3384  0F47  07B1               	addwf	___fldiv@aexp,f
  3385  0F48  2EFB               	goto	l2079
  3386  0F49                     l2081:	
  3387  0F49  0828               	movf	___fldiv@rem+3,w
  3388  0F4A  0427               	iorwf	___fldiv@rem+2,w
  3389  0F4B  0426               	iorwf	___fldiv@rem+1,w
  3390  0F4C  0425               	iorwf	___fldiv@rem,w
  3391  0F4D  1D03               	btfss	3,2
  3392  0F4E  142C               	bsf	___fldiv@grs,0
  3393  0F4F                     l2095:	
  3394  0F4F  1BF8               	btfsc	___fldiv@b+2,7
  3395  0F50  2F6C               	goto	l2097
  3396  0F51  3001               	movlw	1
  3397  0F52  00A0               	movwf	??___fldiv
  3398  0F53                     u2775:	
  3399  0F53  1003               	clrc
  3400  0F54  0DF6               	rlf	___fldiv@b,f
  3401  0F55  0DF7               	rlf	___fldiv@b+1,f
  3402  0F56  0DF8               	rlf	___fldiv@b+2,f
  3403  0F57  0DF9               	rlf	___fldiv@b+3,f
  3404  0F58  0BA0               	decfsz	??___fldiv,f
  3405  0F59  2F53               	goto	u2775
  3406  0F5A  1BAF               	btfsc	___fldiv@grs+3,7
  3407  0F5B  1476               	bsf	___fldiv@b,0
  3408  0F5C  3001               	movlw	1
  3409  0F5D  00A0               	movwf	??___fldiv
  3410  0F5E                     u2795:	
  3411  0F5E  1003               	clrc
  3412  0F5F  0DAC               	rlf	___fldiv@grs,f
  3413  0F60  0DAD               	rlf	___fldiv@grs+1,f
  3414  0F61  0DAE               	rlf	___fldiv@grs+2,f
  3415  0F62  0DAF               	rlf	___fldiv@grs+3,f
  3416  0F63  0BA0               	decfsz	??___fldiv,f
  3417  0F64  2F5E               	goto	u2795
  3418  0F65  30FF               	movlw	255
  3419  0F66  07AA               	addwf	___fldiv@new_exp,f
  3420  0F67  1803               	skipnc
  3421  0F68  0AAB               	incf	___fldiv@new_exp+1,f
  3422  0F69  30FF               	movlw	255
  3423  0F6A  07AB               	addwf	___fldiv@new_exp+1,f
  3424  0F6B  2F4F               	goto	l2095
  3425  0F6C                     l2097:	
  3426  0F6C  01B1               	clrf	___fldiv@aexp
  3427  0F6D  1FAF               	btfss	___fldiv@grs+3,7
  3428  0F6E  2F85               	goto	l2107
  3429  0F6F  30FF               	movlw	255
  3430  0F70  052C               	andwf	___fldiv@grs,w
  3431  0F71  00A0               	movwf	??___fldiv
  3432  0F72  30FF               	movlw	255
  3433  0F73  052D               	andwf	___fldiv@grs+1,w
  3434  0F74  00A1               	movwf	??___fldiv+1
  3435  0F75  30FF               	movlw	255
  3436  0F76  052E               	andwf	___fldiv@grs+2,w
  3437  0F77  00A2               	movwf	??___fldiv+2
  3438  0F78  307F               	movlw	127
  3439  0F79  052F               	andwf	___fldiv@grs+3,w
  3440  0F7A  00A3               	movwf	??___fldiv+3
  3441  0F7B  0823               	movf	??___fldiv+3,w
  3442  0F7C  0422               	iorwf	??___fldiv+2,w
  3443  0F7D  0421               	iorwf	??___fldiv+1,w
  3444  0F7E  0420               	iorwf	??___fldiv,w
  3445  0F7F  1903               	skipnz
  3446  0F80  1876               	btfsc	___fldiv@b,0
  3447  0F81  2F83               	goto	l2103
  3448  0F82  2F85               	goto	l2107
  3449  0F83                     l2103:	
  3450  0F83  01B1               	clrf	___fldiv@aexp
  3451  0F84  0AB1               	incf	___fldiv@aexp,f
  3452  0F85                     l2107:	
  3453  0F85  0831               	movf	___fldiv@aexp,w
  3454  0F86  1903               	btfsc	3,2
  3455  0F87  2FB7               	goto	l2117
  3456  0F88  3001               	movlw	1
  3457  0F89  07F6               	addwf	___fldiv@b,f
  3458  0F8A  3000               	movlw	0
  3459  0F8B  1803               	skipnc
  3460  0F8C  3001               	movlw	1
  3461  0F8D  07F7               	addwf	___fldiv@b+1,f
  3462  0F8E  3000               	movlw	0
  3463  0F8F  1803               	skipnc
  3464  0F90  3001               	movlw	1
  3465  0F91  07F8               	addwf	___fldiv@b+2,f
  3466  0F92  3000               	movlw	0
  3467  0F93  1803               	skipnc
  3468  0F94  3001               	movlw	1
  3469  0F95  07F9               	addwf	___fldiv@b+3,f
  3470  0F96  1C79               	btfss	___fldiv@b+3,0
  3471  0F97  2FB7               	goto	l2117
  3472  0F98  0876               	movf	___fldiv@b,w
  3473  0F99  00A0               	movwf	??___fldiv
  3474  0F9A  0877               	movf	___fldiv@b+1,w
  3475  0F9B  00A1               	movwf	??___fldiv+1
  3476  0F9C  0878               	movf	___fldiv@b+2,w
  3477  0F9D  00A2               	movwf	??___fldiv+2
  3478  0F9E  0879               	movf	___fldiv@b+3,w
  3479  0F9F  00A3               	movwf	??___fldiv+3
  3480  0FA0  3001               	movlw	1
  3481  0FA1  00A4               	movwf	??___fldiv+4
  3482  0FA2                     u2865:	
  3483  0FA2  0D23               	rlf	??___fldiv+3,w
  3484  0FA3  0CA3               	rrf	??___fldiv+3,f
  3485  0FA4  0CA2               	rrf	??___fldiv+2,f
  3486  0FA5  0CA1               	rrf	??___fldiv+1,f
  3487  0FA6  0CA0               	rrf	??___fldiv,f
  3488  0FA7  0BA4               	decfsz	??___fldiv+4,f
  3489  0FA8  2FA2               	goto	u2865
  3490  0FA9  0823               	movf	??___fldiv+3,w
  3491  0FAA  00F9               	movwf	___fldiv@b+3
  3492  0FAB  0822               	movf	??___fldiv+2,w
  3493  0FAC  00F8               	movwf	___fldiv@b+2
  3494  0FAD  0821               	movf	??___fldiv+1,w
  3495  0FAE  00F7               	movwf	___fldiv@b+1
  3496  0FAF  0820               	movf	??___fldiv,w
  3497  0FB0  00F6               	movwf	___fldiv@b
  3498  0FB1  3001               	movlw	1
  3499  0FB2  07AA               	addwf	___fldiv@new_exp,f
  3500  0FB3  1803               	skipnc
  3501  0FB4  0AAB               	incf	___fldiv@new_exp+1,f
  3502  0FB5  3000               	movlw	0
  3503  0FB6  07AB               	addwf	___fldiv@new_exp+1,f
  3504  0FB7                     l2117:	
  3505  0FB7  082B               	movf	___fldiv@new_exp+1,w
  3506  0FB8  3A80               	xorlw	128
  3507  0FB9  00FF               	movwf	127
  3508  0FBA  3080               	movlw	128
  3509  0FBB  027F               	subwf	127,w
  3510  0FBC  1D03               	skipz
  3511  0FBD  2FC0               	goto	u2875
  3512  0FBE  30FF               	movlw	255
  3513  0FBF  022A               	subwf	___fldiv@new_exp,w
  3514  0FC0                     u2875:	
  3515  0FC0  1C03               	skipc
  3516  0FC1  2FD0               	goto	l2121
  3517  0FC2  30FF               	movlw	255
  3518  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  3519  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  3520  0FC5  00AA               	movwf	___fldiv@new_exp
  3521  0FC6  3000               	movlw	0
  3522  0FC7  00AB               	movwf	___fldiv@new_exp+1
  3523  0FC8  3000               	movlw	0
  3524  0FC9  00F9               	movwf	___fldiv@b+3
  3525  0FCA  3000               	movlw	0
  3526  0FCB  00F8               	movwf	___fldiv@b+2
  3527  0FCC  3000               	movlw	0
  3528  0FCD  00F7               	movwf	___fldiv@b+1
  3529  0FCE  3000               	movlw	0
  3530  0FCF  00F6               	movwf	___fldiv@b
  3531  0FD0                     l2121:	
  3532  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3533  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  3534  0FD2  082B               	movf	___fldiv@new_exp+1,w
  3535  0FD3  3A80               	xorlw	128
  3536  0FD4  00FF               	movwf	127
  3537  0FD5  3080               	movlw	128
  3538  0FD6  027F               	subwf	127,w
  3539  0FD7  1D03               	skipz
  3540  0FD8  2FDB               	goto	u2885
  3541  0FD9  3001               	movlw	1
  3542  0FDA  022A               	subwf	___fldiv@new_exp,w
  3543  0FDB                     u2885:	
  3544  0FDB  1803               	skipnc
  3545  0FDC  2FEA               	goto	l600
  3546  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3547  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  3548  0FDF  01AA               	clrf	___fldiv@new_exp
  3549  0FE0  01AB               	clrf	___fldiv@new_exp+1
  3550  0FE1  3000               	movlw	0
  3551  0FE2  00F9               	movwf	___fldiv@b+3
  3552  0FE3  3000               	movlw	0
  3553  0FE4  00F8               	movwf	___fldiv@b+2
  3554  0FE5  3000               	movlw	0
  3555  0FE6  00F7               	movwf	___fldiv@b+1
  3556  0FE7  3000               	movlw	0
  3557  0FE8  00F6               	movwf	___fldiv@b
  3558  0FE9  01A9               	clrf	___fldiv@sign
  3559  0FEA                     l600:	
  3560  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  3561  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  3562  0FEC  082A               	movf	___fldiv@new_exp,w
  3563  0FED  00A0               	movwf	??___fldiv
  3564  0FEE  0820               	movf	??___fldiv,w
  3565  0FEF  00B0               	movwf	___fldiv@bexp
  3566  0FF0  1C30               	btfss	___fldiv@bexp,0
  3567  0FF1  2FF4               	goto	l2133
  3568  0FF2  17F8               	bsf	___fldiv@b+2,7
  3569  0FF3  2FF8               	goto	l602
  3570  0FF4                     l2133:	
  3571  0FF4  307F               	movlw	127
  3572  0FF5  00A0               	movwf	??___fldiv
  3573  0FF6  0820               	movf	??___fldiv,w
  3574  0FF7  05F8               	andwf	___fldiv@b+2,f
  3575  0FF8                     l602:	
  3576  0FF8  0830               	movf	___fldiv@bexp,w
  3577  0FF9  00A0               	movwf	??___fldiv
  3578  0FFA  1003               	clrc
  3579  0FFB  0C20               	rrf	??___fldiv,w
  3580  0FFC  00A1               	movwf	??___fldiv+1
  3581  0FFD  0821               	movf	??___fldiv+1,w
  3582  0FFE  00F9               	movwf	___fldiv@b+3
  3583  0FFF  2EB7               	goto	L2
  3584  1000                     __end_of___fldiv:	
  3585                           
  3586                           	psect	text10
  3587  032F                     __ptext10:	
  3588 ;; *************** function ___fladd *****************
  3589 ;; Defined at:
  3590 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  b               4   32[BANK0 ] unsigned char 
  3593 ;;  a               4   36[BANK0 ] unsigned char 
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;  grs             1   51[BANK0 ] unsigned char 
  3596 ;;  bexp            1   50[BANK0 ] unsigned char 
  3597 ;;  aexp            1   49[BANK0 ] unsigned char 
  3598 ;;  signs           1   48[BANK0 ] unsigned char 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  4   32[BANK0 ] unsigned char 
  3601 ;; Registers used:
  3602 ;;		wreg, status,2, status,0, btemp+1
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3608 ;;      Params:         0       8       0       0       0
  3609 ;;      Locals:         0       4       0       0       0
  3610 ;;      Temps:          0       8       0       0       0
  3611 ;;      Totals:         0      20       0       0       0
  3612 ;;Total ram usage:       20 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:    1
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_medeRPM
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           
  3623                           ;psect for function ___fladd
  3624  032F                     ___fladd:	
  3625                           
  3626                           ;incstack = 0
  3627                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3628  032F  1283               	bcf	3,5	;RP0=0, select bank0
  3629  0330  1303               	bcf	3,6	;RP1=0, select bank0
  3630  0331  0843               	movf	___fladd@b+3,w
  3631  0332  3980               	andlw	128
  3632  0333  00C8               	movwf	??___fladd
  3633  0334  0848               	movf	??___fladd,w
  3634  0335  00D0               	movwf	___fladd@signs
  3635  0336  0843               	movf	___fladd@b+3,w
  3636  0337  00C8               	movwf	??___fladd
  3637  0338  0748               	addwf	??___fladd,w
  3638  0339  00C9               	movwf	??___fladd+1
  3639  033A  0849               	movf	??___fladd+1,w
  3640  033B  00D2               	movwf	___fladd@bexp
  3641  033C  1BC2               	btfsc	___fladd@b+2,7
  3642  033D  1452               	bsf	___fladd@bexp,0
  3643  033E  0852               	movf	___fladd@bexp,w
  3644  033F  1903               	btfsc	3,2
  3645  0340  2B4F               	goto	l1821
  3646  0341  0A52               	incf	___fladd@bexp,w
  3647  0342  1D03               	btfss	3,2
  3648  0343  2B4C               	goto	l1817
  3649  0344  3000               	movlw	0
  3650  0345  00C3               	movwf	___fladd@b+3
  3651  0346  3000               	movlw	0
  3652  0347  00C2               	movwf	___fladd@b+2
  3653  0348  3000               	movlw	0
  3654  0349  00C1               	movwf	___fladd@b+1
  3655  034A  3000               	movlw	0
  3656  034B  00C0               	movwf	___fladd@b
  3657  034C                     l1817:	
  3658  034C  17C2               	bsf	___fladd@b+2,7
  3659  034D  01C3               	clrf	___fladd@b+3
  3660  034E  2B57               	goto	l1823
  3661  034F                     l1821:	
  3662  034F  3000               	movlw	0
  3663  0350  00C3               	movwf	___fladd@b+3
  3664  0351  3000               	movlw	0
  3665  0352  00C2               	movwf	___fladd@b+2
  3666  0353  3000               	movlw	0
  3667  0354  00C1               	movwf	___fladd@b+1
  3668  0355  3000               	movlw	0
  3669  0356  00C0               	movwf	___fladd@b
  3670  0357                     l1823:	
  3671  0357  0847               	movf	___fladd@a+3,w
  3672  0358  3980               	andlw	128
  3673  0359  00C8               	movwf	??___fladd
  3674  035A  0848               	movf	??___fladd,w
  3675  035B  00D1               	movwf	___fladd@aexp
  3676  035C  0851               	movf	___fladd@aexp,w
  3677  035D  0650               	xorwf	___fladd@signs,w
  3678  035E  1D03               	btfss	3,2
  3679  035F  1750               	bsf	___fladd@signs,6
  3680  0360  0847               	movf	___fladd@a+3,w
  3681  0361  00C8               	movwf	??___fladd
  3682  0362  0748               	addwf	??___fladd,w
  3683  0363  00C9               	movwf	??___fladd+1
  3684  0364  0849               	movf	??___fladd+1,w
  3685  0365  00D1               	movwf	___fladd@aexp
  3686  0366  1BC6               	btfsc	___fladd@a+2,7
  3687  0367  1451               	bsf	___fladd@aexp,0
  3688  0368  0851               	movf	___fladd@aexp,w
  3689  0369  1903               	btfsc	3,2
  3690  036A  2B79               	goto	l1845
  3691  036B  0A51               	incf	___fladd@aexp,w
  3692  036C  1D03               	btfss	3,2
  3693  036D  2B76               	goto	l1841
  3694  036E  3000               	movlw	0
  3695  036F  00C7               	movwf	___fladd@a+3
  3696  0370  3000               	movlw	0
  3697  0371  00C6               	movwf	___fladd@a+2
  3698  0372  3000               	movlw	0
  3699  0373  00C5               	movwf	___fladd@a+1
  3700  0374  3000               	movlw	0
  3701  0375  00C4               	movwf	___fladd@a
  3702  0376                     l1841:	
  3703  0376  17C6               	bsf	___fladd@a+2,7
  3704  0377  01C7               	clrf	___fladd@a+3
  3705  0378  2B81               	goto	l522
  3706  0379                     l1845:	
  3707  0379  3000               	movlw	0
  3708  037A  00C7               	movwf	___fladd@a+3
  3709  037B  3000               	movlw	0
  3710  037C  00C6               	movwf	___fladd@a+2
  3711  037D  3000               	movlw	0
  3712  037E  00C5               	movwf	___fladd@a+1
  3713  037F  3000               	movlw	0
  3714  0380  00C4               	movwf	___fladd@a
  3715  0381                     l522:	
  3716  0381  0852               	movf	___fladd@bexp,w
  3717  0382  0251               	subwf	___fladd@aexp,w
  3718  0383  1803               	skipnc
  3719  0384  2BC7               	goto	l1881
  3720  0385  1F50               	btfss	___fladd@signs,6
  3721  0386  2B8B               	goto	l1851
  3722  0387  3080               	movlw	128
  3723  0388  00C8               	movwf	??___fladd
  3724  0389  0848               	movf	??___fladd,w
  3725  038A  06D0               	xorwf	___fladd@signs,f
  3726  038B                     l1851:	
  3727  038B  0852               	movf	___fladd@bexp,w
  3728  038C  00C8               	movwf	??___fladd
  3729  038D  0848               	movf	??___fladd,w
  3730  038E  00D3               	movwf	___fladd@grs
  3731  038F  0851               	movf	___fladd@aexp,w
  3732  0390  00C8               	movwf	??___fladd
  3733  0391  0848               	movf	??___fladd,w
  3734  0392  00D2               	movwf	___fladd@bexp
  3735  0393  0853               	movf	___fladd@grs,w
  3736  0394  00C8               	movwf	??___fladd
  3737  0395  0848               	movf	??___fladd,w
  3738  0396  00D1               	movwf	___fladd@aexp
  3739  0397  0840               	movf	___fladd@b,w
  3740  0398  00C8               	movwf	??___fladd
  3741  0399  0848               	movf	??___fladd,w
  3742  039A  00D3               	movwf	___fladd@grs
  3743  039B  0844               	movf	___fladd@a,w
  3744  039C  00C8               	movwf	??___fladd
  3745  039D  0848               	movf	??___fladd,w
  3746  039E  00C0               	movwf	___fladd@b
  3747  039F  0853               	movf	___fladd@grs,w
  3748  03A0  00C8               	movwf	??___fladd
  3749  03A1  0848               	movf	??___fladd,w
  3750  03A2  00C4               	movwf	___fladd@a
  3751  03A3  0841               	movf	___fladd@b+1,w
  3752  03A4  00C8               	movwf	??___fladd
  3753  03A5  0848               	movf	??___fladd,w
  3754  03A6  00D3               	movwf	___fladd@grs
  3755  03A7  0845               	movf	___fladd@a+1,w
  3756  03A8  00C8               	movwf	??___fladd
  3757  03A9  0848               	movf	??___fladd,w
  3758  03AA  00C1               	movwf	___fladd@b+1
  3759  03AB  0853               	movf	___fladd@grs,w
  3760  03AC  00C8               	movwf	??___fladd
  3761  03AD  0848               	movf	??___fladd,w
  3762  03AE  00C5               	movwf	___fladd@a+1
  3763  03AF  0842               	movf	___fladd@b+2,w
  3764  03B0  00C8               	movwf	??___fladd
  3765  03B1  0848               	movf	??___fladd,w
  3766  03B2  00D3               	movwf	___fladd@grs
  3767  03B3  0846               	movf	___fladd@a+2,w
  3768  03B4  00C8               	movwf	??___fladd
  3769  03B5  0848               	movf	??___fladd,w
  3770  03B6  00C2               	movwf	___fladd@b+2
  3771  03B7  0853               	movf	___fladd@grs,w
  3772  03B8  00C8               	movwf	??___fladd
  3773  03B9  0848               	movf	??___fladd,w
  3774  03BA  00C6               	movwf	___fladd@a+2
  3775  03BB  0843               	movf	___fladd@b+3,w
  3776  03BC  00C8               	movwf	??___fladd
  3777  03BD  0848               	movf	??___fladd,w
  3778  03BE  00D3               	movwf	___fladd@grs
  3779  03BF  0847               	movf	___fladd@a+3,w
  3780  03C0  00C8               	movwf	??___fladd
  3781  03C1  0848               	movf	??___fladd,w
  3782  03C2  00C3               	movwf	___fladd@b+3
  3783  03C3  0853               	movf	___fladd@grs,w
  3784  03C4  00C8               	movwf	??___fladd
  3785  03C5  0848               	movf	??___fladd,w
  3786  03C6  00C7               	movwf	___fladd@a+3
  3787  03C7                     l1881:	
  3788  03C7  01D3               	clrf	___fladd@grs
  3789  03C8  0851               	movf	___fladd@aexp,w
  3790  03C9  00C8               	movwf	??___fladd
  3791  03CA  01C9               	clrf	??___fladd+1
  3792  03CB  0849               	movf	??___fladd+1,w
  3793  03CC  00CB               	movwf	??___fladd+3
  3794  03CD  0852               	movf	___fladd@bexp,w
  3795  03CE  0248               	subwf	??___fladd,w
  3796  03CF  00CA               	movwf	??___fladd+2
  3797  03D0  1C03               	skipc
  3798  03D1  03CB               	decf	??___fladd+3,f
  3799  03D2  084B               	movf	??___fladd+3,w
  3800  03D3  3A80               	xorlw	128
  3801  03D4  00FF               	movwf	127
  3802  03D5  3080               	movlw	128
  3803  03D6  027F               	subwf	127,w
  3804  03D7  1D03               	skipz
  3805  03D8  2BDB               	goto	u2235
  3806  03D9  301A               	movlw	26
  3807  03DA  024A               	subwf	??___fladd+2,w
  3808  03DB                     u2235:	
  3809  03DB  1C03               	skipc
  3810  03DC  2C14               	goto	l1899
  3811  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  3812  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  3813  03DF  0843               	movf	___fladd@b+3,w
  3814  03E0  0442               	iorwf	___fladd@b+2,w
  3815  03E1  0441               	iorwf	___fladd@b+1,w
  3816  03E2  0440               	iorwf	___fladd@b,w
  3817  03E3  1903               	btfsc	3,2
  3818  03E4  2BE7               	goto	u2240
  3819  03E5  3001               	movlw	1
  3820  03E6  2BE8               	goto	u2250
  3821  03E7                     u2240:	
  3822  03E7  3000               	movlw	0
  3823  03E8                     u2250:	
  3824  03E8  00C8               	movwf	??___fladd
  3825  03E9  0848               	movf	??___fladd,w
  3826  03EA  00D3               	movwf	___fladd@grs
  3827  03EB  3000               	movlw	0
  3828  03EC  00C3               	movwf	___fladd@b+3
  3829  03ED  3000               	movlw	0
  3830  03EE  00C2               	movwf	___fladd@b+2
  3831  03EF  3000               	movlw	0
  3832  03F0  00C1               	movwf	___fladd@b+1
  3833  03F1  3000               	movlw	0
  3834  03F2  00C0               	movwf	___fladd@b
  3835  03F3  0851               	movf	___fladd@aexp,w
  3836  03F4  00C8               	movwf	??___fladd
  3837  03F5  0848               	movf	??___fladd,w
  3838  03F6  00D2               	movwf	___fladd@bexp
  3839  03F7  2C1A               	goto	l526
  3840  03F8                     l528:	
  3841  03F8  1C53               	btfss	___fladd@grs,0
  3842  03F9  2C03               	goto	l1889
  3843  03FA  0853               	movf	___fladd@grs,w
  3844  03FB  00C8               	movwf	??___fladd
  3845  03FC  1003               	clrc
  3846  03FD  0C48               	rrf	??___fladd,w
  3847  03FE  3801               	iorlw	1
  3848  03FF  00C9               	movwf	??___fladd+1
  3849  0400  0849               	movf	??___fladd+1,w
  3850  0401  00D3               	movwf	___fladd@grs
  3851  0402  2C05               	goto	l1891
  3852  0403                     l1889:	
  3853  0403  1003               	clrc
  3854  0404  0CD3               	rrf	___fladd@grs,f
  3855  0405                     l1891:	
  3856  0405  1840               	btfsc	___fladd@b,0
  3857  0406  17D3               	bsf	___fladd@grs,7
  3858  0407  3001               	movlw	1
  3859  0408  00C8               	movwf	??___fladd
  3860  0409                     u2285:	
  3861  0409  0D43               	rlf	___fladd@b+3,w
  3862  040A  0CC3               	rrf	___fladd@b+3,f
  3863  040B  0CC2               	rrf	___fladd@b+2,f
  3864  040C  0CC1               	rrf	___fladd@b+1,f
  3865  040D  0CC0               	rrf	___fladd@b,f
  3866  040E  0BC8               	decfsz	??___fladd& (0+127),f
  3867  040F  2C09               	goto	u2285
  3868  0410  3001               	movlw	1
  3869  0411  00C8               	movwf	??___fladd
  3870  0412  0848               	movf	??___fladd,w
  3871  0413  07D2               	addwf	___fladd@bexp,f
  3872  0414                     l1899:	
  3873  0414  1283               	bcf	3,5	;RP0=0, select bank0
  3874  0415  1303               	bcf	3,6	;RP1=0, select bank0
  3875  0416  0851               	movf	___fladd@aexp,w
  3876  0417  0252               	subwf	___fladd@bexp,w
  3877  0418  1C03               	skipc
  3878  0419  2BF8               	goto	l528
  3879  041A                     l526:	
  3880  041A  1B50               	btfsc	___fladd@signs,6
  3881  041B  2C5B               	goto	l1925
  3882  041C  0852               	movf	___fladd@bexp,w
  3883  041D  1D03               	btfss	3,2
  3884  041E  2C28               	goto	l1907
  3885  041F  3000               	movlw	0
  3886  0420  00C3               	movwf	?___fladd+3
  3887  0421  3000               	movlw	0
  3888  0422  00C2               	movwf	?___fladd+2
  3889  0423  3000               	movlw	0
  3890  0424  00C1               	movwf	?___fladd+1
  3891  0425  3000               	movlw	0
  3892  0426  00C0               	movwf	?___fladd
  3893  0427  0008               	return
  3894  0428                     l1907:	
  3895  0428  0844               	movf	___fladd@a,w
  3896  0429  07C0               	addwf	___fladd@b,f
  3897  042A  0845               	movf	___fladd@a+1,w
  3898  042B  1103               	clrz
  3899  042C  1803               	skipnc
  3900  042D  3E01               	addlw	1
  3901  042E  1D03               	btfss	3,2
  3902  042F  07C1               	addwf	___fladd@b+1,f
  3903  0430  0846               	movf	___fladd@a+2,w
  3904  0431  1103               	clrz
  3905  0432  1803               	skipnc
  3906  0433  3E01               	addlw	1
  3907  0434  1D03               	btfss	3,2
  3908  0435  07C2               	addwf	___fladd@b+2,f
  3909  0436  0847               	movf	___fladd@a+3,w
  3910  0437  1103               	clrz
  3911  0438  1803               	skipnc
  3912  0439  3E01               	addlw	1
  3913  043A  1D03               	btfss	3,2
  3914  043B  07C3               	addwf	___fladd@b+3,f
  3915  043C  1C43               	btfss	___fladd@b+3,0
  3916  043D  2CFD               	goto	l1959
  3917  043E  1C53               	btfss	___fladd@grs,0
  3918  043F  2C49               	goto	l1915
  3919  0440  0853               	movf	___fladd@grs,w
  3920  0441  00C8               	movwf	??___fladd
  3921  0442  1003               	clrc
  3922  0443  0C48               	rrf	??___fladd,w
  3923  0444  3801               	iorlw	1
  3924  0445  00C9               	movwf	??___fladd+1
  3925  0446  0849               	movf	??___fladd+1,w
  3926  0447  00D3               	movwf	___fladd@grs
  3927  0448  2C4B               	goto	l1917
  3928  0449                     l1915:	
  3929  0449  1003               	clrc
  3930  044A  0CD3               	rrf	___fladd@grs,f
  3931  044B                     l1917:	
  3932  044B  1840               	btfsc	___fladd@b,0
  3933  044C  17D3               	bsf	___fladd@grs,7
  3934  044D  3001               	movlw	1
  3935  044E  00C8               	movwf	??___fladd
  3936  044F                     u2365:	
  3937  044F  0D43               	rlf	___fladd@b+3,w
  3938  0450  0CC3               	rrf	___fladd@b+3,f
  3939  0451  0CC2               	rrf	___fladd@b+2,f
  3940  0452  0CC1               	rrf	___fladd@b+1,f
  3941  0453  0CC0               	rrf	___fladd@b,f
  3942  0454  0BC8               	decfsz	??___fladd& (0+127),f
  3943  0455  2C4F               	goto	u2365
  3944  0456  3001               	movlw	1
  3945  0457  00C8               	movwf	??___fladd
  3946  0458  0848               	movf	??___fladd,w
  3947  0459  07D2               	addwf	___fladd@bexp,f
  3948  045A  2CFD               	goto	l1959
  3949  045B                     l1925:	
  3950  045B  0843               	movf	___fladd@b+3,w
  3951  045C  3A80               	xorlw	128
  3952  045D  00FF               	movwf	127
  3953  045E  0847               	movf	___fladd@a+3,w
  3954  045F  3A80               	xorlw	128
  3955  0460  027F               	subwf	127,w
  3956  0461  1D03               	skipz
  3957  0462  2C6D               	goto	u2373
  3958  0463  0846               	movf	___fladd@a+2,w
  3959  0464  0242               	subwf	___fladd@b+2,w
  3960  0465  1D03               	skipz
  3961  0466  2C6D               	goto	u2373
  3962  0467  0845               	movf	___fladd@a+1,w
  3963  0468  0241               	subwf	___fladd@b+1,w
  3964  0469  1D03               	skipz
  3965  046A  2C6D               	goto	u2373
  3966  046B  0844               	movf	___fladd@a,w
  3967  046C  0240               	subwf	___fladd@b,w
  3968  046D                     u2373:	
  3969  046D  1803               	skipnc
  3970  046E  2CC5               	goto	l1935
  3971  046F  30FF               	movlw	255
  3972  0470  00C8               	movwf	??___fladd
  3973  0471  30FF               	movlw	255
  3974  0472  00C9               	movwf	??___fladd+1
  3975  0473  30FF               	movlw	255
  3976  0474  00CA               	movwf	??___fladd+2
  3977  0475  30FF               	movlw	255
  3978  0476  00CB               	movwf	??___fladd+3
  3979  0477  0844               	movf	___fladd@a,w
  3980  0478  00CC               	movwf	??___fladd+4
  3981  0479  0845               	movf	___fladd@a+1,w
  3982  047A  00CD               	movwf	??___fladd+5
  3983  047B  0846               	movf	___fladd@a+2,w
  3984  047C  00CE               	movwf	??___fladd+6
  3985  047D  0847               	movf	___fladd@a+3,w
  3986  047E  00CF               	movwf	??___fladd+7
  3987  047F  0840               	movf	___fladd@b,w
  3988  0480  02CC               	subwf	??___fladd+4,f
  3989  0481  0841               	movf	___fladd@b+1,w
  3990  0482  1C03               	skipc
  3991  0483  0F41               	incfsz	___fladd@b+1,w
  3992  0484  2C86               	goto	u2381
  3993  0485  2C87               	goto	u2382
  3994  0486                     u2381:	
  3995  0486  02CD               	subwf	??___fladd+5,f
  3996  0487                     u2382:	
  3997  0487  0842               	movf	___fladd@b+2,w
  3998  0488  1C03               	skipc
  3999  0489  0F42               	incfsz	___fladd@b+2,w
  4000  048A  2C8C               	goto	u2383
  4001  048B  2C8D               	goto	u2384
  4002  048C                     u2383:	
  4003  048C  02CE               	subwf	??___fladd+6,f
  4004  048D                     u2384:	
  4005  048D  0843               	movf	___fladd@b+3,w
  4006  048E  1C03               	skipc
  4007  048F  0F43               	incfsz	___fladd@b+3,w
  4008  0490  2C92               	goto	u2385
  4009  0491  2C93               	goto	u2386
  4010  0492                     u2385:	
  4011  0492  02CF               	subwf	??___fladd+7,f
  4012  0493                     u2386:	
  4013  0493  084C               	movf	??___fladd+4,w
  4014  0494  07C8               	addwf	??___fladd,f
  4015  0495  084D               	movf	??___fladd+5,w
  4016  0496  1803               	skipnc
  4017  0497  0F4D               	incfsz	??___fladd+5,w
  4018  0498  2C9A               	goto	u2390
  4019  0499  2C9B               	goto	u2391
  4020  049A                     u2390:	
  4021  049A  07C9               	addwf	??___fladd+1,f
  4022  049B                     u2391:	
  4023  049B  084E               	movf	??___fladd+6,w
  4024  049C  1803               	skipnc
  4025  049D  0F4E               	incfsz	??___fladd+6,w
  4026  049E  2CA0               	goto	u2392
  4027  049F  2CA1               	goto	u2393
  4028  04A0                     u2392:	
  4029  04A0  07CA               	addwf	??___fladd+2,f
  4030  04A1                     u2393:	
  4031  04A1  084F               	movf	??___fladd+7,w
  4032  04A2  1803               	skipnc
  4033  04A3  0A4F               	incf	??___fladd+7,w
  4034  04A4  07CB               	addwf	??___fladd+3,f
  4035  04A5  084B               	movf	??___fladd+3,w
  4036  04A6  00C3               	movwf	___fladd@b+3
  4037  04A7  084A               	movf	??___fladd+2,w
  4038  04A8  00C2               	movwf	___fladd@b+2
  4039  04A9  0849               	movf	??___fladd+1,w
  4040  04AA  00C1               	movwf	___fladd@b+1
  4041  04AB  0848               	movf	??___fladd,w
  4042  04AC  00C0               	movwf	___fladd@b
  4043  04AD  3080               	movlw	128
  4044  04AE  00C8               	movwf	??___fladd
  4045  04AF  0848               	movf	??___fladd,w
  4046  04B0  06D0               	xorwf	___fladd@signs,f
  4047  04B1  09D3               	comf	___fladd@grs,f
  4048  04B2  0AD3               	incf	___fladd@grs,f
  4049  04B3  0853               	movf	___fladd@grs,w
  4050  04B4  1D03               	btfss	3,2
  4051  04B5  2CD3               	goto	l543
  4052  04B6  3001               	movlw	1
  4053  04B7  07C0               	addwf	___fladd@b,f
  4054  04B8  3000               	movlw	0
  4055  04B9  1803               	skipnc
  4056  04BA  3001               	movlw	1
  4057  04BB  07C1               	addwf	___fladd@b+1,f
  4058  04BC  3000               	movlw	0
  4059  04BD  1803               	skipnc
  4060  04BE  3001               	movlw	1
  4061  04BF  07C2               	addwf	___fladd@b+2,f
  4062  04C0  3000               	movlw	0
  4063  04C1  1803               	skipnc
  4064  04C2  3001               	movlw	1
  4065  04C3  07C3               	addwf	___fladd@b+3,f
  4066  04C4  2CD3               	goto	l543
  4067  04C5                     l1935:	
  4068  04C5  0844               	movf	___fladd@a,w
  4069  04C6  02C0               	subwf	___fladd@b,f
  4070  04C7  0845               	movf	___fladd@a+1,w
  4071  04C8  1C03               	skipc
  4072  04C9  0F45               	incfsz	___fladd@a+1,w
  4073  04CA  02C1               	subwf	___fladd@b+1,f
  4074  04CB  0846               	movf	___fladd@a+2,w
  4075  04CC  1C03               	skipc
  4076  04CD  0F46               	incfsz	___fladd@a+2,w
  4077  04CE  02C2               	subwf	___fladd@b+2,f
  4078  04CF  0847               	movf	___fladd@a+3,w
  4079  04D0  1C03               	skipc
  4080  04D1  0F47               	incfsz	___fladd@a+3,w
  4081  04D2  02C3               	subwf	___fladd@b+3,f
  4082  04D3                     l543:	
  4083  04D3  0843               	movf	___fladd@b+3,w
  4084  04D4  0442               	iorwf	___fladd@b+2,w
  4085  04D5  0441               	iorwf	___fladd@b+1,w
  4086  04D6  0440               	iorwf	___fladd@b,w
  4087  04D7  1D03               	skipz
  4088  04D8  2CFB               	goto	l1957
  4089  04D9  0853               	movf	___fladd@grs,w
  4090  04DA  1D03               	btfss	3,2
  4091  04DB  2CFB               	goto	l1957
  4092  04DC  3000               	movlw	0
  4093  04DD  00C3               	movwf	?___fladd+3
  4094  04DE  3000               	movlw	0
  4095  04DF  00C2               	movwf	?___fladd+2
  4096  04E0  3000               	movlw	0
  4097  04E1  00C1               	movwf	?___fladd+1
  4098  04E2  3000               	movlw	0
  4099  04E3  00C0               	movwf	?___fladd
  4100  04E4  0008               	return
  4101  04E5                     l1943:	
  4102  04E5  3001               	movlw	1
  4103  04E6  00C8               	movwf	??___fladd
  4104  04E7                     u2435:	
  4105  04E7  1003               	clrc
  4106  04E8  0DC0               	rlf	___fladd@b,f
  4107  04E9  0DC1               	rlf	___fladd@b+1,f
  4108  04EA  0DC2               	rlf	___fladd@b+2,f
  4109  04EB  0DC3               	rlf	___fladd@b+3,f
  4110  04EC  0BC8               	decfsz	??___fladd,f
  4111  04ED  2CE7               	goto	u2435
  4112  04EE  1BD3               	btfsc	___fladd@grs,7
  4113  04EF  1440               	bsf	___fladd@b,0
  4114  04F0  1C53               	btfss	___fladd@grs,0
  4115  04F1  2CF4               	goto	l1951
  4116  04F2  1403               	setc
  4117  04F3  2CF5               	goto	L3
  4118  04F4                     l1951:	
  4119  04F4  1003               	clrc
  4120  04F5                     L3:	
  4121  04F5  0DD3               	rlf	___fladd@grs,f
  4122  04F6  0852               	movf	___fladd@bexp,w
  4123  04F7  1903               	btfsc	3,2
  4124  04F8  2CFB               	goto	l1957
  4125  04F9  3001               	movlw	1
  4126  04FA  02D2               	subwf	___fladd@bexp,f
  4127  04FB                     l1957:	
  4128  04FB  1FC2               	btfss	___fladd@b+2,7
  4129  04FC  2CE5               	goto	l1943
  4130  04FD                     l1959:	
  4131  04FD  01D1               	clrf	___fladd@aexp
  4132  04FE  1FD3               	btfss	___fladd@grs,7
  4133  04FF  2D08               	goto	l1969
  4134  0500  0853               	movf	___fladd@grs,w
  4135  0501  397F               	andlw	127
  4136  0502  1903               	btfsc	3,2
  4137  0503  1840               	btfsc	___fladd@b,0
  4138  0504  2D06               	goto	l1965
  4139  0505  2D08               	goto	l1969
  4140  0506                     l1965:	
  4141  0506  01D1               	clrf	___fladd@aexp
  4142  0507  0AD1               	incf	___fladd@aexp,f
  4143  0508                     l1969:	
  4144  0508  0851               	movf	___fladd@aexp,w
  4145  0509  1903               	btfsc	3,2
  4146  050A  2D3B               	goto	l556
  4147  050B  3001               	movlw	1
  4148  050C  07C0               	addwf	___fladd@b,f
  4149  050D  3000               	movlw	0
  4150  050E  1803               	skipnc
  4151  050F  3001               	movlw	1
  4152  0510  07C1               	addwf	___fladd@b+1,f
  4153  0511  3000               	movlw	0
  4154  0512  1803               	skipnc
  4155  0513  3001               	movlw	1
  4156  0514  07C2               	addwf	___fladd@b+2,f
  4157  0515  3000               	movlw	0
  4158  0516  1803               	skipnc
  4159  0517  3001               	movlw	1
  4160  0518  07C3               	addwf	___fladd@b+3,f
  4161  0519  1C43               	btfss	___fladd@b+3,0
  4162  051A  2D3B               	goto	l556
  4163  051B  0840               	movf	___fladd@b,w
  4164  051C  00C8               	movwf	??___fladd
  4165  051D  0841               	movf	___fladd@b+1,w
  4166  051E  00C9               	movwf	??___fladd+1
  4167  051F  0842               	movf	___fladd@b+2,w
  4168  0520  00CA               	movwf	??___fladd+2
  4169  0521  0843               	movf	___fladd@b+3,w
  4170  0522  00CB               	movwf	??___fladd+3
  4171  0523  3001               	movlw	1
  4172  0524  00CC               	movwf	??___fladd+4
  4173  0525                     u2535:	
  4174  0525  0D4B               	rlf	??___fladd+3,w
  4175  0526  0CCB               	rrf	??___fladd+3,f
  4176  0527  0CCA               	rrf	??___fladd+2,f
  4177  0528  0CC9               	rrf	??___fladd+1,f
  4178  0529  0CC8               	rrf	??___fladd,f
  4179  052A  0BCC               	decfsz	??___fladd+4,f
  4180  052B  2D25               	goto	u2535
  4181  052C  084B               	movf	??___fladd+3,w
  4182  052D  00C3               	movwf	___fladd@b+3
  4183  052E  084A               	movf	??___fladd+2,w
  4184  052F  00C2               	movwf	___fladd@b+2
  4185  0530  0849               	movf	??___fladd+1,w
  4186  0531  00C1               	movwf	___fladd@b+1
  4187  0532  0848               	movf	??___fladd,w
  4188  0533  00C0               	movwf	___fladd@b
  4189  0534  0A52               	incf	___fladd@bexp,w
  4190  0535  1903               	btfsc	3,2
  4191  0536  2D3B               	goto	l556
  4192  0537  3001               	movlw	1
  4193  0538  00C8               	movwf	??___fladd
  4194  0539  0848               	movf	??___fladd,w
  4195  053A  07D2               	addwf	___fladd@bexp,f
  4196  053B                     l556:	
  4197  053B  0A52               	incf	___fladd@bexp,w
  4198  053C  1D03               	btfss	3,2
  4199  053D  0852               	movf	___fladd@bexp,w
  4200  053E  1D03               	btfss	3,2
  4201  053F  2D4B               	goto	l1987
  4202  0540  3000               	movlw	0
  4203  0541  00C3               	movwf	___fladd@b+3
  4204  0542  3000               	movlw	0
  4205  0543  00C2               	movwf	___fladd@b+2
  4206  0544  3000               	movlw	0
  4207  0545  00C1               	movwf	___fladd@b+1
  4208  0546  3000               	movlw	0
  4209  0547  00C0               	movwf	___fladd@b
  4210  0548  0852               	movf	___fladd@bexp,w
  4211  0549  1903               	btfsc	3,2
  4212  054A  01D0               	clrf	___fladd@signs
  4213  054B                     l1987:	
  4214  054B  1C52               	btfss	___fladd@bexp,0
  4215  054C  2D4F               	goto	l1991
  4216  054D  17C2               	bsf	___fladd@b+2,7
  4217  054E  2D53               	goto	l564
  4218  054F                     l1991:	
  4219  054F  307F               	movlw	127
  4220  0550  00C8               	movwf	??___fladd
  4221  0551  0848               	movf	??___fladd,w
  4222  0552  05C2               	andwf	___fladd@b+2,f
  4223  0553                     l564:	
  4224  0553  0852               	movf	___fladd@bexp,w
  4225  0554  00C8               	movwf	??___fladd
  4226  0555  1003               	clrc
  4227  0556  0C48               	rrf	??___fladd,w
  4228  0557  00C9               	movwf	??___fladd+1
  4229  0558  0849               	movf	??___fladd+1,w
  4230  0559  00C3               	movwf	___fladd@b+3
  4231  055A  1FD0               	btfss	___fladd@signs,7
  4232  055B  0008               	return
  4233  055C  17C3               	bsf	___fladd@b+3,7
  4234  055D  0008               	return
  4235  055E                     __end_of___fladd:	
  4236                           
  4237                           	psect	text11
  4238  0B82                     __ptext11:	
  4239 ;; *************** function _lcd_send_string *****************
  4240 ;; Defined at:
  4241 ;;		line 119 in file "newmain.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;  str             2    8[COMMON] PTR unsigned char 
  4244 ;;		 -> STR_6(9), STR_5(6), STR_4(17), STR_3(17), 
  4245 ;;		 -> STR_2(13), RPMCON(5), 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4257 ;;      Params:         2       0       0       0       0
  4258 ;;      Locals:         0       0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0
  4260 ;;      Totals:         2       0       0       0       0
  4261 ;;Total ram usage:        2 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    4
  4264 ;; This function calls:
  4265 ;;		_lcd_send_data
  4266 ;; This function is called by:
  4267 ;;		_main
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function _lcd_send_string
  4273  0B82                     _lcd_send_string:	
  4274  0B82                     l2369:	
  4275                           ;newmain.c: 119: void lcd_send_string (char *str);newmain.c: 120: {;newmain.c: 121:  whi
      +                          le (*str) lcd_send_data (*str++);
  4276                           
  4277                           ;incstack = 0
  4278                           ; Regs used in _lcd_send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4279                           
  4280  0B82  0879               	movf	lcd_send_string@str+1,w
  4281  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  4282  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  4283  0B85  00FF               	movwf	127
  4284  0B86  0878               	movf	lcd_send_string@str,w
  4285  0B87  0084               	movwf	4
  4286  0B88  120A  158A  2000  120A  158A  	fcall	stringtab
  4287  0B8D  3A00               	xorlw	0
  4288  0B8E  1903               	btfsc	3,2
  4289  0B8F  0008               	return
  4290  0B90  0879               	movf	lcd_send_string@str+1,w
  4291  0B91  00FF               	movwf	127
  4292  0B92  0878               	movf	lcd_send_string@str,w
  4293  0B93  0084               	movwf	4
  4294  0B94  120A  158A  2000  120A  158A  	fcall	stringtab
  4295  0B99  120A  158A  24A6  120A  158A  	fcall	_lcd_send_data
  4296  0B9E  3001               	movlw	1
  4297  0B9F  07F8               	addwf	lcd_send_string@str,f
  4298  0BA0  1803               	skipnc
  4299  0BA1  0AF9               	incf	lcd_send_string@str+1,f
  4300  0BA2  3000               	movlw	0
  4301  0BA3  07F9               	addwf	lcd_send_string@str+1,f
  4302  0BA4  2B82               	goto	l2369
  4303  0BA5                     __end_of_lcd_send_string:	
  4304                           
  4305                           	psect	text12
  4306  0B2C                     __ptext12:	
  4307 ;; *************** function _lcd_init *****************
  4308 ;; Defined at:
  4309 ;;		line 109 in file "newmain.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0, pclath, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4323 ;;      Params:         0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0
  4326 ;;      Totals:         0       0       0       0       0
  4327 ;;Total ram usage:        0 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    4
  4330 ;; This function calls:
  4331 ;;		_lcd_send_cmd
  4332 ;; This function is called by:
  4333 ;;		_main
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           
  4338                           ;psect for function _lcd_init
  4339  0B2C                     _lcd_init:	
  4340                           
  4341                           ;newmain.c: 111:  lcd_send_cmd (0x02);
  4342                           
  4343                           ;incstack = 0
  4344                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4345  0B2C  3002               	movlw	2
  4346  0B2D  120A  158A  2467  120A  158A  	fcall	_lcd_send_cmd
  4347                           
  4348                           ;newmain.c: 112:  lcd_send_cmd (0x28);
  4349  0B32  3028               	movlw	40
  4350  0B33  120A  158A  2467  120A  158A  	fcall	_lcd_send_cmd
  4351                           
  4352                           ;newmain.c: 113:  lcd_send_cmd (0x0c);
  4353  0B38  300C               	movlw	12
  4354  0B39  120A  158A  2467  120A  158A  	fcall	_lcd_send_cmd
  4355                           
  4356                           ;newmain.c: 114:  lcd_send_cmd (0x80);
  4357  0B3E  3080               	movlw	128
  4358  0B3F  120A  158A  2467   	fcall	_lcd_send_cmd
  4359  0B42  0008               	return
  4360  0B43                     __end_of_lcd_init:	
  4361                           
  4362                           	psect	text13
  4363  07BA                     __ptext13:	
  4364 ;; *************** function _lcd_clear *****************
  4365 ;; Defined at:
  4366 ;;		line 97 in file "newmain.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;		None
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;  i               2   10[COMMON] int 
  4371 ;;  i               2    8[COMMON] int 
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4381 ;;      Params:         0       0       0       0       0
  4382 ;;      Locals:         4       0       0       0       0
  4383 ;;      Temps:          0       0       0       0       0
  4384 ;;      Totals:         4       0       0       0       0
  4385 ;;Total ram usage:        4 bytes
  4386 ;; Hardware stack levels used:    1
  4387 ;; Hardware stack levels required when called:    4
  4388 ;; This function calls:
  4389 ;;		_lcd_send_cmd
  4390 ;;		_lcd_send_data
  4391 ;; This function is called by:
  4392 ;;		_main
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           
  4397                           ;psect for function _lcd_clear
  4398  07BA                     _lcd_clear:	
  4399                           
  4400                           ;newmain.c: 99:     lcd_send_cmd (0x80);
  4401                           
  4402                           ;incstack = 0
  4403                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4404  07BA  3080               	movlw	128
  4405  07BB  120A  158A  2467  120A  118A  	fcall	_lcd_send_cmd
  4406                           
  4407                           ;newmain.c: 100:     for (int i=0;i<60;i++) lcd_send_data (' ');
  4408  07C0  01F8               	clrf	lcd_clear@i
  4409  07C1  01F9               	clrf	lcd_clear@i+1
  4410  07C2                     l2341:	
  4411  07C2  3020               	movlw	32
  4412  07C3  120A  158A  24A6  120A  118A  	fcall	_lcd_send_data
  4413  07C8  3001               	movlw	1
  4414  07C9  07F8               	addwf	lcd_clear@i,f
  4415  07CA  1803               	skipnc
  4416  07CB  0AF9               	incf	lcd_clear@i+1,f
  4417  07CC  3000               	movlw	0
  4418  07CD  07F9               	addwf	lcd_clear@i+1,f
  4419  07CE  0879               	movf	lcd_clear@i+1,w
  4420  07CF  3A80               	xorlw	128
  4421  07D0  00FF               	movwf	127
  4422  07D1  3080               	movlw	128
  4423  07D2  027F               	subwf	127,w
  4424  07D3  1D03               	skipz
  4425  07D4  2FD7               	goto	u3425
  4426  07D5  303C               	movlw	60
  4427  07D6  0278               	subwf	lcd_clear@i,w
  4428  07D7                     u3425:	
  4429  07D7  1C03               	skipc
  4430  07D8  2FC2               	goto	l2341
  4431                           
  4432                           ;newmain.c: 102:     lcd_send_cmd (0xc0);
  4433  07D9  30C0               	movlw	192
  4434  07DA  120A  158A  2467  120A  118A  	fcall	_lcd_send_cmd
  4435                           
  4436                           ;newmain.c: 103:     for (int i=0;i<60;i++) lcd_send_data (' ');
  4437  07DF  01FA               	clrf	lcd_clear@i_236
  4438  07E0  01FB               	clrf	lcd_clear@i_236+1
  4439  07E1                     l2355:	
  4440  07E1  3020               	movlw	32
  4441  07E2  120A  158A  24A6  120A  118A  	fcall	_lcd_send_data
  4442  07E7  3001               	movlw	1
  4443  07E8  07FA               	addwf	lcd_clear@i_236,f
  4444  07E9  1803               	skipnc
  4445  07EA  0AFB               	incf	lcd_clear@i_236+1,f
  4446  07EB  3000               	movlw	0
  4447  07EC  07FB               	addwf	lcd_clear@i_236+1,f
  4448  07ED  087B               	movf	lcd_clear@i_236+1,w
  4449  07EE  3A80               	xorlw	128
  4450  07EF  00FF               	movwf	127
  4451  07F0  3080               	movlw	128
  4452  07F1  027F               	subwf	127,w
  4453  07F2  1D03               	skipz
  4454  07F3  2FF6               	goto	u3435
  4455  07F4  303C               	movlw	60
  4456  07F5  027A               	subwf	lcd_clear@i_236,w
  4457  07F6                     u3435:	
  4458  07F6  1803               	btfsc	3,0
  4459  07F7  0008               	return
  4460  07F8  2FE1               	goto	l2355
  4461  07F9                     __end_of_lcd_clear:	
  4462                           
  4463                           	psect	text14
  4464  0CA6                     __ptext14:	
  4465 ;; *************** function _lcd_send_data *****************
  4466 ;; Defined at:
  4467 ;;		line 61 in file "newmain.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  data            1    wreg     unsigned char 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;  data            1    5[COMMON] unsigned char 
  4472 ;;  data_u          1    7[COMMON] unsigned char 
  4473 ;;  data_l          1    6[COMMON] unsigned char 
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  1    wreg      void 
  4476 ;; Registers used:
  4477 ;;		wreg, status,2, status,0, pclath, cstack
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4483 ;;      Params:         0       0       0       0       0
  4484 ;;      Locals:         3       0       0       0       0
  4485 ;;      Temps:          2       0       0       0       0
  4486 ;;      Totals:         5       0       0       0       0
  4487 ;;Total ram usage:        5 bytes
  4488 ;; Hardware stack levels used:    1
  4489 ;; Hardware stack levels required when called:    3
  4490 ;; This function calls:
  4491 ;;		_I2C_start
  4492 ;;		_I2C_stop
  4493 ;;		_I2C_write
  4494 ;; This function is called by:
  4495 ;;		_lcd_clear
  4496 ;;		_lcd_send_string
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           
  4501                           ;psect for function _lcd_send_data
  4502  0CA6                     _lcd_send_data:	
  4503                           
  4504                           ;incstack = 0
  4505                           ; Regs used in _lcd_send_data: [wreg+status,2+status,0+pclath+cstack]
  4506                           ;lcd_send_data@data stored from wreg
  4507  0CA6  00F5               	movwf	lcd_send_data@data
  4508                           
  4509                           ;newmain.c: 61: void lcd_send_data (unsigned char data);newmain.c: 62: {;newmain.c: 63: 
      +                           unsigned char data_l, data_u;;newmain.c: 64:  data_l = (data<<4)&0xf0;
  4510  0CA7  0875               	movf	lcd_send_data@data,w
  4511  0CA8  00F3               	movwf	??_lcd_send_data
  4512  0CA9  3003               	movlw	3
  4513  0CAA                     u1845:	
  4514  0CAA  1003               	clrc
  4515  0CAB  0DF3               	rlf	??_lcd_send_data,f
  4516  0CAC  3EFF               	addlw	-1
  4517  0CAD  1D03               	skipz
  4518  0CAE  2CAA               	goto	u1845
  4519  0CAF  1003               	clrc
  4520  0CB0  0D73               	rlf	??_lcd_send_data,w
  4521  0CB1  39F0               	andlw	240
  4522  0CB2  00F4               	movwf	??_lcd_send_data+1
  4523  0CB3  0874               	movf	??_lcd_send_data+1,w
  4524  0CB4  00F6               	movwf	lcd_send_data@data_l
  4525                           
  4526                           ;newmain.c: 65:  data_u = data&0xf0;
  4527  0CB5  0875               	movf	lcd_send_data@data,w
  4528  0CB6  39F0               	andlw	240
  4529  0CB7  00F3               	movwf	??_lcd_send_data
  4530  0CB8  0873               	movf	??_lcd_send_data,w
  4531  0CB9  00F7               	movwf	lcd_send_data@data_u
  4532                           
  4533                           ;newmain.c: 67:  I2C_start();
  4534  0CBA  120A  158A  22F6  120A  158A  	fcall	_I2C_start
  4535                           
  4536                           ;newmain.c: 68:  I2C_write (0x4E);
  4537  0CBF  304E               	movlw	78
  4538  0CC0  120A  158A  2306  120A  158A  	fcall	_I2C_write
  4539                           
  4540                           ;newmain.c: 69:  I2C_write (data_u|0x0D);
  4541  0CC5  0877               	movf	lcd_send_data@data_u,w
  4542  0CC6  380D               	iorlw	13
  4543  0CC7  120A  158A  2306  120A  158A  	fcall	_I2C_write
  4544                           
  4545                           ;newmain.c: 70:  I2C_write (data_u|0x09);
  4546  0CCC  0877               	movf	lcd_send_data@data_u,w
  4547  0CCD  3809               	iorlw	9
  4548  0CCE  120A  158A  2306  120A  158A  	fcall	_I2C_write
  4549                           
  4550                           ;newmain.c: 72:  I2C_write (data_l|0x0D);
  4551  0CD3  0876               	movf	lcd_send_data@data_l,w
  4552  0CD4  380D               	iorlw	13
  4553  0CD5  120A  158A  2306  120A  158A  	fcall	_I2C_write
  4554                           
  4555                           ;newmain.c: 73:  I2C_write (data_l|0x09);
  4556  0CDA  0876               	movf	lcd_send_data@data_l,w
  4557  0CDB  3809               	iorlw	9
  4558  0CDC  120A  158A  2306  120A  158A  	fcall	_I2C_write
  4559                           
  4560                           ;newmain.c: 75:  I2C_stop();
  4561  0CE1  120A  118A  27F9   	fcall	_I2C_stop
  4562  0CE4  0008               	return
  4563  0CE5                     __end_of_lcd_send_data:	
  4564                           
  4565                           	psect	text15
  4566  0C67                     __ptext15:	
  4567 ;; *************** function _lcd_send_cmd *****************
  4568 ;; Defined at:
  4569 ;;		line 80 in file "newmain.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  data            1    wreg     unsigned char 
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;  data            1    5[COMMON] unsigned char 
  4574 ;;  data_u          1    7[COMMON] unsigned char 
  4575 ;;  data_l          1    6[COMMON] unsigned char 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      void 
  4578 ;; Registers used:
  4579 ;;		wreg, status,2, status,0, pclath, cstack
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4585 ;;      Params:         0       0       0       0       0
  4586 ;;      Locals:         3       0       0       0       0
  4587 ;;      Temps:          2       0       0       0       0
  4588 ;;      Totals:         5       0       0       0       0
  4589 ;;Total ram usage:        5 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:    3
  4592 ;; This function calls:
  4593 ;;		_I2C_start
  4594 ;;		_I2C_stop
  4595 ;;		_I2C_write
  4596 ;; This function is called by:
  4597 ;;		_lcd_clear
  4598 ;;		_lcd_init
  4599 ;;		_main
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           
  4604                           ;psect for function _lcd_send_cmd
  4605  0C67                     _lcd_send_cmd:	
  4606                           
  4607                           ;incstack = 0
  4608                           ; Regs used in _lcd_send_cmd: [wreg+status,2+status,0+pclath+cstack]
  4609                           ;lcd_send_cmd@data stored from wreg
  4610  0C67  00F5               	movwf	lcd_send_cmd@data
  4611                           
  4612                           ;newmain.c: 80: void lcd_send_cmd (unsigned char data);newmain.c: 81: {;newmain.c: 82:  
      +                          unsigned char data_l, data_u;;newmain.c: 83:  data_l = (data<<4)&0xf0;
  4613  0C68  0875               	movf	lcd_send_cmd@data,w
  4614  0C69  00F3               	movwf	??_lcd_send_cmd
  4615  0C6A  3003               	movlw	3
  4616  0C6B                     u1855:	
  4617  0C6B  1003               	clrc
  4618  0C6C  0DF3               	rlf	??_lcd_send_cmd,f
  4619  0C6D  3EFF               	addlw	-1
  4620  0C6E  1D03               	skipz
  4621  0C6F  2C6B               	goto	u1855
  4622  0C70  1003               	clrc
  4623  0C71  0D73               	rlf	??_lcd_send_cmd,w
  4624  0C72  39F0               	andlw	240
  4625  0C73  00F4               	movwf	??_lcd_send_cmd+1
  4626  0C74  0874               	movf	??_lcd_send_cmd+1,w
  4627  0C75  00F6               	movwf	lcd_send_cmd@data_l
  4628                           
  4629                           ;newmain.c: 84:  data_u = data&0xf0;
  4630  0C76  0875               	movf	lcd_send_cmd@data,w
  4631  0C77  39F0               	andlw	240
  4632  0C78  00F3               	movwf	??_lcd_send_cmd
  4633  0C79  0873               	movf	??_lcd_send_cmd,w
  4634  0C7A  00F7               	movwf	lcd_send_cmd@data_u
  4635                           
  4636                           ;newmain.c: 86:  I2C_start();
  4637  0C7B  120A  158A  22F6  120A  158A  	fcall	_I2C_start
  4638                           
  4639                           ;newmain.c: 87:  I2C_write (0x4E);
  4640  0C80  304E               	movlw	78
  4641  0C81  120A  158A  2306  120A  158A  	fcall	_I2C_write
  4642                           
  4643                           ;newmain.c: 88:  I2C_write (data_u|0x0C);
  4644  0C86  0877               	movf	lcd_send_cmd@data_u,w
  4645  0C87  380C               	iorlw	12
  4646  0C88  120A  158A  2306  120A  158A  	fcall	_I2C_write
  4647                           
  4648                           ;newmain.c: 89:  I2C_write (data_u|0x08);
  4649  0C8D  0877               	movf	lcd_send_cmd@data_u,w
  4650  0C8E  3808               	iorlw	8
  4651  0C8F  120A  158A  2306  120A  158A  	fcall	_I2C_write
  4652                           
  4653                           ;newmain.c: 91:  I2C_write (data_l|0x0C);
  4654  0C94  0876               	movf	lcd_send_cmd@data_l,w
  4655  0C95  380C               	iorlw	12
  4656  0C96  120A  158A  2306  120A  158A  	fcall	_I2C_write
  4657                           
  4658                           ;newmain.c: 92:  I2C_write (data_l|0x08);
  4659  0C9B  0876               	movf	lcd_send_cmd@data_l,w
  4660  0C9C  3808               	iorlw	8
  4661  0C9D  120A  158A  2306  120A  158A  	fcall	_I2C_write
  4662                           
  4663                           ;newmain.c: 94:  I2C_stop();
  4664  0CA2  120A  118A  27F9   	fcall	_I2C_stop
  4665  0CA5  0008               	return
  4666  0CA6                     __end_of_lcd_send_cmd:	
  4667                           
  4668                           	psect	text16
  4669  0B06                     __ptext16:	
  4670 ;; *************** function _I2C_write *****************
  4671 ;; Defined at:
  4672 ;;		line 54 in file "newmain.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;  data            1    wreg     unsigned char 
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;  data            1    2[COMMON] unsigned char 
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		wreg, status,2, status,0, pclath, cstack
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4686 ;;      Params:         0       0       0       0       0
  4687 ;;      Locals:         1       0       0       0       0
  4688 ;;      Temps:          0       0       0       0       0
  4689 ;;      Totals:         1       0       0       0       0
  4690 ;;Total ram usage:        1 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:    2
  4693 ;; This function calls:
  4694 ;;		_I2C_wait
  4695 ;; This function is called by:
  4696 ;;		_lcd_send_data
  4697 ;;		_lcd_send_cmd
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           
  4702                           ;psect for function _I2C_write
  4703  0B06                     _I2C_write:	
  4704                           
  4705                           ;incstack = 0
  4706                           ; Regs used in _I2C_write: [wreg+status,2+status,0+pclath+cstack]
  4707                           ;I2C_write@data stored from wreg
  4708  0B06  00F2               	movwf	I2C_write@data
  4709                           
  4710                           ;newmain.c: 54: void I2C_write (uint8_t data);newmain.c: 55: {;newmain.c: 56:     I2C_wa
      +                          it ();
  4711  0B07  120A  158A  22FD   	fcall	_I2C_wait
  4712                           
  4713                           ;newmain.c: 57:     SSPBUF = data;
  4714  0B0A  0872               	movf	I2C_write@data,w
  4715  0B0B  1283               	bcf	3,5	;RP0=0, select bank0
  4716  0B0C  1303               	bcf	3,6	;RP1=0, select bank0
  4717  0B0D  0093               	movwf	19	;volatile
  4718  0B0E  0008               	return
  4719  0B0F                     __end_of_I2C_write:	
  4720                           
  4721                           	psect	text17
  4722  07F9                     __ptext17:	
  4723 ;; *************** function _I2C_stop *****************
  4724 ;; Defined at:
  4725 ;;		line 47 in file "newmain.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;		None
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0, pclath, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4739 ;;      Params:         0       0       0       0       0
  4740 ;;      Locals:         0       0       0       0       0
  4741 ;;      Temps:          0       0       0       0       0
  4742 ;;      Totals:         0       0       0       0       0
  4743 ;;Total ram usage:        0 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    2
  4746 ;; This function calls:
  4747 ;;		_I2C_wait
  4748 ;; This function is called by:
  4749 ;;		_lcd_send_data
  4750 ;;		_lcd_send_cmd
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           
  4755                           ;psect for function _I2C_stop
  4756  07F9                     _I2C_stop:	
  4757                           
  4758                           ;newmain.c: 49:     I2C_wait ();
  4759                           
  4760                           ;incstack = 0
  4761                           ; Regs used in _I2C_stop: [wreg+status,2+status,0+pclath+cstack]
  4762  07F9  120A  158A  22FD   	fcall	_I2C_wait
  4763                           
  4764                           ;newmain.c: 50:     SSPCON2 |= 0x04;
  4765  07FC  1683               	bsf	3,5	;RP0=1, select bank1
  4766  07FD  1303               	bcf	3,6	;RP1=0, select bank1
  4767  07FE  1511               	bsf	17,2	;volatile
  4768  07FF  0008               	return
  4769  0800                     __end_of_I2C_stop:	
  4770                           
  4771                           	psect	text18
  4772  0AF6                     __ptext18:	
  4773 ;; *************** function _I2C_start *****************
  4774 ;; Defined at:
  4775 ;;		line 33 in file "newmain.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;		None
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;		None
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  1    wreg      void 
  4782 ;; Registers used:
  4783 ;;		wreg, status,2, status,0, pclath, cstack
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4789 ;;      Params:         0       0       0       0       0
  4790 ;;      Locals:         0       0       0       0       0
  4791 ;;      Temps:          0       0       0       0       0
  4792 ;;      Totals:         0       0       0       0       0
  4793 ;;Total ram usage:        0 bytes
  4794 ;; Hardware stack levels used:    1
  4795 ;; Hardware stack levels required when called:    2
  4796 ;; This function calls:
  4797 ;;		_I2C_wait
  4798 ;; This function is called by:
  4799 ;;		_lcd_send_data
  4800 ;;		_lcd_send_cmd
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           
  4805                           ;psect for function _I2C_start
  4806  0AF6                     _I2C_start:	
  4807                           
  4808                           ;newmain.c: 35:     I2C_wait ();
  4809                           
  4810                           ;incstack = 0
  4811                           ; Regs used in _I2C_start: [wreg+status,2+status,0+pclath+cstack]
  4812  0AF6  120A  158A  22FD   	fcall	_I2C_wait
  4813                           
  4814                           ;newmain.c: 36:     SSPCON2 |= 0x01;
  4815  0AF9  1683               	bsf	3,5	;RP0=1, select bank1
  4816  0AFA  1303               	bcf	3,6	;RP1=0, select bank1
  4817  0AFB  1411               	bsf	17,0	;volatile
  4818  0AFC  0008               	return
  4819  0AFD                     __end_of_I2C_start:	
  4820                           
  4821                           	psect	text19
  4822  0AFD                     __ptext19:	
  4823 ;; *************** function _I2C_wait *****************
  4824 ;; Defined at:
  4825 ;;		line 28 in file "newmain.c"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;		None
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;		None
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  1    wreg      void 
  4832 ;; Registers used:
  4833 ;;		wreg, status,2
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4839 ;;      Params:         0       0       0       0       0
  4840 ;;      Locals:         0       0       0       0       0
  4841 ;;      Temps:          0       0       0       0       0
  4842 ;;      Totals:         0       0       0       0       0
  4843 ;;Total ram usage:        0 bytes
  4844 ;; Hardware stack levels used:    1
  4845 ;; Hardware stack levels required when called:    1
  4846 ;; This function calls:
  4847 ;;		Nothing
  4848 ;; This function is called by:
  4849 ;;		_I2C_start
  4850 ;;		_I2C_stop
  4851 ;;		_I2C_write
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           
  4856                           ;psect for function _I2C_wait
  4857  0AFD                     _I2C_wait:	
  4858  0AFD                     l68:	
  4859                           ;newmain.c: 30:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4860                           
  4861                           ;incstack = 0
  4862                           ; Regs used in _I2C_wait: [wreg+status,2]
  4863                           
  4864  0AFD  1683               	bsf	3,5	;RP0=1, select bank1
  4865  0AFE  1303               	bcf	3,6	;RP1=0, select bank1
  4866  0AFF  1914               	btfsc	20,2	;volatile
  4867  0B00  2AFD               	goto	l68
  4868  0B01  0811               	movf	17,w	;volatile
  4869  0B02  391F               	andlw	31
  4870  0B03  1903               	btfsc	3,2
  4871  0B04  0008               	return
  4872  0B05  2AFD               	goto	l68
  4873  0B06                     __end_of_I2C_wait:	
  4874                           
  4875                           	psect	text20
  4876  0B1A                     __ptext20:	
  4877 ;; *************** function _adc_init *****************
  4878 ;; Defined at:
  4879 ;;		line 124 in file "newmain.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;		None
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;		None
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  1    wreg      void 
  4886 ;; Registers used:
  4887 ;;		wreg, status,2
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4893 ;;      Params:         0       0       0       0       0
  4894 ;;      Locals:         0       0       0       0       0
  4895 ;;      Temps:          0       0       0       0       0
  4896 ;;      Totals:         0       0       0       0       0
  4897 ;;Total ram usage:        0 bytes
  4898 ;; Hardware stack levels used:    1
  4899 ;; Hardware stack levels required when called:    1
  4900 ;; This function calls:
  4901 ;;		Nothing
  4902 ;; This function is called by:
  4903 ;;		_main
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           
  4908                           ;psect for function _adc_init
  4909  0B1A                     _adc_init:	
  4910                           
  4911                           ;newmain.c: 125:     ADCON1 = 0x80;
  4912                           
  4913                           ;incstack = 0
  4914                           ; Regs used in _adc_init: [wreg+status,2]
  4915  0B1A  3080               	movlw	128
  4916  0B1B  1683               	bsf	3,5	;RP0=1, select bank1
  4917  0B1C  1303               	bcf	3,6	;RP1=0, select bank1
  4918  0B1D  009F               	movwf	31	;volatile
  4919                           
  4920                           ;newmain.c: 126:     PORTA = 0x00;
  4921  0B1E  1283               	bcf	3,5	;RP0=0, select bank0
  4922  0B1F  1303               	bcf	3,6	;RP1=0, select bank0
  4923  0B20  0185               	clrf	5	;volatile
  4924                           
  4925                           ;newmain.c: 127:     TRISA0 = 1;
  4926  0B21  1683               	bsf	3,5	;RP0=1, select bank1
  4927  0B22  1303               	bcf	3,6	;RP1=0, select bank1
  4928  0B23  1405               	bsf	5,0	;volatile
  4929                           
  4930                           ;newmain.c: 128:     ANSELbits.ANS0 = 1;
  4931  0B24  1683               	bsf	3,5	;RP0=1, select bank3
  4932  0B25  1703               	bsf	3,6	;RP1=1, select bank3
  4933  0B26  1408               	bsf	8,0	;volatile
  4934                           
  4935                           ;newmain.c: 129:     ADCON0 = 0xc1;
  4936  0B27  30C1               	movlw	193
  4937  0B28  1283               	bcf	3,5	;RP0=0, select bank0
  4938  0B29  1303               	bcf	3,6	;RP1=0, select bank0
  4939  0B2A  009F               	movwf	31	;volatile
  4940  0B2B  0008               	return
  4941  0B2C                     __end_of_adc_init:	
  4942                           
  4943                           	psect	text21
  4944  0BC8                     __ptext21:	
  4945 ;; *************** function _adc_do *****************
  4946 ;; Defined at:
  4947 ;;		line 132 in file "newmain.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;		None
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  w               1    4[COMMON] unsigned char 
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      unsigned char 
  4954 ;; Registers used:
  4955 ;;		wreg, status,2, status,0
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4961 ;;      Params:         0       0       0       0       0
  4962 ;;      Locals:         1       0       0       0       0
  4963 ;;      Temps:          2       0       0       0       0
  4964 ;;      Totals:         3       0       0       0       0
  4965 ;;Total ram usage:        3 bytes
  4966 ;; Hardware stack levels used:    1
  4967 ;; Hardware stack levels required when called:    1
  4968 ;; This function calls:
  4969 ;;		Nothing
  4970 ;; This function is called by:
  4971 ;;		_main
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           
  4976                           ;psect for function _adc_do
  4977  0BC8                     _adc_do:	
  4978                           
  4979                           ;newmain.c: 133:     unsigned char w;;newmain.c: 134:     _delay((unsigned long)((1)*(10
      +                          000000/4000.0)));
  4980                           
  4981                           ;incstack = 0
  4982                           ; Regs used in _adc_do: [wreg+status,2+status,0]
  4983  0BC8  3004               	movlw	4
  4984  0BC9  00F3               	movwf	??_adc_do+1
  4985  0BCA  303D               	movlw	61
  4986  0BCB  00F2               	movwf	??_adc_do
  4987  0BCC                     u3587:	
  4988  0BCC  0BF2               	decfsz	??_adc_do,f
  4989  0BCD  2BCC               	goto	u3587
  4990  0BCE  0BF3               	decfsz	??_adc_do+1,f
  4991  0BCF  2BCC               	goto	u3587
  4992  0BD0  2BD1               	nop2
  4993                           
  4994                           ;newmain.c: 138:     ADCON0bits.GO_nDONE = 1;
  4995  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  4996  0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  4997  0BD3  149F               	bsf	31,1	;volatile
  4998  0BD4                     l108:	
  4999                           ;newmain.c: 139:     while (ADCON0bits.GO_nDONE);
  5000                           
  5001  0BD4  189F               	btfsc	31,1	;volatile
  5002  0BD5  2BD4               	goto	l108
  5003                           
  5004                           ;newmain.c: 140:     w = ADRESL >> 2;
  5005  0BD6  1683               	bsf	3,5	;RP0=1, select bank1
  5006  0BD7  1303               	bcf	3,6	;RP1=0, select bank1
  5007  0BD8  081E               	movf	30,w	;volatile
  5008  0BD9  00F2               	movwf	??_adc_do
  5009  0BDA  3002               	movlw	2
  5010  0BDB                     u3465:	
  5011  0BDB  1003               	clrc
  5012  0BDC  0CF2               	rrf	??_adc_do,f
  5013  0BDD  3EFF               	addlw	-1
  5014  0BDE  1D03               	skipz
  5015  0BDF  2BDB               	goto	u3465
  5016  0BE0  0872               	movf	??_adc_do,w
  5017  0BE1  00F3               	movwf	??_adc_do+1
  5018  0BE2  0873               	movf	??_adc_do+1,w
  5019  0BE3  00F4               	movwf	adc_do@w
  5020                           
  5021                           ;newmain.c: 141:     w = (((ADRESH & 0b00000011) << 6 ) + w ) ;
  5022  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  5023  0BE5  1303               	bcf	3,6	;RP1=0, select bank0
  5024  0BE6  081E               	movf	30,w	;volatile
  5025  0BE7  3903               	andlw	3
  5026  0BE8  00F2               	movwf	??_adc_do
  5027  0BE9  3006               	movlw	6
  5028  0BEA                     u3475:	
  5029  0BEA  1003               	clrc
  5030  0BEB  0DF2               	rlf	??_adc_do,f
  5031  0BEC  3EFF               	addlw	-1
  5032  0BED  1D03               	skipz
  5033  0BEE  2BEA               	goto	u3475
  5034  0BEF  0874               	movf	adc_do@w,w
  5035  0BF0  0772               	addwf	??_adc_do,w
  5036  0BF1  00F3               	movwf	??_adc_do+1
  5037  0BF2  0873               	movf	??_adc_do+1,w
  5038  0BF3  00F4               	movwf	adc_do@w
  5039                           
  5040                           ;newmain.c: 142:     return w;
  5041  0BF4  0874               	movf	adc_do@w,w
  5042  0BF5  0008               	return
  5043  0BF6                     __end_of_adc_do:	
  5044                           
  5045                           	psect	text22
  5046  0BF6                     __ptext22:	
  5047 ;; *************** function _I2C_init *****************
  5048 ;; Defined at:
  5049 ;;		line 19 in file "newmain.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  clock           4    5[BANK0 ] unsigned long 
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;		None
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  1    wreg      void 
  5056 ;; Registers used:
  5057 ;;		wreg, status,2, status,0, pclath, cstack
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5063 ;;      Params:         0       4       0       0       0
  5064 ;;      Locals:         0       0       0       0       0
  5065 ;;      Temps:          0       4       0       0       0
  5066 ;;      Totals:         0       8       0       0       0
  5067 ;;Total ram usage:        8 bytes
  5068 ;; Hardware stack levels used:    1
  5069 ;; Hardware stack levels required when called:    2
  5070 ;; This function calls:
  5071 ;;		___lldiv
  5072 ;; This function is called by:
  5073 ;;		_main
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           
  5078                           ;psect for function _I2C_init
  5079  0BF6                     _I2C_init:	
  5080                           
  5081                           ;newmain.c: 19: void I2C_init (uint32_t clock);newmain.c: 20: {;newmain.c: 21:     SSPAD
      +                          D = (10000000/(4*clock))-1;
  5082                           
  5083                           ;incstack = 0
  5084                           ; Regs used in _I2C_init: [wreg+status,2+status,0+pclath+cstack]
  5085  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  5086  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  5087  0BF8  0825               	movf	I2C_init@clock,w
  5088  0BF9  00A9               	movwf	??_I2C_init
  5089  0BFA  0826               	movf	I2C_init@clock+1,w
  5090  0BFB  00AA               	movwf	??_I2C_init+1
  5091  0BFC  0827               	movf	I2C_init@clock+2,w
  5092  0BFD  00AB               	movwf	??_I2C_init+2
  5093  0BFE  0828               	movf	I2C_init@clock+3,w
  5094  0BFF  00AC               	movwf	??_I2C_init+3
  5095  0C00  3002               	movlw	2
  5096  0C01                     u3415:	
  5097  0C01  1003               	clrc
  5098  0C02  0DA9               	rlf	??_I2C_init,f
  5099  0C03  0DAA               	rlf	??_I2C_init+1,f
  5100  0C04  0DAB               	rlf	??_I2C_init+2,f
  5101  0C05  0DAC               	rlf	??_I2C_init+3,f
  5102  0C06  3EFF               	addlw	-1
  5103  0C07  1D03               	skipz
  5104  0C08  2C01               	goto	u3415
  5105  0C09  082C               	movf	??_I2C_init+3,w
  5106  0C0A  00F5               	movwf	___lldiv@divisor+3
  5107  0C0B  082B               	movf	??_I2C_init+2,w
  5108  0C0C  00F4               	movwf	___lldiv@divisor+2
  5109  0C0D  082A               	movf	??_I2C_init+1,w
  5110  0C0E  00F3               	movwf	___lldiv@divisor+1
  5111  0C0F  0829               	movf	??_I2C_init,w
  5112  0C10  00F2               	movwf	___lldiv@divisor
  5113  0C11  3000               	movlw	0
  5114  0C12  00F9               	movwf	___lldiv@dividend+3
  5115  0C13  3098               	movlw	152
  5116  0C14  00F8               	movwf	___lldiv@dividend+2
  5117  0C15  3096               	movlw	150
  5118  0C16  00F7               	movwf	___lldiv@dividend+1
  5119  0C17  3080               	movlw	128
  5120  0C18  00F6               	movwf	___lldiv@dividend
  5121  0C19  120A  158A  24E5   	fcall	___lldiv
  5122  0C1C  0872               	movf	?___lldiv,w
  5123  0C1D  3EFF               	addlw	255
  5124  0C1E  1683               	bsf	3,5	;RP0=1, select bank1
  5125  0C1F  1303               	bcf	3,6	;RP1=0, select bank1
  5126  0C20  0093               	movwf	19	;volatile
  5127                           
  5128                           ;newmain.c: 22:     SSPCON = 0b00101000;
  5129  0C21  3028               	movlw	40
  5130  0C22  1283               	bcf	3,5	;RP0=0, select bank0
  5131  0C23  1303               	bcf	3,6	;RP1=0, select bank0
  5132  0C24  0094               	movwf	20	;volatile
  5133                           
  5134                           ;newmain.c: 23:     SSPSTAT = 0;
  5135  0C25  1683               	bsf	3,5	;RP0=1, select bank1
  5136  0C26  1303               	bcf	3,6	;RP1=0, select bank1
  5137  0C27  0194               	clrf	20	;volatile
  5138                           
  5139                           ;newmain.c: 24:     TRISC3 = 1;
  5140  0C28  1587               	bsf	7,3	;volatile
  5141                           
  5142                           ;newmain.c: 25:     TRISC4 = 1;
  5143  0C29  1607               	bsf	7,4	;volatile
  5144  0C2A  0008               	return
  5145  0C2B                     __end_of_I2C_init:	
  5146                           
  5147                           	psect	text23
  5148  0CE5                     __ptext23:	
  5149 ;; *************** function ___lldiv *****************
  5150 ;; Defined at:
  5151 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  divisor         4    2[COMMON] unsigned long 
  5154 ;;  dividend        4    6[COMMON] unsigned long 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;  quotient        4    0[BANK0 ] unsigned long 
  5157 ;;  counter         1    4[BANK0 ] unsigned char 
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  4    2[COMMON] unsigned long 
  5160 ;; Registers used:
  5161 ;;		wreg, status,2, status,0
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5167 ;;      Params:         8       0       0       0       0
  5168 ;;      Locals:         0       5       0       0       0
  5169 ;;      Temps:          1       0       0       0       0
  5170 ;;      Totals:         9       5       0       0       0
  5171 ;;Total ram usage:       14 bytes
  5172 ;; Hardware stack levels used:    1
  5173 ;; Hardware stack levels required when called:    1
  5174 ;; This function calls:
  5175 ;;		Nothing
  5176 ;; This function is called by:
  5177 ;;		_I2C_init
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181                           
  5182                           ;psect for function ___lldiv
  5183  0CE5                     ___lldiv:	
  5184                           
  5185                           ;incstack = 0
  5186                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5187  0CE5  3000               	movlw	0
  5188  0CE6  1283               	bcf	3,5	;RP0=0, select bank0
  5189  0CE7  1303               	bcf	3,6	;RP1=0, select bank0
  5190  0CE8  00A3               	movwf	___lldiv@quotient+3
  5191  0CE9  3000               	movlw	0
  5192  0CEA  00A2               	movwf	___lldiv@quotient+2
  5193  0CEB  3000               	movlw	0
  5194  0CEC  00A1               	movwf	___lldiv@quotient+1
  5195  0CED  3000               	movlw	0
  5196  0CEE  00A0               	movwf	___lldiv@quotient
  5197  0CEF  0875               	movf	___lldiv@divisor+3,w
  5198  0CF0  0474               	iorwf	___lldiv@divisor+2,w
  5199  0CF1  0473               	iorwf	___lldiv@divisor+1,w
  5200  0CF2  0472               	iorwf	___lldiv@divisor,w
  5201  0CF3  1903               	skipnz
  5202  0CF4  2D3C               	goto	l1737
  5203  0CF5  01A4               	clrf	___lldiv@counter
  5204  0CF6  0AA4               	incf	___lldiv@counter,f
  5205  0CF7                     l1723:	
  5206  0CF7  1BF5               	btfsc	___lldiv@divisor+3,7
  5207  0CF8  2D07               	goto	l1725
  5208  0CF9  3001               	movlw	1
  5209  0CFA  00FA               	movwf	??___lldiv
  5210  0CFB                     u1915:	
  5211  0CFB  1003               	clrc
  5212  0CFC  0DF2               	rlf	___lldiv@divisor,f
  5213  0CFD  0DF3               	rlf	___lldiv@divisor+1,f
  5214  0CFE  0DF4               	rlf	___lldiv@divisor+2,f
  5215  0CFF  0DF5               	rlf	___lldiv@divisor+3,f
  5216  0D00  0BFA               	decfsz	??___lldiv,f
  5217  0D01  2CFB               	goto	u1915
  5218  0D02  3001               	movlw	1
  5219  0D03  00FA               	movwf	??___lldiv
  5220  0D04  087A               	movf	??___lldiv,w
  5221  0D05  07A4               	addwf	___lldiv@counter,f
  5222  0D06  2CF7               	goto	l1723
  5223  0D07                     l1725:	
  5224  0D07  3001               	movlw	1
  5225  0D08  00FA               	movwf	??___lldiv
  5226  0D09                     u1935:	
  5227  0D09  1003               	clrc
  5228  0D0A  0DA0               	rlf	___lldiv@quotient,f
  5229  0D0B  0DA1               	rlf	___lldiv@quotient+1,f
  5230  0D0C  0DA2               	rlf	___lldiv@quotient+2,f
  5231  0D0D  0DA3               	rlf	___lldiv@quotient+3,f
  5232  0D0E  0BFA               	decfsz	??___lldiv,f
  5233  0D0F  2D09               	goto	u1935
  5234  0D10  0875               	movf	___lldiv@divisor+3,w
  5235  0D11  0279               	subwf	___lldiv@dividend+3,w
  5236  0D12  1D03               	skipz
  5237  0D13  2D1E               	goto	u1945
  5238  0D14  0874               	movf	___lldiv@divisor+2,w
  5239  0D15  0278               	subwf	___lldiv@dividend+2,w
  5240  0D16  1D03               	skipz
  5241  0D17  2D1E               	goto	u1945
  5242  0D18  0873               	movf	___lldiv@divisor+1,w
  5243  0D19  0277               	subwf	___lldiv@dividend+1,w
  5244  0D1A  1D03               	skipz
  5245  0D1B  2D1E               	goto	u1945
  5246  0D1C  0872               	movf	___lldiv@divisor,w
  5247  0D1D  0276               	subwf	___lldiv@dividend,w
  5248  0D1E                     u1945:	
  5249  0D1E  1C03               	skipc
  5250  0D1F  2D2F               	goto	l1733
  5251  0D20  0872               	movf	___lldiv@divisor,w
  5252  0D21  02F6               	subwf	___lldiv@dividend,f
  5253  0D22  0873               	movf	___lldiv@divisor+1,w
  5254  0D23  1C03               	skipc
  5255  0D24  0F73               	incfsz	___lldiv@divisor+1,w
  5256  0D25  02F7               	subwf	___lldiv@dividend+1,f
  5257  0D26  0874               	movf	___lldiv@divisor+2,w
  5258  0D27  1C03               	skipc
  5259  0D28  0F74               	incfsz	___lldiv@divisor+2,w
  5260  0D29  02F8               	subwf	___lldiv@dividend+2,f
  5261  0D2A  0875               	movf	___lldiv@divisor+3,w
  5262  0D2B  1C03               	skipc
  5263  0D2C  0F75               	incfsz	___lldiv@divisor+3,w
  5264  0D2D  02F9               	subwf	___lldiv@dividend+3,f
  5265  0D2E  1420               	bsf	___lldiv@quotient,0
  5266  0D2F                     l1733:	
  5267  0D2F  3001               	movlw	1
  5268  0D30                     u1955:	
  5269  0D30  1003               	clrc
  5270  0D31  0CF5               	rrf	___lldiv@divisor+3,f
  5271  0D32  0CF4               	rrf	___lldiv@divisor+2,f
  5272  0D33  0CF3               	rrf	___lldiv@divisor+1,f
  5273  0D34  0CF2               	rrf	___lldiv@divisor,f
  5274  0D35  3EFF               	addlw	-1
  5275  0D36  1D03               	skipz
  5276  0D37  2D30               	goto	u1955
  5277  0D38  3001               	movlw	1
  5278  0D39  02A4               	subwf	___lldiv@counter,f
  5279  0D3A  1D03               	btfss	3,2
  5280  0D3B  2D07               	goto	l1725
  5281  0D3C                     l1737:	
  5282  0D3C  0823               	movf	___lldiv@quotient+3,w
  5283  0D3D  00F5               	movwf	?___lldiv+3
  5284  0D3E  0822               	movf	___lldiv@quotient+2,w
  5285  0D3F  00F4               	movwf	?___lldiv+2
  5286  0D40  0821               	movf	___lldiv@quotient+1,w
  5287  0D41  00F3               	movwf	?___lldiv+1
  5288  0D42  0820               	movf	___lldiv@quotient,w
  5289  0D43  00F2               	movwf	?___lldiv
  5290  0D44  0008               	return
  5291  0D45                     __end_of___lldiv:	
  5292                           
  5293                           	psect	text24
  5294  0B0F                     __ptext24:	
  5295 ;; *************** function _my_isr *****************
  5296 ;; Defined at:
  5297 ;;		line 157 in file "newmain.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;		None
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;		None
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      void 
  5304 ;; Registers used:
  5305 ;;		None
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5311 ;;      Params:         0       0       0       0       0
  5312 ;;      Locals:         0       0       0       0       0
  5313 ;;      Temps:          2       0       0       0       0
  5314 ;;      Totals:         2       0       0       0       0
  5315 ;;Total ram usage:        2 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		Interrupt level 1
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           
  5325                           ;psect for function _my_isr
  5326  0B0F                     _my_isr:	
  5327                           
  5328                           ;newmain.c: 158:     RPMCON.bPDT = 1 ;
  5329  0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  5330  0B10  1303               	bcf	3,6	;RP1=0, select bank0
  5331  0B11  1469               	bsf	_RPMCON,0
  5332                           
  5333                           ;newmain.c: 160:     INTCONbits.INTF = 0;
  5334  0B12  108B               	bcf	11,1	;volatile
  5335  0B13  0871               	movf	??_my_isr+1,w
  5336  0B14  008A               	movwf	10
  5337  0B15  0E70               	swapf	??_my_isr^(0+4294967168),w
  5338  0B16  0083               	movwf	3
  5339  0B17  0EFE               	swapf	126,f
  5340  0B18  0E7E               	swapf	126,w
  5341  0B19  0009               	retfie
  5342  0B1A                     __end_of_my_isr:	
  5343  007E                     btemp	set	126	;btemp
  5344  007E                     wtemp0	set	126
  5345                           
  5346                           	psect	intentry
  5347  0004                     __pintentry:	
  5348                           ;incstack = 0
  5349                           ; Regs used in _my_isr: []
  5350                           
  5351  0004                     interrupt_function:	
  5352  007E                     saved_w	set	btemp
  5353  0004  00FE               	movwf	btemp
  5354  0005  0E03               	swapf	3,w
  5355  0006  00F0               	movwf	??_my_isr
  5356  0007  080A               	movf	10,w
  5357  0008  00F1               	movwf	??_my_isr+1
  5358  0009  120A  158A  2B0F   	ljmp	_my_isr


Data Sizes:
    Strings     66
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     73      78
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 5
		 -> RPMCON(BANK0[5]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 5
		 -> RPMCON(BANK0[5]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 5
		 -> RPMCON(BANK0[5]), 

    lcd_send_string@str	PTR unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[9]), STR_5(CODE[6]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[13]), RPMCON(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_lcd_clear
    ___flmul->__Umul8_16
    _lcd_send_string->_lcd_send_data
    _lcd_init->_lcd_send_cmd
    _lcd_clear->_lcd_send_cmd
    _lcd_clear->_lcd_send_data
    _lcd_send_data->_I2C_write
    _lcd_send_cmd->_I2C_write
    _I2C_init->___lldiv

Critical Paths under _my_isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_medeRPM
    _medeRPM->___fladd
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___fladd->___flmul
    _I2C_init->___lldiv

Critical Paths under _my_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10734
                                             70 BANK0      3     3      0
                           _I2C_init
                             _adc_do
                           _adc_init
                          _lcd_clear
                           _lcd_init
                       _lcd_send_cmd
                    _lcd_send_string
                            _medeRPM
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               4     3      1     184
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _medeRPM                                             18    18      0    8719
                                             52 BANK0     18    18      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                            ___lwdiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     381
                                             32 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2873
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                              2 COMMON     8     0      8
                                              0 BANK0     18    18      0
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2262
                                             32 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_send_string                                      2     0      2     657
                                              8 COMMON     2     0      2
                      _lcd_send_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     156
                       _lcd_send_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            4     4      0     404
                                              8 COMMON     4     4      0
                       _lcd_send_cmd
                      _lcd_send_data
 ---------------------------------------------------------------------------------
 (2) _lcd_send_data                                        5     5      0     156
                                              3 COMMON     5     5      0
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (1) _lcd_send_cmd                                         5     5      0     156
                                              3 COMMON     5     5      0
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (3) _I2C_write                                            1     1      0      22
                                              2 COMMON     1     1      0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (3) _I2C_stop                                             0     0      0       0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (3) _I2C_start                                            0     0      0       0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (4) _I2C_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_do                                               3     3      0      46
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             8     4      4     412
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _my_isr                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_init
     ___lldiv
   _adc_do
   _adc_init
   _lcd_clear
     _lcd_send_cmd
       _I2C_start
         _I2C_wait
       _I2C_stop
         _I2C_wait
       _I2C_write
         _I2C_wait
     _lcd_send_data
       _I2C_start
         _I2C_wait
       _I2C_stop
         _I2C_wait
       _I2C_write
         _I2C_wait
   _lcd_init
     _lcd_send_cmd
       _I2C_start
         _I2C_wait
       _I2C_stop
         _I2C_wait
       _I2C_write
         _I2C_wait
   _lcd_send_cmd
     _I2C_start
       _I2C_wait
     _I2C_stop
       _I2C_wait
     _I2C_write
       _I2C_wait
   _lcd_send_string
     _lcd_send_data
       _I2C_start
         _I2C_wait
       _I2C_stop
         _I2C_wait
       _I2C_write
         _I2C_wait
   _medeRPM
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lwdiv
     ___wmul
     ___xxtofl
   _strcpy

 _my_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5A      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jun 27 17:30:57 2020

           ?_lcd_send_cmd 0070              ___fldiv@aexp 0031              ___fldiv@bexp 0030  
                       pc 0002              ___fldiv@sign 0029               __CFG_CP$OFF 0000  
          ?_lcd_send_data 0070                        l68 0AFD                        fsr 0004  
     ___wmul@multiplicand 0074        __size_of_I2C_start 0007       __Umul8_16@word_mpld 0078  
      __size_of_I2C_write 0009                       l108 0BD4                       l133 0567  
                     l138 057C                       l139 0581                       l229 0B6B  
                     l422 0D94                       l600 0FEA                       l522 0381  
                     l602 0FF8                       l526 041A                       l630 0322  
                     l543 04D3                       l528 03F8                       l564 0553  
                     l556 053B                       l670 0E31                       l662 0E11  
                     l656 0DD1                       l681 0BB7                       l578 0EA5  
                     l669 0E27                       _PR2 0092              __CFG_CPD$OFF 0000  
                     fsr0 0004                       indf 0000              __CFG_FOSC$HS 0000  
            ___flmul@aexp 0038              ___flmul@bexp 0039              ___flmul@sign 0033  
            ___flmul@temp 003E              ___flmul@prod 003A              __CFG_LVP$OFF 0000  
            ___fltol@exp1 004A                      l2011 0E74                      l2103 0F83  
                    l2031 0E9A                      l2015 0E77                      l2121 0FD0  
                    l2017 0E7F                      l2107 0F85                      l2051 0ED0  
                    l2035 0E9D                      l2133 0FF4                      l2117 0FB7  
                    l2045 0EC4                      l2071 0F1F                      l2081 0F49  
                    l2153 0037                      l2305 0E25                      l2243 02A8  
                    l2235 0274                      l2171 005C                      l2155 0039  
                    l2307 0E16                      l2341 07C2                      l2077 0F44  
                    l2261 02F2                      l2237 0291                      l2173 005E  
                    l2157 0041                      l2095 0F4F                      l2079 0EFB  
                    l2247 02AA                      l2183 0074                      l2175 0066  
                    l2319 0E4E                      l2431 058D                      l2511 078D  
                    l2097 0F6C                      l2257 02DC                      l1705 0B63  
                    l2417 0573                      l2521 077E                      l1723 0CF7  
                    l2355 07E1                      l2267 030B                      l2291 0DE0  
                    l2435 0595                      l2419 057A                      l1733 0D2F  
                    l1725 0D07                      l1821 034F                      l2285 0DC9  
                    l2517 0776                      l1823 0357                      l1743 0D50  
                    l2295 0DE4                      l1737 0D3C                      l2369 0B82  
                    l1841 0376                      l1817 034C                      l1657 0BAF  
                    l2297 0DF6                      l1915 0449                      l1907 0428  
                    l1851 038B                      l1763 0D80                      l1747 0D59  
                    l2395 0B48                      l1917 044B                      l1925 045B  
                    l1845 0379                      l1773 0DA3                      l1765 0D90  
                    l1951 04F4                      l1943 04E5                      l1935 04C5  
                    l1881 03C7                      l1891 0405                      l1795 0C57  
                    l1787 0C33                      l1965 0506                      l1957 04FB  
                    l1789 0C41                      l1991 054F                      l1959 04FD  
                    l1799 0C62                      l1969 0508                      l1889 0403  
                    l1987 054B                      l1899 0414                      STR_1 084E  
                    STR_2 0832                      STR_3 0821                      STR_4 0810  
                    STR_5 0848                      STR_6 083F                      u2015 0D81  
                    u2105 0C42                      u2115 0C4E                      u2045 0D99  
                    u2125 0C58                      u2240 03E7                      u3025 0124  
                    u2250 03E8                      u2235 03DB                      u3115 0242  
                    u2085 0C36                      u3135 0260                      u3055 0181  
                    u3145 0278                      u3305 0DED                      u2435 04E7  
                    u3235 02C7                      u2381 0486                      u2373 046D  
                    u2365 044F                      u2285 0409                      u3245 02E5  
                    u3165 0283                      u3325 0E09                      u2390 049A  
                    u2382 0487                      u3415 0C01                      u2535 0525  
                    u2391 049B                      u2383 048C                      u3255 02FD  
                    u3095 021D                      u2392 04A0                      u2384 048D  
                    u3425 07D7                      u2393 04A1                      u2385 0492  
                    u2705 0F0D                      u1825 0BB8                      u3345 0E1E  
                    u2386 0493                      u1915 0CFB                      u3435 07F6  
                    u1845 0CAA                      u2725 0F18                      u1935 0D09  
                    u1855 0C6B                      u2735 0F2D                      u1945 0D1E  
                    u3465 0BDB                      u2745 0F37                      u3385 0E39  
                    u2746 0F38                      u1955 0D30                      u3475 0BEA  
                    u2747 0F3D                      u1875 0B6C                      u2748 0F3E  
                    u2749 0F43                      u1885 0B73                      u2775 0F53  
                    u2695 0F04                      u2865 0FA2                      u1985 0D62  
                    u3577 076F                      u3587 0BCC                      u2875 0FC0  
                    u2795 0F5E                      u2885 0FDB                      _TMR0 0001  
            __CFG_WRT$OFF 0000                      _main 070F             medeRPM@bHiTAP 0062  
                    btemp 007E          ?_lcd_send_string 0078          __end_of_I2C_init 0C2B  
        __end_of_I2C_wait 0B06                      start 000C          __end_of_I2C_stop 0800  
         ___fldiv@new_exp 002A             medeRPM@dezena 005A            ??_lcd_send_cmd 0073  
          lcd_clear@i_236 007A             I2C_write@data 0072             ___fltol@sign1 0049  
         __end_of___fladd 055E                     ?_main 0070           __end_of___fldiv 1000  
           __CFG_WDTE$OFF 0000           __end_of___flmul 032F           __end_of___fltol 0DB2  
                   _ANSEL 0188           __end_of___lldiv 0D45                     _T2CON 0012  
         __end_of___lwdiv 0C67                     _PORTA 0005                     _TRISB 0086  
                   _TRISC 0087           __end_of_medeRPM 070F            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003         __end_of_I2C_start 0AFD  
                   wtemp0 007E         __end_of_I2C_write 0B0F            medeRPM@centena 005C  
         __initialization 000F           ??_lcd_send_data 0073              __end_of_main 07BA  
          medeRPM@unidade 0058                    ??_main 0066                    _ADCON0 001F  
                  _ADCON1 009F                    _ADRESH 001E                    _ADRESL 009E  
                  _CCPR1L 0015                    _ANSELH 0189          __end_of_adc_init 0B2C  
                  _RPMCON 0069                    _SSPADD 0093                    _TRISA0 0428  
                  _TRISC3 043B                    _TRISC4 043C                    _SSPCON 0014  
                  _SSPBUF 0013          __end_of___xxtofl 0E57            __CFG_PWRTE$OFF 0000  
        __end_of_lcd_init 0B43                    _adc_do 0BC8                 ??___fladd 0048  
                  ___wmul 0B61                 ??___fldiv 0020                 ??___flmul 002E  
               ??___fltol 0044                 ??___lldiv 007A                 ??___lwdiv 0076  
                  _my_isr 0B0F                 ??_medeRPM 0054                    _strcpy 0B43  
      __size_of__Umul8_16 0023                    saved_w 007E                 ?_I2C_init 0025  
               ?_I2C_wait 0070                 ?_I2C_stop 0070      __end_of_lcd_send_cmd 0CA6  
            ___xxtofl@arg 0022              ___xxtofl@exp 0021              ___xxtofl@val 0072  
 __end_of__initialization 0016                ___fltol@f1 0040        lcd_send_cmd@data_l 0076  
      lcd_send_cmd@data_u 0077            __pcstackCOMMON 0070            _OPTION_REGbits 0081  
              ??_I2C_init 0029                ??_I2C_wait 0072        __size_of_lcd_clear 003F  
              ??_I2C_stop 0072                __pbssBANK0 0069          lcd_send_cmd@data 0075  
       __end_of__Umul8_16 0BC8                __pmaintext 070F                   ?_adc_do 0070  
                 ?___wmul 0072                __pintentry 0004                   _CCP1CON 0017  
                 ?_my_isr 0070                 ?_adc_init 0070                   ?_strcpy 0072  
               ?___xxtofl 0072                   _SSPCON2 0091                 ?_lcd_init 0070  
                 _SSPSTAT 0094                __stringtab 0800                 _I2C_start 0AF6  
               _I2C_write 0B06         __end_of_lcd_clear 07F9                   ___fladd 032F  
                 ___fldiv 0E57           __size_of_adc_do 002E                   ___flmul 001A  
                 ___fltol 0D45                   ___lldiv 0CE5           __size_of___wmul 0021  
__size_of_lcd_send_string 0023                   ___lwdiv 0C2B                   adc_do@w 0074  
               _ANSELbits 0188                ??_adc_init 0072                   __ptext1 0B43  
                 __ptext2 055E                   __ptext3 0DB2                   __ptext4 0B61  
                 __ptext5 0C2B                   __ptext6 0D45                   __ptext7 001A  
                 __ptext8 0BA5                   __ptext9 0E57           __size_of_my_isr 000B  
                 _medeRPM 055E           __size_of_strcpy 001E     __size_of_lcd_send_cmd 003F  
              ??___xxtofl 0076                ??_lcd_init 0078      end_of_initialization 0016  
         ___lldiv@divisor 0072           ___lldiv@counter 0024                ?_I2C_start 0070  
              ?_I2C_write 0070              _lcd_send_cmd 0C67     __end_of_lcd_send_data 0CE5  
               _PORTCbits 0007               ___fladd@grs 0053             ___xxtofl@sign 0020  
             ___fldiv@grs 002C               ___fldiv@rem 0025                lcd_clear@i 0078  
       __size_of_I2C_init 0035        lcd_send_string@str 0078         __size_of_I2C_wait 0009  
              medeRPM@aux 0064         __size_of_I2C_stop 0007                medeRPM@tpr 005E  
             ___flmul@grs 0034            __end_of_adc_do 0BF6            __end_of___wmul 0B82  
     lcd_send_data@data_l 0076       lcd_send_data@data_u 0077            __end_of_my_isr 0B1A  
       ??_lcd_send_string 007A            __end_of_strcpy 0B61       start_initialization 000F  
             ??_I2C_start 0072               ??_I2C_write 0072                  ??_adc_do 0072  
                ??___wmul 0076                 __Umul8_16 0BA5                  ??_my_isr 0070  
                ??_strcpy 0073                 ___fladd@a 0044                 ___fladd@b 0040  
               ___fldiv@a 0072                 ___fldiv@b 0076         __size_of_adc_init 0012  
               ___flmul@a 002A                 ___flmul@b 0026                 ___latbits 0002  
           __pcstackBANK0 0020         lcd_send_data@data 0075         __size_of___xxtofl 00A5  
       __size_of_lcd_init 0017          ___lwdiv@dividend 0074                  ?___fladd 0040  
                ?___fldiv 0072                  ?___flmul 0026                  ?___fltol 0040  
                ?___lldiv 0072                ?__Umul8_16 0072                  ?___lwdiv 0072  
               _lcd_clear 07BA                 __pstrings 0800                  ?_medeRPM 0070  
                _I2C_init 0BF6                  _I2C_wait 0AFD                  _I2C_stop 07F9  
        ___lwdiv@quotient 0077         interrupt_function 0004            ___wmul@product 0076  
              ?_lcd_clear 0070                _ADCON0bits 001F               __stringbase 080F  
       ___wmul@multiplier 0072           _lcd_send_string 0B82               ??__Umul8_16 0074  
        __size_of___fladd 022F          __size_of___fldiv 01A9          __size_of___flmul 0315  
        __size_of___fltol 006D          __size_of___lldiv 0060          __size_of___lwdiv 003C  
      __end_of__stringtab 0810                  _adc_init 0B1A          __size_of_medeRPM 01B1  
                ___xxtofl 0DB2           ___lwdiv@divisor 0072           ___lwdiv@counter 0079  
                __ptext10 032F                  __ptext11 0B82                  __ptext20 0B1A  
                __ptext12 0B2C                  __ptext21 0BC8                  __ptext13 07BA  
                __ptext22 0BF6                  __ptext14 0CA6                  __ptext23 0CE5  
                __ptext15 0C67                  __ptext24 0B0F                  __ptext16 0B06  
                __ptext17 07F9                  __ptext18 0AF6                  __ptext19 0AFD  
                _lcd_init 0B2C                strcpy@from 0072    __size_of_lcd_send_data 003F  
           __size_of_main 00AB               ??_lcd_clear 0078                _INTCONbits 000B  
                intlevel1 0000          ___lldiv@dividend 0076   __end_of_lcd_send_string 0BA5  
               stringcode 080A             I2C_init@clock 0025             _lcd_send_data 0CA6  
  __Umul8_16@multiplicand 0072                _OPTION_REG 0081          ___lldiv@quotient 0020  
                strcpy@cp 0075                  strcpy@to 0074                  stringdir 080A  
                stringtab 0800             ___fladd@signs 0050              ___fladd@aexp 0051  
            ___fladd@bexp 0052      __Umul8_16@multiplier 007A         __Umul8_16@product 0076  
